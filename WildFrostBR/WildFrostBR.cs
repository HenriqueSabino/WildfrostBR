using Deadpan.Enums.Engine.Components.Modding;
using UnityEngine.Localization;
using UnityEngine;
using UnityEngine.Localization.Settings;
using System.IO;
using TMPro;

namespace WildfrostBR
{
    public class WildfrostBR : WildfrostMod
    {
        // Change this to your translation language
        public static readonly LocaleIdentifier ModLanguage = new LocaleIdentifier(SystemLanguage.Portuguese);

        public static WildfrostBR Mod { get;  internal set; }

        public WildfrostBR(string modDirectory) : base(modDirectory)
        {
            Mod = this;
        }

        public override string GUID => "herebin.wildfrost.wildfrost_br";

        public override string[] Depends => new string[] { };

        public override string Title => "Wildfrost BR";

        public override string Description => "Adiciona português brasileiro ao jogo! Suporte a outros mods:\n" +
            " - Blahaj and Friends\n" +
            " - Pokefrost\n" +
            " - Snowfall\n" +
            " - Hollowfrost Mod\n" +
            " - Profile Manager\n" +
            " - The Backflip Mod\n" +
            " - Mod Uploader\n" +
            " - Bethan's Charms\n\n" +
            "------------ English ------------ \n\n" +
            "Adds Brazilian Portuguese language to the game! Other mods support:\n" +
            " - Blahaj and Friends\n" +
            " - Pokefrost\n" +
            " - Snowfall\n" +
            " - Hollowfrost Mod\n" +
            " - Profile Manager\n" +
            " - The Backflip Mod\n" +
            " - Mod Uploader\n" +
            " - Bethan's Charms";

        public override void Load()
        {
            base.Load();

            Events.OnGameStart += SetCurrentLocale;
            LocalizationSettings.SelectedLocaleChanged += ChangeGameFont;

            LocalizationHelper.TryAddLocale(ModLanguage);

            this.SetBattleLogLocalizations();
            this.SetCardTextLocalizations();
            this.SetCardsLocalizations();
            this.SetChallengesLocalizations();
            this.SetCreditsLocalizations();
            this.SetEffectsLocalizations();
            this.SetJournalLocalizations();
            this.SetModifiersLocalizations();
            this.SetSpeechLocalizations();
            this.SetStatsLocalizations();
            this.SetTooltipsLocalizations();
            this.SetUITextLocalizations();
            this.SetUpgradesLocalizations();
        }

        public override void Unload()
        {
            Events.OnGameStart -= SetCurrentLocale;
            LocalizationSettings.SelectedLocaleChanged -= ChangeGameFont;

            base.Unload();
        }

        private void SetCurrentLocale()
        {
            Locale locale = LocalizationHelper.TryAddLocale(ModLanguage);

            if (LocalizationSettings.SelectedLocale != null && Settings.Load("Language", "") == locale.Identifier)
            {
                LocalizationSettings.SelectedLocale = locale;
            }
        }
       
        private static void ChangeGameFont(Locale locale)
        {
            if (locale.Identifier != ModLanguage)
            {
                return;
            }

            var newFont = TMP_FontAsset.CreateFontAsset(new Font(Path.Combine(Mod.ModDirectory, "Clink-Regular-Diacritics.ttf")));
            var fontSetter = Object.FindObjectOfType<FontSetterSystem>();

            TMP_FontAsset originalFont;
            if (fontSetter.defaultFontRef.IsValid())
            {
                originalFont = (TMP_FontAsset)fontSetter.defaultFontRef.OperationHandle.WaitForCompletion();
            }
            else
            {
                originalFont = fontSetter.defaultFontRef.LoadAssetAsync().WaitForCompletion();
            }

            newFont.faceInfo = originalFont.faceInfo;

            fontSetter.defaultFontRef.ReleaseAsset();

            FontSetterSystem.current = newFont;
            FontSetterSystem.UpdateFontSetters();
        }

        private void SetBattleLogLocalizations()
        {
            var table = LocalizationHelper.GetCollection("Battle Log", ModLanguage);

            table.AddEntry("Log Turn", "TURNO {0}");
            table.AddEntry("Log Hit", "{0} atinge {1}, dando [{2} de dano]");
            table.AddEntry("Log Damage", "{0} toma [{1} de dano]");
            table.AddEntry("Log Special Damage", "{0} toma [{1} de dano] de {2}");
            table.AddEntry("Log Destroy", "{0} morre!");
            table.AddEntry("Log Block", "{0} bloqueia [{1} de dano]");
            table.AddEntry("Log Status", "[{1}]<sprite name={2}> aplicado em {0}");
            table.AddEntry("Log Status From", "{0} aplica [{2}]<sprite name={3}> em {1}");
            table.AddEntry("Log Heal", "{0} cura {1}");
            table.AddEntry("Log Restored", "<sprite name=health> de {0} restaurada por [{1}]");
            table.AddEntry("Log Boost", "{0} aprimora os efeitos de {1} por [{2}]");
            table.AddEntry("Log Increase Attack", "{0} aumenta o <sprite name=attack> de {1} por [{2}]");
            table.AddEntry("Log Reduce Attack", "{0} reduz o <sprite name=attack> de {1} by [{2}]");
            table.AddEntry("Log Increase Health", "{0} aumenta a <sprite name=health> de {1} em [{2}]");
            table.AddEntry("Log Reduce Health", "{0} reduz a <sprite name=health> de {1} em [{2}]");
            table.AddEntry("Log Consumed", "{0} é consumido!");
            table.AddEntry("Log Increase Attack Self", "{0} ganha [+{1}]<sprite name=attack>");
            table.AddEntry("Log Reduce Attack Self", "{0} perde [{1}]<sprite name=attack>");
            table.AddEntry("Log Increase Health Self", "{0} ganhou [+{1}]<sprite name=health>");
            table.AddEntry("Log Reduce Health Self", "{0} perde [{1}]<sprite name=health>");
            table.AddEntry("Log Increase Counter", "{0} aumenta o <sprite name=counter> de {1} em [{2}]");
            table.AddEntry("Log Increase Counter Self", "<sprite name=counter> de {0} aumenta em [{1}]");
            table.AddEntry("Log Reduce Counter", "{0} reduz o <sprite name=counter> de {1} em [{2}]");
            table.AddEntry("Log Reduce Counter Self", "<sprite name=counter> de {0} reduzido em [{1}]");
            table.AddEntry("Log Battle Win", "Batalha vencida!");
            table.AddEntry("Log Battle Lose", "Batalha perdida :(");
            table.AddEntry("Log Flee", "{0} foge!");
            table.AddEntry("Log Eaten", "{0} é devorado!");
            table.AddEntry("Log Sacrificed", "{0} é sacrificado!");
            table.AddEntry("Log Enter Battle", "{0} entra na batalha!");
            table.AddEntry("Log Recalled", "{0} é retornado");
            table.AddEntry("Log Summoned", "{0} é invocado!");
        }

        private void SetCardTextLocalizations()
        {
            var table = LocalizationHelper.GetCollection("Card Text", ModLanguage);

            table.AddEntry("Deal additional damage equal to Tar Blades in hand", "Dê dano adicional igual a quantidade de  <Lâminas Sombrias> na mão");
            table.AddEntry("Deal additional damage equal to X", "Dê dano adicional igual a {0}");
            table.AddEntry("Deal additional damage equal to X on the board", "Dê dano adicional igual a {0} no tabuleiro");
            table.AddEntry("Deal damage equal to X", "Dê dano igual a {0}");
            table.AddEntry("Destroy self", "Destrua-se");
            table.AddEntry("Double the target's X", "Dobra o {0} do alvo");
            table.AddEntry("Restore X", "Restaura {0}");
            table.AddEntry("Increase X by", "Aumenta {0} em <{a}>");
            table.AddEntry("While damaged, X is increased by", "Enquanto ferido, {0} é aumentado em <{a}>");
            table.AddEntry("Add their X to all allies", "Adicione o(a) {0} deles(as) a todos os aliados");
            table.AddEntry("Add X", "Adicione {0}");
            table.AddEntry("Add X to your hand", "Adicione {0} para sua mão");
            table.AddEntry("Add X to a random ally", "Adicione {0} a um aliado aleatório");
            table.AddEntry("Gain X", "Ganhe {0}");
            table.AddEntry("Apply X to a random ally or enemy", "Aplique {0} a um aliado ou inimigo aleatório");
            table.AddEntry("Apply X to a random enemy", "Aplique {0} a um inimigo aleatório");
            table.AddEntry("Apply X to front enemy", "Aplique {0} no inimigo da frente");
            table.AddEntry("Apply X to a random ally", "Aplique {0} a um aliado aleatório");
            table.AddEntry("Apply X to all enemies", "Aplique {0} em todos os inimigos");
            table.AddEntry("Apply X to enemies in the row", "Aplique {0} em inimigos na faixa");
            table.AddEntry("Deal damage to all X'd enemies", "Dê <{a}> de dano a todos inimigos com {e}");
            table.AddEntry("Deal damage to self and allies in the row", "Dê <{a}> de dano a si mesmo(a) e a aliados na faixa");
            table.AddEntry("Deal damage to all undamaged enemies", "Dê <{a}> de dano a todos inimigos não feridos");
            table.AddEntry("Lose X", "Perca {0}");
            table.AddEntry("Reduce by X when played", "Reduza em {0} quando jogado");
            table.AddEntry("Kill a random ally", "Mate um aliado aleatório");
            table.AddEntry("Take X from all allies", "Tire {e} de todos os aliados");
            table.AddEntry("Also hits ally behind", "Também atinge o aliado atrás");
            table.AddEntry("Deal additional damage to damaged targets", "De <{a}> de dano adicional a alvos feridos");
            table.AddEntry("Deal additional damage to X'd targets", "Dê <{a}> de dano adicional em alvos com {e}");
            table.AddEntry("Restore X equal to damage dealt to front ally", "Restaure {0} para o aliado da frente igual ao dano dado");
            table.AddEntry("Apply X equal to damage dealt", "Aplique {0} igual ao dano dado");
            table.AddEntry("Gain X on kill", "Ganhe {0} em abates");
            table.AddEntry("On kill, apply X to all allies", "Em abates, aplique {0} em todos os aliados");
            table.AddEntry("On kill, apply X to a random ally", "Em abates, aplique {0} a um aliado aleatório");
            table.AddEntry("On kill, apply X to a random enemy", "Em abates, aplique {0} a um inimigo aleatório");
            table.AddEntry("Restore X on kill", "Restaure {0} em abates");
            table.AddEntry("On kill, restore X to self and allies in the row", "Em abates, restaure {0} a si mesmo(a) e aliados na faixa");
            table.AddEntry("Apply X to ally behind", "Aplique {0} ao aliado atrás");
            table.AddEntry("Apply X to all allies", "Aplique {0} em todos aliados");
            table.AddEntry("Apply X to ally ahead", "Aplique {0} ao aliado à frente");
            table.AddEntry("Eat a random ally, absorbing their attack, health and effects", "Devore um aliado aleatório, absorvendo seu <keyword=attack>, <keyword=health> e efeitos");
            table.AddEntry("Escape from the battle", "Escape da batalha");
            table.AddEntry("Restore X to all allies", "Restaure {0} a todos aliados");
            table.AddEntry("Eat allies in the row, absorbing their attack and health", "Devore aliados na faixa, absorvendo  seus <keyword=attack> e <keyword=health>");
            table.AddEntry("Take X from a random ally in order to attack", "Tire {e} de um aliado aleatório para atacar");
            table.AddEntry("Count down X by", "Diminua {0} em <{a}>");
            table.AddEntry("Reduce X by", "Reduza {0} em <{a}>");
            table.AddEntry("Kill an ally", "Mate um aliado");
            table.AddEntry("Kill an enemy", "Mate um inimigo");
            table.AddEntry("Summon X", "Invoque {0}");
            table.AddEntry("Summon X on the enemy side", "Invoque {0} no lado inimigo");
            table.AddEntry("Trigger against the target when an ally attacks", "Ativa contra o mesmo alvo quando um aliado atacar");
            table.AddEntry("Trigger against anything that is hit with X", "Ativa contra qualquer coisa que é atingida com {e}");
            table.AddEntry("Trigger when an ally attacks", "Ativa quando um aliado atacar");
            table.AddEntry("Trigger when an ally in the row attacks", "Ativa quando um aliado na faixa atacar");
            table.AddEntry("Trigger when an ally is hit", "Ativa quando um aliado for atingido");
            table.AddEntry("When an ally is healed, apply equal X", "Quando um aliado é curado, aplique {0} igual a cura");
            table.AddEntry("When an ally is hit, apply X to the attacker", "Quando um aliado é atingido, aplique {0} ao atacante");
            table.AddEntry("When an ally is hit, restore their X by", "Quando um aliado é atingido, restaure {0} por <{a}>");
            table.AddEntry("Gain X when an ally is killed", "Ganhe {0} quando um aliado morrer");
            table.AddEntry("When an ally is sacrificed, gain their X", "Quando um aliado é <keyword=sacrificed>, ganhe o {0} dele(a)");
            table.AddEntry("Trigger when an ally is sacrificed", "Ativa quando um aliado é <keyword=sacrificed>");
            table.AddEntry("Whenever anything takes damage from shroom, gain X", "Quando qualquer coisa tomar dano por <keyword=shroom>, ganhe {0}");
            table.AddEntry("When built, add X to your hand", "Quando construído, adicione {0} a sua mão");
            table.AddEntry("When deployed, gain X", "Quando posto(a), ganhe {0}");
            table.AddEntry("When deployed, apply X to all allies", "Quando posto(a), aplique {0} em todos aliados");
            table.AddEntry("When deployed, copy the effects of a random enemy", "Quando posto(a), copie os efeitos de um inimigo aleatório");
            table.AddEntry("When deployed, summon X", "Quando posto(a), invoque {0}");
            table.AddEntry("When destroyed, deal damage to allies in the row", "Quando destruído(a), dê <{a}> de dano em aliados na faixa");
            table.AddEntry("When destroyed, add X to a random ally", "Quando destruído(a), adicione {0} a um aliado aleatório");
            table.AddEntry("When destroyed, apply X to the attacker", "Quando destruído(a), aplique {0} ao atacante");
            table.AddEntry("When destroyed, apply X to all allies", "Quando destruído(a), aplique {0} a todos aliados");
            table.AddEntry("When destroyed, summon X", "Quando destruído(a), invoque {0}");
            table.AddEntry("When destroyed, trigger all allies", "Quando destruído(a), ative todos aliados");
            table.AddEntry("When an enemy attacks, apply X to them", "Quando um inimigo atacar, aplique {0} a ele(a)");
            table.AddEntry("When a shroom'd enemy dies, apply their X to a random enemy", "Quando um inimigo com <keyword=shroom> morrer, aplique seu {0} a um inimigo aleatório");
            table.AddEntry("When an enemy is killed, gain X", "Quando um inimigo for abatido, ganhe {0}");
            table.AddEntry("When an enemy is killed, apply X to the attacker", "Quando um inimigo for abatido, aplique {0} ao atacante");
            table.AddEntry("When healed, gain X", "Quando curado, ganhe {0}");
            table.AddEntry("When health lost, gain equal X", "Quando perder <keyword=health>, ganhe {0} igual");
            table.AddEntry("When hit, gain X", "Quando atingido(a), ganhe {0}");
            table.AddEntry("When hit, add lost X to a random ally", "Quando atingido(a), adicione {0} perdido(a) a um aliado aleatório");
            table.AddEntry("When hit, apply X to a random ally", "Quando atingido(a), aplique {0} a um aliado aleatório");
            table.AddEntry("When hit, apply X to the attacker", "Quando atingido(a), aplique {0} ao atacante");
            table.AddEntry("When hit, apply X to all enemies", "Quando atingido(a), aplique {0} em todos inimigos");
            table.AddEntry("Drop X when hit", "Largue {0} Quando atingido(a)");
            table.AddEntry("When hit, apply X to a random enemy", "Quando atingido(a), aplique {0} a um inimigo aleatório");
            table.AddEntry("When hit, apply X to ally behind", "Quando atingido(a), aplique {0} ao aliado atrás");
            table.AddEntry("When hit, apply X to all allies", "Quando atingido(a), aplique {0} a todos aliados");
            table.AddEntry("When hit, apply X to everyone in the battle", "Quando atingido(a), aplique {0} a todos na batalha");
            table.AddEntry("When hit, apply X to allies in the row", "Quando atingido(a), aplique {0} a todos aliados na faixa");
            table.AddEntry("When hit, deal damage to all enemies", "Quando atingido(a), dê <{a}> de dano a todos inimigos");
            table.AddEntry("When hit, deal damage to enemies in the row", "Quando atingido(a), dê <{a}> de dano a inimigos na faixa");
            table.AddEntry("X when hit", "{0} Quando atingido(a)");
            table.AddEntry("When hit, deal equal damage to the attacker", "Quando atingido(a), dê dano igual ao atacante");
            table.AddEntry("Increase by X when hit", "Aumenta em {0} Quando atingido(a)");
            table.AddEntry("When hit, add X to a random ally", "Quando atingido(a), adicione {0} a um aliado aleatório");
            table.AddEntry("When hit, reduce the attacker's X by", "Quando atingido(a), reduza o(a) {0} do atacante em <{a}>");
            table.AddEntry("When hit, reduce X by", "Quando atingido(a), reduza {0} em <{a}>");
            table.AddEntry("When hit, count down X by", "Quando atingido(a), diminua {0} em <{a}>");
            table.AddEntry("Trigger when hit", "Ativa Quando atingido(a)");
            table.AddEntry("When sacrificed, summon X", "Quando <keyword=sacrificed>, invoque {0}");
            table.AddEntry("Whenever anything is shroom'd, double the amount and lose X", "Quando qualquer coisa receber <keyword=shroom>, dobre o valor e perca {0}");
            table.AddEntry("Whenever anything is snow'd, gain X", "Quando qualquer coisa receber <keyword=snow>, ganhe {0}");
            table.AddEntry("Whenever anything is snow'd, gain equal X", "Quando qualquer coisa receber <keyword=snow>, ganhe {0} igual");
            table.AddEntry("When snow'd, apply X to all enemies", "Quando receber <keyword=snow>, aplique {0} a todos inimigos");
            table.AddEntry("Trigger when X reaches", "Ativa quando {e} atingir <{a}>");
            table.AddEntry("While active, add X to all enemies", "Enquanto ativo(a), adicione {0} a todos inimigos");
            table.AddEntry("While active, allies gain X", "Enquanto ativo(a), aliados ganham {0}");
            table.AddEntry("While active, add X to all allies", "Enquanto ativo(a), adicione {0} a todos aliados");
            table.AddEntry("While active, add X to crown'd allies", "Enquanto ativo(a), adicione {0} a aliados com <sprite name=crown>");
            table.AddEntry("While active, all allies retain X", "Enquanto ativo(a), todos aliados retém {0}");
            table.AddEntry("While active, add current X to all Summoned allies", "Enquanto ativo(a), adicione {0} atual a todos aliados <Invocados>");
            table.AddEntry("While active, add X to everyone in the battle", "Enquanto ativo(a), adicione {0} a todos na batalha ");
            table.AddEntry("While active, add X to allies in the row", "Enquanto ativo(a), adicione {0} a todos aliados na faixa");
            table.AddEntry("While active, add X to Items in your hand", "Enquanto ativo(a), adicione {0} a <Itens> na sua mão");
            table.AddEntry("While active, boost the effects of the front ally by", "Enquanto ativo(a), melhor os efeitos do aliado da frente em <{a}>");
            table.AddEntry("Apply X", "Aplique {0}");
            table.AddEntry("While active, add attack to all allies and reduce attack to all enemies", "Enquanto ativo(a), adicione <+{s0}><keyword=attack> a todos aliados e <-{s1}><keyword=attack> a todos inimigos");
            table.AddEntry("Target must be X'd", "Alvo precisa estar com {e}");
            table.AddEntry("Destroy a card in your hand", "Destrua uma carta na sua mão");
            table.AddEntry("Summon a copy of an enemy on your side with health", "Invoque uma cópia de um inimigo com <{a}><keyword=health>");
            table.AddEntry("Summon a copy of an ally", "Invoque uma cópia de um aliado");
            table.AddEntry("Make a copy of an item in your hand", "Faça uma cópia de um <Item> na sua mão");
            table.AddEntry("Gain X when an ally is hit", "Ganhe {0} quando um aliado é atingido");
            table.AddEntry("X on kill", "{0} em abates");
            table.AddEntry("When destroyed, deal damage to enemies in row", "Quando destruído(a), dê <{a}> de dano a inimigos na faixa");
            table.AddEntry("Add a X to a card in your hand", "Adicione {0} a uma carta na mão");
            table.AddEntry("On kill, add X to self and allies", "Em abates, adicione {0} em si mesmo(a) e todos aliados");
            table.AddEntry("When an ally is killed, gain their X", "Quando um aliado é morto, ganhe seu {0}");
            table.AddEntry("Trigger when an ally is killed", "Ativa quando um aliado é morto");
            table.AddEntry("When an enemy is deployed, copy their effects", "Quando um aliado é posto, copie seus efeitos");
            table.AddEntry("While active, add current X to all allies", "Enquanto ativo(a), adicione atual {0} a todos aliados");
            table.AddEntry("While active, boost the effects of allies and enemies by", "Enquanto ativo, aumente os efeitos de todos os aliados e inimigos em <{a}>");
            table.AddEntry("When consumed, apply X to all enemies", "Quando consumido, aplique {0} em todos inimigos");
            table.AddEntry("When drawn, trigger against a random ally or enemy", "Quando comprado, ative contra um aliado ou inimigo aleatório");
            table.AddEntry("When drawn, trigger against all crown allies", "Quando comprado, ative contra todos os aliados com <sprite name=crown>");
            table.AddEntry("When drawn, trigger against a random ally", "Quando comprado, ative contra um aliado aleatório");
            table.AddEntry("When drawn, apply X to all allies", "Quando comprado, aplique {0} a todos aliados");
            table.AddEntry("While in hand, reduce X of all allies by", "Enquanto na mão, reduza {0} de todos aliados em <{a}>");
            table.AddEntry("Reduce X of an ally by", "Reduza {0} de um aliado em <{a}>");
            table.AddEntry("When an ally is hit, apply X to them", "Quando um aliado é atingido, aplique {0} a ele");
            table.AddEntry("Trigger when an enemy is killed", "Ativa quando um inimigo é morto");
            table.AddEntry("When hit, add X to your hand", "Quando atingido(a), adicione {0} a sua mão");
            table.AddEntry("Add its X to a random ally", "Adicione seu {0} a um aliado aleatório");
            table.AddEntry("Add X to the target", "Adicione {0} ao alvo");
            table.AddEntry("Reduce the target's effects by", "Reduza os efeitos do alvo em <{a}>");
            table.AddEntry("Boost a random ally's effects by", "aumente os efeitos de um aliado aleatório em <{a}>");
            table.AddEntry("Destroy all cards in your hand", "Destrua todas as cartas na sua mão");
            table.AddEntry("Gain X for each card destroyed", "Ganhe {0} para cada carta destruída");
            table.AddEntry("When a card is destroyed, gain X", "Quando uma carta é destruída, ganhe {0}");
            table.AddEntry("When a card is destroyed, count down X by", "Quando uma carta é destruída, diminua {0} em <{a}>");
            table.AddEntry("When deployed, add X to your hand", "Quando posto(a), adicione {0} a sua mão");
            table.AddEntry("Destroy the rightmost card in your hand", "Destrua a carta mais a direita da sua mão");
            table.AddEntry("Deal damage to an X'd target equal to their X", "Dê dano a um alvo com {0} igual a o(a) {0} dele");
            table.AddEntry("Destroy a random card in your hand", "Destrua uma carta aleatória na sua mão");
            table.AddEntry("When destroyed, deal damage to all enemies", "Quando destruído(a), dê <{a}> de dano a todos inimigos");
            table.AddEntry("When destroyed, deal damage to all enemies equal to X", "Quando destruído, dê dano em todos inimigos igual a {0}");
            table.AddEntry("Trigger against an ally when they are hit", "Ativa contra um aliado atacado");
            table.AddEntry("When a card is destroyed, apply X to a random ally", "Quando uma carta é destruída, aplique {0} a um aliado aleatório");
            table.AddEntry("When juice'd, gain X", "Quando receber <keyword=juice>, ganhe {0}");
            table.AddEntry("Trigger multiple times equal to X", "Ativa várias vezes igual a {0}");
            table.AddEntry("Hit all enemies", "Atinja todos inimigos");
            table.AddEntry("Boost a random enemy's effects by", "aumente os efeitos de um inimigo aleatório em <{a}>");
            table.AddEntry("Hit all X'd enemies", "Atinge todos inimigos com {0}");
            table.AddEntry("Double X", "Dobre atual {0}");
            table.AddEntry("On kill, apply X to ally behind", "Em abates, aplique {0} ao aliado atrás");
            table.AddEntry("Count down ally ahead's X by", "Diminua o(a) {0} do aliado à frente em <{a}>");
            table.AddEntry("Trigger when Redraw Bell is hit", "Ativa quando o Sino de Recompra é tocado");
            table.AddEntry("Trigger when X is destroyed", "Ativa quando {0} é destruído");
            table.AddEntry("Hit all undamaged enemies", "Atinja todos inimigos não feridos");
            table.AddEntry("Use a random Item in your hand on a random enemy", "Use um item aleatório <Item> da sua mão em um inimigo aleatório");
            table.AddEntry("Whenever X is applied, double the amount", "Quando {0} for aplicado(a), dobre a quantidade");
            table.AddEntry("Count down all allies' X by", "Diminua o {0} de todos aliados em <{a}>");
            table.AddEntry("Destroy a random X in your hand", "Destrua um {0} aleatório na sua mão");
            table.AddEntry("Trigger a random ally", "Ativa um aliado aleatório");
            table.AddEntry("Add X to an Item in your hand", "Adicione {0} a um <Item> na sua mão");
            table.AddEntry("Destroy all Items in your hand", "Destrua todos os <Itens> na sua mão");
            table.AddEntry("Add X to an enemy", "Adicione {0} a um inimigo");
            table.AddEntry("When health lost, summon a X with health equal to the amount lost", "Quando perder <keyword=health>, Invoque um {0} com <keyword=health> igual a quantidade perdida");
            table.AddEntry("When an ally is killed, lose half health and gain {0}", "Quando um aliado é morto, perca metade <keyword=health> e ganhe {0}");
            table.AddEntry("Split when health lost", "<keyword=split> quando perder <keyword=health>");
            table.AddEntry("Hit enemy with lowest health", "Atinge o inimigo com menor <keyword=health>");
            table.AddEntry("Boost the target's effects by", "Melhora os efeitos do alvo em <{a}>");
            table.AddEntry("When hit with Junk, gain X", "Quando atingido(a) com <card=Junk>, ganhe {0}");
            table.AddEntry("While active, add X to all Junk in your hand", "Enquanto ativo(a), adicione {0} a todos <card=Junk> na sua mão");
            table.AddEntry("When health lost, add equal X to self and allies", "Quando perder <keyword=health>, adicione {0} igual a si mesmo(a) e aliados");
            table.AddEntry("When consumed, add X to all allies", "Quando consumido(a), adicione {0} a todos aliados");
            table.AddEntry("When snow'd, gain equal X", "Quando receber <keyword=snow>, ganhe {0} igual");
            table.AddEntry("When shell'd, gain X instead", "Quando receber <keyword=shell>, ganhe {0} no lugar");
            table.AddEntry("Before an enemy attacks, apply X to them", "Antes de um inimigo atacar, aplique {0} a ele");
            table.AddEntry("While active, add equal X to all Junk in your hand", "Enquanto ativo(a), adicione {0} igual a todos <card=Junk> na sua mão");
            table.AddEntry("Split when X health lost", "<keyword=split> quando perder <{a}><keyword=health>");
            table.AddEntry("Deal damage to self", "Dê <{a}> de dano a si mesmo(a)");
            table.AddEntry("Add Health and Attack to all Summoned allies", "Adicione <+{a}><keyword=attack> e <+{a}><keyword=health> a todos aliados <Invocados>");
            table.AddEntry("While active, add X to crown'd allies in the row", "Enquanto ativo(a), adicione {0} a aliados com <sprite name=crown> na faixa");
            table.AddEntry("Add X to an ally", "Adicione {0} a um aliado");
            table.AddEntry("Add X to a random enemy", "Adicione {0} a um inimigo aleatório");
            table.AddEntry("Eat and Absorb a random ally", "Devore e <keyword=absorb> um aliado aleatório");
            table.AddEntry("Before attacking, eat allies in the row, absorbing their attack and health", "Antes de atacar, devore aliados na faixa, absorvendo seus <keyword=attack> e <keyword=health>");
            table.AddEntry("Add Health and Attack to all allies", "Adicione <+{a}><keyword=attack> e <+{a}><keyword=health> a todos aliados");
            table.AddEntry("Retains X", "Retem {0}");
            table.AddEntry("When destroyed, add X to all allies", "Quando destruído(a), adicione {0} a todos aliados");
            table.AddEntry("Take X", "Tome {0}");
            table.AddEntry("Apply X to allies in the row", "Aplique {0} a aliados na faixa");
            table.AddEntry("Restore X and Cleanse all allies", "Restaure {0} e <keyword=cleanse> todos aliados");
            table.AddEntry("When an ally is healed, apply double X", "Quando um aliado é curado, aplique {0} em dobro");
            table.AddEntry("When deployed, copy the effects of a random enemy in the row", "Quando posto(a), copie os efeitos de um inimigo aleatório na faixa");
            table.AddEntry("When destroyed, deal damage to all allies", "Quando destruído(a), dê <{a}> de dano a todos aliados");
            table.AddEntry("While active, add X to non-crown'd allies", "Enquanto ativo(a), adicione {0} a aliados sem <sprite name=crown>");
            table.AddEntry("Before triggering, gain X equal to scrap", "Antes de ativar, ganhe {0} igual a <keyword=scrap>");
            table.AddEntry("When destroyed, apply X to the attacker and double their attack", "Quando destruído, aplique {0} ao atacante e dobre o <keyword=attack> dele");
            table.AddEntry("While active, Recycle effects require less Junk", "Enquanto ativo(a), todos efeitos de <Reciclar> requerem <{a}> <Lixo> a menos");
            table.AddEntry("Gain X when self or an ally is hit", "Ganhe {0} quando atingido(a), ou quando um aliado é morto");
            table.AddEntry("Increase X of all allies by", "Aumente {0} de todos aliados em <{a}>");
            table.AddEntry("Increase X of a random ally by", "Aumente {0} de um aliado aleatório em <{a}>");
            table.AddEntry("Add X to all allies", "Adicione {0} a todos aliados");
            table.AddEntry("Deal additional damage equal to the highest enemy X", "De dano adicional igual ao maior {0} dos inimigos");
            table.AddEntry("When deployed, apply X to all enemies", "Quando posto(a), aplique {0} a todos inimigos");
            table.AddEntry("Summon a X copy of a random enemy", "Invoque uma copia {0} de um inimigo aleatório");
            table.AddEntry("When an ally is sacrificed, summon a copy of them with X health and X attack", "Quando um aliado é <keyword=sacrificed>, invoque uma cópia dele com <{a}><keyword=health> e <{a}><keyword=attack>");
            table.AddEntry("When an enemy is deployed, gain their X", "Quando um inimigo é posto, ganhe seu ataque {0}");
            table.AddEntry("When deployed, summon a copy of a random enemy with X", "Quando posto(a), invoque uma cópia de um inimigo aleatório com {0}");
            table.AddEntry("Killing an enemy counts as sacrificing an ally", "Matar um inimigo também conta como <Sacrificar> um aliado");
            table.AddEntry("Before attacking, kill all summoned allies and gain X for each", "Antes de atacar, mate todos aliados <Invocados> e ganhe {0} por cada um deles");
            table.AddEntry("When deployed, X and destroy all Junk in hand", "Quando posto(a), {0} e destrua todos <card=Junk> na sua mão");
            table.AddEntry("When hit, add X to self or ally with the lowest attack", "Quando atingido(a), adicione {0} a si mesmo(a) ou ao aliado com menor <keyword=attack>");
            table.AddEntry("When hit, add X to self or ally with the highest attack", "Quando atingido(a), adicione {0} a si mesmo(a) ou ao aliado com maior <keyword=attack>");
            table.AddEntry("When hit, add X to self or ally with the lowest health", "Quando atingido(a), adicione {0} a si mesmo(a) ou ao aliado com menor <keyword=health>");
            table.AddEntry("When hit, add X to self or ally with the highest health", "Quando atingido, adicione {0} a si mesmo(a) ou ao aliado com maior <keyword=health>");
            table.AddEntry("When hit, boost the effects of everyone else in the battle by", "Quando atingido(a), aumente os efeitos de todos os outros na batalha em <{a}>");
            table.AddEntry("When hit, boost the effects of a random ally or enemy by", "Quando atingido(a), aumente os efeitos de um aliado ou inimigo aleatório em <{a}>");
            table.AddEntry("While active, add X to all Clunker allies", "Enquanto ativo(a), adicione {0} a todas <Geringonças> aliadas");
            table.AddEntry("Sacrifice self and resummon", "Se <Sacrifique> e reinvoque-se");
            table.AddEntry("When sacrificed, add X to all allies and resummon", "Quando <keyword=sacrificed>, adicione {0} a todos os aliados e reinvoque-se");
            table.AddEntry("Destroy all Junk in hand", "Destrua todos <card=Junk> na sua mão");
            table.AddEntry("When deployed, add X to all Clunker allies", "Quando posto(a), adicione {0} a todas <Geringonças> aliadas");
            table.AddEntry("Before attacking, X and destroy all Junk in hand", "Antes de atacar, {0} e destrua todos <card=Junk> na sua mão");
            table.AddEntry("X and destroy all Junk in hand", "{0} e destrua todos <card=Junk> na sua mão");
            table.AddEntry("Destroy all Junk in hand and X for each", "Destrua todos <card=Junk> lixos na sua mão e {0} para cada um");
            table.AddEntry("When an enemy is deployed, apply X to them", "Quando um inimigo é posto, aplique {0} a ele");
            table.AddEntry("When destroyed, apply X to a random enemy", "Quando destruído(a), aplique {0} a um inimigo aleatório");
            table.AddEntry("While active, add X to ink'd allies and enemies", "Enquanto ativo(a), adicione {0} a aliados e inimigos <keyword=null>");
            table.AddEntry("When deployed, summon copies of all enemies with X", "Quando posto(a), invoque cópias de inimigos com {0}");
            table.AddEntry("When an enemy is deployed, summon a X copy of them", "Quando um inimigo é posto, invoque uma cópia {0} dele");
            table.AddEntry("When an enemy is deployed, take half of their X", "Quando um inimigo é posto(a), pegue metade de seu(ua) {0}");
            table.AddEntry("Before attacking, take X from all enemies", "Antes de atacar, pegue {0} de todos os inimigos");
            table.AddEntry("Before attacking, take X from a random enemy", "Antes de atacar, pegue {0} de um aliado aleatório");
            table.AddEntry("While active, reduce effects of all cards in hand by", "Enquanto ativo(a), reduza os efeitos de todas as cartas na mão em <{a}>");
            table.AddEntry("Before triggering, gain X for each card in hand", "Antes de ativar, ganhe {0} para cada carta na mão");
            table.AddEntry("When Redraw Bell is hit, gain X", "Quando o <Sino de Recompra> for tocado, ganhe {0}");
            table.AddEntry("Before attacking, destroy all Items in hand and gain X for each", "Antes de atacar, destrua todos <Itens> na mão e ganhe {0} por cada um");
            table.AddEntry("When an enemy is deployed, apply X to them and self", "Quando um inimigo é posto(a), aplique {0} a ele e a si mesmo(a)");
            table.AddEntry("Before triggering, copy the effects of a random ally", "Antes de ativar, copie os efeitos de um aliado aleatório");
            table.AddEntry("When hit, add X to ally with the lowest attack", "Quando atingido(a), adicione {0} ao aliado com menor <keyword=attack>");
            table.AddEntry("Trigger when an ally or enemy is killed", "Ativa quando um aliado ou inimigo é morto");
            table.AddEntry("When spice'd or shell'd, apply equal X to a random enemy", "Quando receber <keyword=spice> ou <keyword=shell>, aplique <keyword=shroom> na mesma quantidade a um inimigo aleatório");
            table.AddEntry("When X lost, deal damage to all enemies", "Quando perder {0}, dê <{a}> de dano a todos inimigos");
            table.AddEntry("Add X to a random card in your hand", "Adicione {0} a uma carta aleatória na sua mão");
            table.AddEntry("Add X to all cards in your hand", "Adicione {0} a todas as cartas na sua mão");
            table.AddEntry("While active, allies gain X when drawn", "Enquanto ativo(a), aliados ganham {0} quando comprados");
            table.AddEntry("Before attacking, gain X for each ally", "Antes de atacar, ganhe {0} por cada aliado");
            table.AddEntry("Destroy all Items in hand and X for each", "Destrua todos <Itens> na mão e {0} por cada um");
            table.AddEntry("Kill all summoned allies and gain X for each", "Mate todos aliados <Invocados> e ganhe {0} por cada um");
            table.AddEntry("When any status effect applied, apply equal X to a random enemy", "Quando qualquer status é recebido, aplique {0} na mesma quantidade a um inimigo aleatório");
            table.AddEntry("When an enemy is hit with an <Item>, apply X to them", "Quando um inimigo é atingido com um <Item>, aplique {0} nele");
            table.AddEntry("X", "{0}");
            table.AddEntry("When hit, boost the effects of a random ally and enemy by", "Quando atingido(a), aumente os efeitos de um aliado e inimigo aleatórios em <{a}>");
            table.AddEntry("Kill all summoned allies", "Mate todos aliados <Invocados>");
            table.AddEntry("Gain X when an ally is sacrificed", "Ganhe {0} quando um aliado é <keyword=sacrificed>");
            table.AddEntry("Trigger when self or ally loses X", "Ativa quando si mesmo(a) ou um aliado perder {0}");
            table.AddEntry("When hit, restore health by", "Quando atingido(a), restaure <keyword=health> em <{a}>");
            table.AddEntry("Kill ally ahead", "Mate o aliado à frente");
            table.AddEntry("X when an ally is sacrificed", "{0} quando um aliado é <keyword=sacrificed>");
            table.AddEntry("While active, add consume and X to Items in your hand", "Enquanto ativo(a), adicione <keyword=consume> e {0} a todos <Itens> na sua mão");
            table.AddEntry("Also hits ally ahead", "Também atinge aliado à frente");
            table.AddEntry("Boost the effects of everyone in the battle by", "Melhore os efeitos de todos inimigos e aliado em <{a}>");
            table.AddEntry("When destroyed, apply X to all enemies and allies", "Quando destruído(a), aplique {0} a todos inimigos e aliados");
            table.AddEntry("Increase Effects_text", "Melhora os efeitos em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Sneak_title", "Espreitar");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Sneak_desc", "Araques ignoram Contragolpe & efeitos de \"quando atingido(a)\"");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.TargetLeader_title", "Líder-alvo");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.TargetLeader_desc", "Sempre mira no líder inimigo");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Sponge_title", "Esponja");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Sponge_desc", "Ao invés de receber <keyword=null>, restaure <keyword=health> na mesma quantidade");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Upgradeable_title", "Potencial");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Upgradeable_desc", "Pode ascender de alguma forma…");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Pincer_title", "Pinça");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Pincer_desc", "Atinge o alvo mais próximo e o mais distante da faixa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Unhealable_title", "Incurável");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Unhealable_desc", "Não pode ser curado");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Wash_title", "Lavar");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Wash_desc", "Remove todos efeitos aplicados");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Limit_title", "Limite");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Limit_desc", "Limite é reduzido em <1> a cada uso, carta é consumida quando o limite é atingido.");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Wrath_title", "Fúria");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Wrath_desc", "Ganhe <keyword=attack> em abates");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Feral_title", "Feroz");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Feral_desc", "Quando uma unidade <keyword=wild> é morta, ganhe <x1> <keyword=frenzy> e perca <1> <Feroz>. Quando ativar, perca <1> <Feroz>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Bankrupt_title", "Falido");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Bankrupt_desc", "Quando morto(a), combos ativos dão <3><keyword=blings> a menos");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ImmuneReduction_title", "Resiliente");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ImmuneReduction_desc", "Efeitos não podem ser reduzidos");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Gift_title", "Presente");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Gift_desc", "Quando morto, aplique <1> <keyword=block> ao atacante");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Enhanced_title", "Melhorado(a)");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Enhanced_desc", "<+10><keyword=health> (<+3><keyword=scrap> para <Geringonças>), <+2><keyword=attack>, e status/efeitos são aumentados em <1>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ReduceOwnMaxCounter_text", "Reduz próprio <keyword=counter> em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.TriggerWhenRedrawHit_text", "Ativa quando o Sino de Recompra é tocado");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WhileInHandItemsTakeGold_text", "Enquanto na mão, perca <{a}> <keyword=blings> quando usar um item");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.AddFickleHandToHand_text", "Adicione uma Mão Joken a sua mão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.AddFickleHandToHandOnPlay_text", "Adicione <{a}> Mão{pl} Joken a sua mão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.TakeDamageWhenAllyHitByEnemy_text", "Quando um aliado é atingido por um inimigo, tome <{a}> de dano");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.StealGoldOnPlayText_text", "Perca <{a}> <keyword=blings>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ApplyExplodeOnPlay_text", "Aplique <{a}> <keyword=explode>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WhenHitGainSnow_text", "Quando atingido(a), ganhe <{a}> <keyword=snow>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.RomeoEffect_text", "Quando um aliado na faixa é morto, se sacrifique");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.CountDownTargetOnPlay_text", "Diminua o <keyword=counter> do alvo em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.OnPlayReduceAttackToSelf_text", "Reduza o <keyword=attack> em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SnowEqualToFrost_text", "Troque <keyword=frost> por <keyword=snow> na mesma quantidade");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ReduceCounterRow_text", "Diminua o <keyword=counter> dos aliados na faixa em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.CountDownAlliesHitByItems_text", "Quando um aliado é atingido por um item, diminua o <keyword=counter> dele em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ExtraDMGCounter_text", "Dê <keyword=attack> adicional igual ao <keyword=counter>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.IncreaseAllAlliesHealth_text", "Aumente <keyword=health> de todos aliados em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.CleanseAllAlliesIfUndamaged_text", "Se não estiver ferido, <keyword=cleanse> todos aliados");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.PunishFrost_text", "Quando um aliado é atingido, aplique <{a}> <keyword=frost> ao atacante");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.OnKillGainScrap_text", "Ganhe <{a}> <keyword=scrap> em abates");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.OnTurnAddFrostOrGainDmg_text", "Se o alvo tem <keyword=frost>, ganhe <{a}> <keyword=attack>, senão aplique <{a}> <keyword=frost>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.HealAndReduceHealing_text", "Restaure <{a}> <keyword=health>\r\nReduza pela quantidade curada");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WhileActiveReduceEffectsFromFrost_text", "Enquanto ativo(a), reduza efeitos de unidade a cada <{a}> <keyword=frost> que elas têm");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.OnKillGainBlings_text", "Ganhe <{a}> <keyword=blings> em abates");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.OnNonKillSummonRoshaHands_text", "Senão, ganhe <{a}> Mãos Joken");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ApplyDemonizeToStatusedTargetsOnPlay_text", "Aplique <{a}> <keyword=demonize> a todas unidade com um status aplicado");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.AverageAllCounters_text", "Defina o <keyword=counter> de todas unidade para sua média");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BoostAllyAheadOnPlay_text", "Aumenta os efeitos do aliado à frente em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SummonMazkin_text", "Invoque <card=Wildfrost.Jacorb.Snowfall.Mazkin>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.StackEffectWhenRedrawBellRung_text", "Quando o Sino de Recompra é tocado, aumente em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ApplyGift_text", "Aplique <keyword=wildfrost.jacorb.snowfall.gift>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WhileActiveAllUnitsGetGift_text", "Enquanto ativo(a), todas unidade ganham <keyword=wildfrost.jacorb.snowfall.gift>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.HealIfPossible_text", "Restaure <{a}> <keyword=health> se possível");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Frostbite_text", "Reduza a <keyword=health> e <keyword=attack> do alvo em <{a}> se possível");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ExcessFrost_text", "Dê <keyword=attack> adicional igual a <keyword=frost> do alvo");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.PostAttackBreakSnowShield_text", "Após atacar, quebre o escudo de <keyword=snow> do alvo se ele tiver algum");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SpiceSteal_text", "Quando algo é atingido por um aliado/item, aplique <{a}> <keyword=spice> a si mesmo(a)");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ShellSteal_text", "Quando algo é atingido por um aliado/item, aplique <{a}> <keyword=shell> a si mesmo(a)");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SnowEqualToHealth_text", "Aplique <keyword=snow> igual a <keyword=health> atual");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SnowTargetsInRowOtherThanTarget_text", "Aplique <{a}> <keyword=snow> a inimigos na frente do alvo");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WhileActiveAddFrenzyToAllyAhead_text", "Enquanto ativo(a), adicione <x{a}> <keyword=frenzy> ao aliado à frente");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WhileActiveAddFrenzyToAlliesInRow_text", "Enquanto ativo(a), adicione <x{a}> <keyword=frenzy> a aliados na faixa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.HealWhenEnemySnowed_text", "Quando um inimigos receber <keyword=snow>, cure <{a}> <keyword=health>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WhileActiveAddFrenzyEqualToAttackingAllies_text", "Enquanto ativo(a), tenha <keyword=frenzy> igual ao número de aliados/inimigos com <sprite name=counter> exatamente 1");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WhenItemConsumedGainFrenzy_text", "Quando um item é <cc>Consumido</cc>, ganhe <{a}> <keyword=frenzy>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ApplyWrath_text", "Aplique <keyword=wildfrost.jacorb.snowfall.wrath> <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.LoseHalfHP_text", "Corte <keyword=health> de um aliado pela metade");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ApplyFrostEqualToDamageOnHit_text", "Aplique <keyword=frost> igual a <keyword=attack> (até <{a}>)");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.GrantApplyFrostEqualToDamageOnHit_text", "Deixe o alvo aplicar <keyword=frost> igual ao <keyword=attack> dele (até <{a}>)");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.DestroyLeftmostCardInHandOnPlay_text", "Destrua a carta mais a esquerda na mão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.OnKillApplyBlockToFrontAlly_text", "Aplique <{a}> <keyword=block> ao aliado à frente em abates");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.OnNonKillConsumeSelf_text", "Senão, se <cc>Consuma</cc>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ExtraDmgToGift_text", "Dê <{a}> de dano extra se o alvo tem <keyword=wildfrost.jacorb.snowfall.gift>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SpiceHarvest_text", "Aplique <keyword=spice> equivalente a cartas na mão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ShellHarvest_text", "Aplique <keyword=shell> equivalente a cartas na mão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.KingMokoSpiceApply_text", "Quando atingido(a), aplique <{a}> <keyword=spice> a todos na faixa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.KingMokoShellApply_text", "Quando atingido(a), aplique <{a}> <keyword=shell> a todos na faixa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.LoseSpice_text", "Remova <{a}> <keyword=spice>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.LoseShell_text", "Remova <{a}> <keyword=shell>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.HealSpice_text", "Remova metade da <keyword=spice> de si mesmo(a) e aplique <keyword=spice> equivalente a aliados na faixa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.HealSpiceAlt_text", "Aplique <keyword=spice> a aliados na faixa equivalente a <keyword=spice> total de si mesmo(a) & aliados na faixa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.HealShell_text", "Remova metade da <keyword=shell> de si mesmo(a) e aplique <keyword=shell> equivalente a aliados na faixa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.HealShellAlt_text", "Aplique <keyword=shell> a aliados na faixa equivalente a <keyword=shell> total de si mesmo(a) & aliados na faixa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.CountDownEnemiesInRow_text", "Diminua o <sprite=counter> de todos inimigos na faixa em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WhileActiveHalveAlliesSpiceOnAttack_text", "Quando um aliado atacar, diminua a <keyword=spice> dele pela metade");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WhileActiveHalveAlliesShellOnAttack_text", "Quando um aliado atacar, diminua a <keyword=shell> dele pela metade");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.CountdownIfSpiceGT2_text", "Diminua <keyword=counter> em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.CountdownIfShellGT2_text", "Diminua <keyword=counter> em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.FillBoardWithHogs_text", "Ponha <card=Wildfrost.Jacorb.Snowfall.HogAlly>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SummonHogsToBoard_text", "Ponha <{a}> <card=Wildfrost.Jacorb.Snowfall.HogAlly><cc>s</cc>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ApplyWild_text", "Aplique <keyword=wild>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ApplyFeral_text", "Aplique <{a}> <keyword=wildfrost.jacorb.snowfall.feral>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ApplyFeralToRandomAllyOnPlay_text", "Aplique <{a}> <keyword=wildfrost.jacorb.snowfall.feral> a um aliado aleatório");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ApplyFeralToRandomEnemyOnPlay_text", "Aplique <{a}> <keyword=wildfrost.jacorb.snowfall.feral> a um inimigo aleatório");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.GainFrenzyWhenDiscarded_text", "Quando o Sino de Recompra é tocado, ganhe <x{a}> <keyword=frenzy>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ReduceMaxHealthInstant_text", "Reduza <keyword=health> em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BlockAlly_text", "Aplique <{a}> <keyword=block> a um aliado");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.CountUp_text", "Aumente <keyword=counter> em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ExtraDamageEqualToBlock_text", "Dê <keyword=attack> adicional igual ao <keyword=block>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.CountDownWhenBlockGained_text", "Diminua <keyword=counter> em <{a}> quando si mesmo(a) ou um aliado ganhe <keyword=block>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BullCharmEffect_text", "Dê <keyword=attack> adicional igual a <keyword=frenzy>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SuperstarCharmEffect_text", "Enquanto não estiver ferido, <keyword=frenzy> é aumentada em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.MoltenPepperCharmEffectSpice_text", "Quando receber <keyword=spice>, ganhe <{a}> a menos mas diminua <keyword=counter> em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.MoltenPepperCharmEffectShell_text", "Quando receber <keyword=shell>, ganhe <{a}> a menos mas diminua <keyword=counter> em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.PhoenixCharmEffectSpice_text", "Quando um aliado é atingido, ganhe <{a}> <keyword=spice>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.PhoenixCharmEffectShell_text", "Quando um aliado é atingido, ganhe <{a}> <keyword=shell>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SmoreCharmEffect_text", "Em abates, aplique <keyword=zoomlin> a uma carta aleatória na mão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.DeepclawCharmEffectSpice_text", "Quando posto(a), ganhe <{a}> <keyword=spice>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.DeepclawCharmEffectShell_text", "Quando posto(a), ganhe <{a}> <keyword=shell>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WashAttackerWhenHit_text", "<keyword=wildfrost.jacorb.snowfall.wash> o atacante quando atingido(a)");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ExplodeBom_text", "Quando destruído(a), aplique <{a}> <keyword=weakness> ao inimigo na frente de cada faixa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WhenBomAppliedGainFrenzy_text", "Quando <keyword=weakness> é aplicado, ganhe <x{a}> <keyword=frenzy>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SummonBomBunnyWhenHit_text", "Quando atingido(a), ponha <card=Wildfrost.Jacorb.Snowfall.BomBunny> (<{a}> restante(s))");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WhenAnythingInkedGainAttack_text", "Quando qualquer coisa receber <keyword=null>, ganhe <+{a}> <keyword=attack>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WhenKilledSpreadInk_text", "Quando destruído(a), aplique <{a}> <keyword=null> a todos");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WhileActiveAlliesDropNoBlings_text", "Enquanto ativo(a), aliados não largam <keyword=blings>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WhenHitDropBlingsEqualToDamageTaken_text", "Quando atingido(a), largue <keyword=blings> igual ao dano sofrido");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.TriggerAgainstAttackerWhenAllyIsHit_text", "Ativa contra o atacante quando um aliado é atingido");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BonusDamageJunk_text", "Dê <keyword=attack> adicional igual a <card=Junk> na mão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ConsumeJunkInHandOnTurn_text", "Consuma todos <card=Junk> na sua mão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SwapRowsWhenHit_text", "Quanto atingido(a), mude de faixa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.TrashWhenKilled_text", "Quando destruído(a), <keyword=trash> <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.CountUpWhenJunked_text", "Quando atingido(a) por <card=Junk>, aumente o <keyword=counter> em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ConsumeLeftmostItemInHandOnTurn_text", "Destrua as  <{a}> cartas mais a esquerda na sua mão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.AddAttackPostAttack_text", "Para cada alvo atingido, ganhe <+{a}> <keyword=attack>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ExtraDMGToOverloaded_text", "Dê <{a}> de dano extra se o alvo tem <keyword=overload>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.StackEffectWhenAllyKilled_text", "Quando um aliado é morto, aumente os efeitos em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.StackEffectPostAttack_text", "Para cada alvo afetado, aumente os efeitos em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.RemoveOverburnWhenHit_text", "Quando atingido, remova <{a}> <keyword=overload> do atacante");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.StealDMGOfKilledUnits_text", "Quando uma unidade morrer, ganhe seu <keyword=attack>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.EatRandomAllyAbsorbAttackAndEffects_text", "Após atacar, devore um aliado aleatório, absorvendo seu <keyword=attack> e <keyword=health>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ReduceAllyCounterWhenDestroyed_text", "Quando destruído(a), reduza o <keyword=counter> de um aliado aleatório em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Hurt2AndStrengthenRandomAlly_text", "Aumente o <keyword=attack> de um aliado aleatório em <{ap2}>, mas reduza a <keyword=health> dele em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WhenAllyKilledApplyFrenzyToAllAllies_text", "Quando um aliado é morto, adicione <x{a}> <keyword=frenzy> a todos aliados");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SummonWhenDestroyedChikaiju_text", "Quando destruído(a), invoque <card=Wildfrost.Jacorb.Snowfall.EvilChikaiju> no final da faixa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SummonWhenDestroyedChikagoru_text", "Quando destruído(a), invoque <card=Wildfrost.Jacorb.Snowfall.EvilChikagoru> no final da faixa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SummonWhenDestroyedChikashi_text", "Quando destruído(a), invoque <card=Wildfrost.Jacorb.Snowfall.EvilChikashi> no final da faixa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SummonWhenDestroyedChikasan_text", "Quando destruído(a), invoque <card=Wildfrost.Jacorb.Snowfall.EvilChikasan> no final da faixa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SummonWhenDestroyedChikani_text", "Quando destruído(a), invoque <card=Wildfrost.Jacorb.Snowfall.EvilChikani> no final da faixa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SummonWhenDestroyedChikichi_text", "Quando destruído(a), invoque <card=Wildfrost.Jacorb.Snowfall.EvilChikichi> no final da faixa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.DefensiveByNumAllies_text", "Quando atingido(a), tome menos dano equivalente a número de aliados");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WhileActiveIncreaseAllyEffects_text", "Aumente os efeitos dos aliados em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.GainFrenzyWhenAllyKilled_text", "Quando um aliado é morto, ganhe <x{a}> <keyword=frenzy>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.GainTeethWhenAllyKilled_text", "Quando um aliado é morto, ganhe <{a}> <keyword=teeth>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.TriggerWhenAllyKilled_text", "Ativa quando um aliado é morto");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BecomeAttackerWhenKilled_text", "Quando destruído(a), invoque uma cópia <keyword=wildfrost.jacorb.snowfall.enhanced> do atacante");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ImmuneToItems_text", "Imune a itens");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.CountDownAllNonRingloAllies_text", "Diminua o <keyword=counter> de todos aliados não-<Sininho> em <{a}>");
            table.AddEntry("absentabigail.wildfrost.blahaj.Calm_text", "{a} <keyword=absentabigail.wildfrost.blahaj.calm>");
            table.AddEntry("absentabigail.wildfrost.blahaj.On Turn Apply Calm To AllyInFrontOf_text", "Aplique <{a}> <keyword=absentabigail.wildfrost.blahaj.calm> ao aliado à frente");
            table.AddEntry("absentabigail.wildfrost.blahaj.On Kill Apply Calm To Self_text", "Ganhe {a} <keyword=absentabigail.wildfrost.blahaj.calm> em abates");
            table.AddEntry("absentabigail.wildfrost.blahaj.On Hit Eat_text", "Devore e <keyword=absorb> unidade com menos <keyword=health> que <keyword=attack> atual");
            table.AddEntry("absentabigail.wildfrost.blahaj.Stress_text", "Dê <{a}> de dano adicional para cada aliado ferido");
            table.AddEntry("absentabigail.wildfrost.blahaj.Abducted_text", "Aplique <keyword=absentabigail.wildfrost.blahaj.abduct>");
            table.AddEntry("absentabigail.wildfrost.blahaj.When Played Apply Abducted_text", "Aplique <keyword=absentabigail.wildfrost.blahaj.abduct>");
            table.AddEntry("absentabigail.wildfrost.blahaj.On Turn Summon UFO In Hand_text", "Adicione <{a}> {0} a sua mão");
            table.AddEntry("Apply Wild Trait_text", "Aplique <keyword=wild>");
            table.AddEntry("While Active It Is Overshroom_text", "Enquanto ativo(a), sua <keyword=overload> e <keyword=shroom> vira <keyword=overshroom>");
            table.AddEntry("Drop Bling on Hit_text", "Perca <{a}><keyword=blings> quanto atingido");
            table.AddEntry("Apply Haze to All_text", "Aplique <{a}><keyword=haze> a todos");
            table.AddEntry("Apply Ink to All_text", "Aplique <{a}><keyword=null> a todos");
            table.AddEntry("Heal Self_text", "Restaure <{a}><keyword=health> a si mesmo(a)");
            table.AddEntry("Heal & Cleanse All_text", "Restaure <{a}><keyword=health> e <keyword=cleanse> todos aliados e a si mesmo(a)");
            table.AddEntry("Boost Allies_text", "Enquanto ativo(a), melhore os efeitos de todos aliados");
            table.AddEntry("Unmovable to Some Allies_text", "Enquanto ativo(a), adicione <keyword=unmovable> a todos aliados na faixa");
            table.AddEntry("Hit Your Row_text", "Também atinge aliados na faixa");
            table.AddEntry("On Card Played Reduce Counter Row_text", "Diminua o <keyword=counter> de todos aliados na faixa em <{a}>");
            table.AddEntry("Apply Blaze Tea_text", "Adicione <x{a}><keyword=frenzy> e aumente <keyword=counter> em <{a}>");
            table.AddEntry("On Card Played Blaze Tea Random Ally_text", "Adicione <x{a}> <keyword=frenzy> um aliado aleatório e aumente <keyword=counter> em <{a}>");
            table.AddEntry("Summon Scrap Pile_text", "Invoque Pilha de Sucata");
            table.AddEntry("Instant Summon Scrap Pile In Hand_text", "Adicione Pilha de Sucata a sua mão");
            table.AddEntry("When Hit Add Scrap Pile To Hand_text", "Adicione <card=ScrapPile> com <keyword=zoomlin> a sua mão quando atingido(a)");
            table.AddEntry("Summon Azul Skull_text", "Invoque Caveira Azul");
            table.AddEntry("Instant Summon Azul Skull In Hand_text", "Adicione Caveira Azul a sua mão");
            table.AddEntry("Summon Tiger Skull_text", "Invoque Caveira de Tigre");
            table.AddEntry("Instant Summon Tiger Skull In Hand_text", "Adicione Caveira de Tigre a sua mão");
            table.AddEntry("Summon Yeti Skull_text", "Invoque Caveira de Yeti");
            table.AddEntry("Instant Summon Yeti Skull In Hand_text", "Adicione Caveira de Yeti a sua mão");
            table.AddEntry("When Ally Summoned Add Skull To Hand_text", "Adicione uma caveira a sua mão com <keyword=consume>");
            table.AddEntry("Trigger When Summon_text", "Ativa quando qualquer coisa é invocada");
            table.AddEntry("On Card Apply Demonize To RandomAlly_text", "Aplique <{a}> <keyword=demonize> a um aliado aleatório");
            table.AddEntry("On Card Played Apply Shroom Overburn Or Bom_text", "Aplique <{a}> <keyword=shroom>/<keyword=overload>/<keyword=weakness> aleatoriamente");
            table.AddEntry("Overload Self_text", "Ganhe <{a}><keyword=overload>");
            table.AddEntry("Apply Overload Equal To Overload_text", "Aplique <keyword=overload> atual");
            table.AddEntry("On Hit Equal Shroom To Target_text", "Aplique <keyword=shroom> igual ao dano dado");
            table.AddEntry("On Card Played Give Self Explode_text", "Ganhe <keyword=explode> <{a}>");
            table.AddEntry("Pre Turn Weakness All Enemies_text", "Antes de ativar, aplique <{a}> <keyword=weakness> a todos inimigos");
            table.AddEntry("Trigger When Teeth Damage_text", "Ative quando dano por <keyword=teeth> é tomado");
            table.AddEntry("Increase Attack Based on Cards Drawn_text", "<+{a}><keyword=attack> para cada carta comprada neste turno");
            table.AddEntry("When Clunker Destroyed Add Junk To Hand_text", "<keyword=trash> <{a}> quando uma <Geringonça> é destruída");
            table.AddEntry("When Clunker Destroyed Gain Scrap_text", "Ganhe <{a}><keyword=scrap> quando uma <Geringonça> é destruída");
            table.AddEntry("On Card Played Increase Attack Of Cards In Hand_text", "Adicione <+{a}><keyword=attack> às <Cartas> na sua mão");
            table.AddEntry("When Hit Cleanse Team_text", "<keyword=cleanse> aliados e a si mesmo(a) quando atingido(a)");
            table.AddEntry("Trigger When Card Destroyed_text", "Ativa quando uma carta é destruída");
            table.AddEntry("Trigger Clunker Ahead_text", "Ativa a <Geringonça> a frente");
            table.AddEntry("On Card Played Reduce Own Max Counter_text", "Reduz o próprio <keyword=counter> em <{a}>");
            table.AddEntry("Snow Acts Like Shell_text", "Usa <keyword=snow> como <keyword=shell>");
            table.AddEntry("Instant Buff Card In Deck_text", string.Empty);
            table.AddEntry("Buff Card In Deck On Kill_text", "Da <+{a}><keyword=attack> permanentemente a uma carta em abates");
            table.AddEntry("When Snowed Snow Random Enemy_text", "Quando receber <keyword=snow>, aplique <keyword=snow> igual a um inimigo aleatório");
            table.AddEntry("Gain Frenzy When Companion Is Killed_text", "Quando um <Companheiro> é morto, ganhe <x{a}><keyword=frenzy>");
            table.AddEntry("Wonder Guard_text", "<keyword=wonderguard>");
            table.AddEntry("Summon Shedinja_text", "Invoque <card=websiteofsites.wildfrost.pokefrost.shedinja>");
            table.AddEntry("When Deployed Sketch_text", "<keyword=sketch> <{a}>");
            table.AddEntry("Damage Equal To Missing Health_text", "Dê dano igual a <keyword=health> perdida");
            table.AddEntry("Increase Attack While Statused_text", "Enquanto sofrer um status, <keyword=attack> é aumentado em <{a}>");
            table.AddEntry("Gain Frenzy While Statused_text", "Enquanto sofrer um status, ganhe <x{a}><keyword=frenzy>");
            table.AddEntry("On Card Played Increase Targets and Own Max Counter_text", "Aumente o <keyword=counter> de si mesmo(a) e do alvo em <{a}>");
            table.AddEntry("On Card Played Trigger All Slowking Crowns_text", "Ativa aliados com <sprite name=slowking_crown>");
            table.AddEntry("Give Slowking Crown_text", "Ganhe uma <sprite name=slowking_crown> em evolução ou fim de batalha");
            table.AddEntry("On Hit Snowed Target Double Attack_text", "Dobre o <keyword=attack> após atingir um alvo com <keyword=snow>");
            table.AddEntry("Revive_text", "<keyword=revive>");
            table.AddEntry("On Hit Deal Double Damage To Statused Targets_text", "Dê o dobro de dano a inimigos debuffados");
            table.AddEntry("End of Turn Draw a Card_text", "Compre <{a}> no final de cada turno");
            table.AddEntry("Trigger When Dream Card Played_text", "Ativa quando uma carta de <keyword=dream> é jogada");
            table.AddEntry("Summon Lumin Goop_text", "Invoque Cola de Lumin");
            table.AddEntry("Instant Summon Dream Base In Hand_text", "Adicione uma carta de <keyword=dream> a sua mão");
            table.AddEntry("When Deployed Or Redraw, Gain Dream Card To Hand_text", "Ganhe uma carta de <keyword=dream> quando puser uma carta e quanto tocar o Sino de Recompra");
            table.AddEntry("On Card Played Gain Dream Card To Hand_text", "Ganhe uma carta de <keyword=dream>");
            table.AddEntry("Give Combo to Card in Hand_text", "Dê <keyword=combo> a uma carta na sua mão");
            table.AddEntry("On Card Played Buff Marowak_text", "Aumente a <keyword=health> ou o <keyword=attack> de <Marowak> em <{a}>");
            table.AddEntry("Give Thick Club_text", "Ganhe um <Taco Grosso> ao evoluir e em fins de batalhas");
            table.AddEntry("Pre Trigger Gain Temp MultiHit Equal To Curses In Hand_text", "Ataque mais uma vez para cada <maldição> na mão");
            table.AddEntry("Frenzy Equal To Curses In Hand_text", "Has <x{a}><keyword=frenzy> for each <curse> in hand");
            table.AddEntry("On Card Played Give Random Card In Hand While In Hand Reduce Attack To Allies_text", "Dê <keyword=curseofweakness> a uma carta na sua mão");
            table.AddEntry("On Card Played Give Random Card In Hand While In Hand Increase Attack To Enemies_text", "Dê <keyword=curseofpower> a uma carta na sua mão");
            table.AddEntry("On Card Played Give Random Card In Hand While In Hand Unmovable To Allies_text", "Dê <keyword=curseofpara> a uma carta na sua mão");
            table.AddEntry("On Kill Boost Effects_text", "Melhore os efeitos em abates");
            table.AddEntry("While Active Reduce Attack To Enemies_text", "Enquanto ativo(a), reduza o <keyword=attack> de todos inimigos em <{a}>");
            table.AddEntry("When Hit Boost Allies_text", "Quando atingido(a), melhore os efeitos de todos aliados");
            table.AddEntry("When Hit Transfer Resist to Random Ally_text", "Quando atingido(a), <transfira> '<keyword=resist> <{a}>' para um aliado aleatório");
            table.AddEntry("When Hit Transfer Resist to Allies to Random Ally_text", "Quando atingido(a), <transfira> 'Enquanto ativo(a), adicione <keyword=resist> <{a}> a todos aliados' a um aliado aleatório");
            table.AddEntry("On Card Played Hit Redraw Bell_text", "Toque o <Sino de Recompra>");
            table.AddEntry("Evolve Magikarp_text", "<keyword=evolve>: Mate <{a}> chefões");
            table.AddEntry("Evolve Eevee_text", "<keyword=evolve>: Equipe um amuleto");
            table.AddEntry("Evolve Meowth_text", "<keyword=evolve>: Tenha <{a}><keyword=blings>");
            table.AddEntry("Evolve Lickitung_text", "<keyword=evolve>: Consuma <{a}> cartas");
            table.AddEntry("Evolve Munchlax_text", "<keyword=evolve>: Tenha um deck vazio");
            table.AddEntry("Evolve Croagunk_text", "<keyword=evolve>: Time aplica <{a}> <keyword=shroom>");
            table.AddEntry("Evolve Voltorb_text", "<keyword=evolve>: Mate 3 em batalha");
            table.AddEntry("Evolve Carvanha_text", "<keyword=evolve>: Time dá <{a}> de dano por <keyword=teeth>");
            table.AddEntry("Evolve Trubbish_text", "<keyword=evolve>: Tenha <4> <card=Junk> no final da batalha");
            table.AddEntry("Evolve Litwick_text", "<keyword=evolve>: Mate <{a}> inimigo(s)");
            table.AddEntry("Evolve Nincada_text", "<keyword=evolve>: <{a}> batalhas");
            table.AddEntry("Evolve Murkrow_text", "<keyword=evolve>: Vista <sprite name=crown>");
            table.AddEntry("Evolve Piplup_text", "<keyword=evolve>: Time aplica <{a}><keyword=snow>");
            table.AddEntry("Evolve Prinplup_text", "<keyword=evolve>: Aplique <{a}><keyword=snow> a si mesmo(a)");
            table.AddEntry("Evolve Duskull_text", "<keyword=evolve>: Jogue {0} caveiras");
            table.AddEntry("Evolve Lampent_text", "<keyword=evolve>: Alcance <{a}><keyword=overload>");
            table.AddEntry("Evolve Haunter_text", "<keyword=evolve>: Presencie uma <Trade>");
            table.AddEntry("Evolve Machoke_text", "<keyword=evolve>: Presencie uma <Trade>");
            table.AddEntry("Evolve Slowpoke_text", "<keyword=evolve>: Visite uma <Caverna Lesmabling> com ou sem uma <sprite name=crown>");
            table.AddEntry("Evolve Seadra_text", "<keyword=evolve>: Jogue <{a}> cartas <keyword=combo>");
            table.AddEntry("Evolve Makuhita_text", "<keyword=evolve>: Dê <{a}> de dano");
            table.AddEntry("Evolve Cubone_text", "<keyword=evolve>: Fique machucado(a) <i><color=#A6A6A6>(por quem?)</i></color>");
            table.AddEntry("Double Negative Effects_text", "Dobre os efeitos negativos do alvo");
            table.AddEntry("While Active Increase Effects To Hand_text", "Enquanto ativo(a), melhore os efeitos das cartas na mão em <{a}>");
            table.AddEntry("Redraw Cards_text", "<Recompre>");
            table.AddEntry("When Redraw Hit Apply Teeth to Self_text", "Quando o <Sino de Recompra> for tocado, ganhe {a} <keyword=teeth>");
            table.AddEntry("When Redraw Hit Apply Attack & Health To Self No Stack_text", "Quando o <Sino de Recompra> for tocado, ganhe +1<keyword=attack>+1<keyword=health>");
            table.AddEntry("When Redraw Hit Heal Self_text", "Quando o <Sino de Recompra> for tocado, restaure <{a}><keyword=health>");
            table.AddEntry("When Redraw Hit Gain Shell Equal To Allies_text", "Quando o <Sino de Recompra> for tocado, ganhe <keyword=shell> equivalente a aliados em campo");
            table.AddEntry("Draw Cards Text_text", "<keyword=draw> <{a}>");
            table.AddEntry("Double Shroom Text_text", "Dobre o <keyword=shroom> do alvo");
            table.AddEntry("When Hit Gain Shell To Self_text", "Quando atingido(a) ganhe <{a}><keyword=shell>");
            table.AddEntry("When Deployed Heal Allies_text", "Quando posto(a) restaure <{a}><keyword=health> aos aliados");
            table.AddEntry("On Kill Trigger Redraw Bell_text", "Ative o <Sino de Recompra> em abates");
            table.AddEntry("Cleanse All Allies_text", "<keyword=cleanse> todos os aliados");
            table.AddEntry("When X Health Lost Gain Attack_text", "Quando <keyword=health> for perdida, ganhe +1<keyword=attack>");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.Void_text", "<keyword=vibeneutral.wildfrost.hollowfrost.void> {a}");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.Hit Redraw Bell_text", "Ative o <Sino de Recompra>");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.Increase Counter By 1_text", "Diminua o <keyword=counter> do alvo em 1");
            table.AddEntry("When Drawn Gain Attack_text", "<{a}><keyword=attack> quando comprado(a)");
            table.AddEntry("On Kill Apply Frenzy To Self_text", "Ganhe <keyword=frenzy> em abates");
            table.AddEntry("Instant Summon Monomon To Hand_text", "adicione um \r\n <card=vibeneutral.wildfrost.hollowfrost.monomon> a sua mão");
            table.AddEntry("On Card Played Add Monomon To Hand_text", "Adicione  \r\n <card=vibeneutral.wildfrost.hollowfrost.monomon> a sua mão");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.When Spice or Shell Applied To Self Apply Overburn To Enemies In Row_text", "Quando receber <keyword=spice> ou <keyword=shell> aplique <{a}><keyword=overload> a inimigos na faixa");
            table.AddEntry("When Ink Applied To Ally Gain Attack Instead_text", "Aliados e si mesmo ganham <keyword=spice> ao invés de <keyword=null>");
            table.AddEntry("When Ink Applied To Self Gain Attack Instead_text", "Imune a <keyword=null>");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.When Ally Healed Apply Shell_text", "Quando um aliado é curado, aplique <{a}> <keyword=shell>");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.Quirrel Effect_text", "Quando o <Sino de Recompra> for tocado, dê +1<keyword=attack> e diminua o <keyword=counter> em 1 a aliados na faixa");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.When Redraw Hit Apply Shroom All_text", "Quando o <Sino de Recompra> for tocado, aplique <{a}><keyword=shroom> a todos inimigos");
            table.AddEntry("When Hit Gain Gold_text", "Quando atingido(a) ganhe <{a}><keyword=blings>");
            table.AddEntry("When Hit Shell AlliesInRow_text", "Quando atingido(a) aplique <{a}><keyword=shell> a aliados na faixa");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.When Redraw Hit Count Down Self_text", "Quando o <Sino de Recompra> for tocado, diminua o <keyword=counter>");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.When Health Lost Gain 1 Block_text", "Quando <keyword=health> for perdida, ganhe 1 <keyword=block>");
            table.AddEntry("When Deployed Randomize Self_text", "Quando posto(a) <keyword=health><keyword=attack><keyword=counter> são aleatorizados entre 2 e 5");
            table.AddEntry("Summon Decoy_text", "Invoque\r\n <card=vibeneutral.wildfrost.hollowfrost.decoy>");
            table.AddEntry("Instant Summon Decoy_text", "Invoque\r\n <card=vibeneutral.wildfrost.hollowfrost.decoy>");
            table.AddEntry("Summon Shade Soul_text", "Invoque\r\n <card=vibeneutral.wildfrost.hollowfrost.shadesoul>");
            table.AddEntry("Instant Summon Shade Soul_text", "Invoque\r\n <card=vibeneutral.wildfrost.hollowfrost.shadesoul>");
            table.AddEntry("Summon Monomon_text", "Adicione um \r\n <card=vibeneutral.wildfrost.hollowfrost.monomon> a sua mão");
            table.AddEntry("Summon Blank Mask_text", "adicione um \r\n <card=Dittostone> a sua mão");
            table.AddEntry("Instant Blank Mask To Hand_text", "adicione um \r\n <card=Dittostone> a sua mão");
            table.AddEntry("When Deployed Add Blank Mask To Hand_text", "Quando posto(a) adicione um\r\n <card=Dittostone> a sua mão");
            table.AddEntry("When Deployed Summon Shade Soul_text", "Quando posto(a) invoque\r\n <card=vibeneutral.wildfrost.hollowfrost.shadesoul>");
            table.AddEntry("When Deployed Summon Decoy_text", "Quando posto(a) invoque\r\n <card=vibeneutral.wildfrost.hollowfrost.decoy>");
            table.AddEntry("On Card Played Halt Shroom Text_text", "Alvo retem <keyword=shroom>");
            table.AddEntry("On Card Played Trigger Target_text", "Ative o alvo");
            table.AddEntry("Block Text_text", "Aplique <{a}><keyword=block>");
            table.AddEntry("On Turn Apply Ink To AllyBehind_text", "Aplique <{a}><keyword=null> ao aliado atrás");
            table.AddEntry("When Destroyed Hit Redraw Bell_text", "Quando destruído ative o <Sino de Recompra>");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.Royalty_text", "<Realeza>: Ganhe uma <sprite=crown> quando escolhido(a)");
            table.AddEntry("Bonus Damage Equal To Watcher Knights_text", "Dê dano adicional para cada cópia da carta em jogo");
            table.AddEntry("On Card Played Double Shroom_text", "Dobre o <keyword=shroom> do alvo");
            table.AddEntry("When Redraw Hit Split_text", "Quando o <Sino de Recompra> é tocado, <keyword=split>");
            table.AddEntry("When Hit Gain Haze To Self_text", "Quando atingido(a) ganhe <{a}><keyword=haze>");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.When Deployed Summon Maggot_text", "Quando posto(a),\r\n invoque <card=vibeneutral.wildfrost.hollowfrost.maggot>");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.On Turn End Gain Gold_text", "No final do turno ganhe <{a}><keyword=blings>");
            table.AddEntry("Damage Equal To Counter_text", "Dê dano adicional igual ao <keyword=counter>");
            table.AddEntry("When Ally Deployed Increase Attack Effects By 1_text", "Aumenta em {a} quando um outro aliado é posto");
            table.AddEntry("WoundAttackEffect_text", "Aplique <{a}>{0}");
            table.AddEntry("While Active Gold On Kill To Allies_text", "Aliados ganham <{a}><keyword=blings> em abates");
            table.AddEntry("While Active Greed To Enemies_text", "<TODAS> outras unidades têm <keyword=greed>");
            table.AddEntry("Summon Maggot_text", "Invoque\r\n <card=vibeneutral.wildfrost.hollowfrost.maggot>");
            table.AddEntry("Instant Summon Maggot_text", "Invoque\r\n <card=vibeneutral.wildfrost.hollowfrost.maggot>");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.Place On Top_text", "Quando o deck for reembaralhado, fique no topo");
            table.AddEntry("bethanw10.wildfrost.allcharms.Add <+1> to all status effects_text", "<keyword=bethanw10.wildfrost.allcharms.amplify>");
            table.AddEntry("bethanw10.wildfrost.allcharms.When Enemy (Nulled) Is Killed Apply Their Null To RandomEnemy_text", "Quando um inimigo com <keyword=null> morrer, aplique sua <keyword=null> a um inimigo aleatório");
            table.AddEntry("bethanw10.wildfrost.allcharms.When Hit Apply Null To Attacker_text", "Quando atingido(a), aplique <{0}> <keyword=null> ao atacante");
            table.AddEntry("bethanw10.wildfrost.allcharms.When Null Applied To Anything Double Amount And Lose Scrap_text", "Quando qualquer coisa receber <keyword=null> dobre a quantidade e perca <{a}> <keyword=scrap>");
            table.AddEntry("bethanw10.wildfrost.allcharms.When Spice Or Shell Applied To Self Null To RandomEnemy_text", "Quando receber <keyword=spice> ou <keyword=shell> aplique <keyword=null> equivalente a um inimigo aleatório");
            table.AddEntry("bethanw10.wildfrost.allcharms.On Card Played Apply Null To Enemies_text", "Aplique <{0}> <keyword=null> a todos inimigos");
            table.AddEntry("bethanw10.wildfrost.allcharms.Add Bell Count To Attack_text", "Adicione o contador do Sino de Recompra ao <keyword=attack>");
            table.AddEntry("On Hit Snowed Target Double Attack Otherwise Half_text", "Dobre o <keyword=attack> após atingir um alvo com <keyword=snow>, senão diminua o <keyword=attack> pela metade");
            table.AddEntry("When Card Destroyed, Gain Dream Card_text", "Quando uma carta aliada é destruída, ganhe uma carta de <keyword=dream>");
            table.AddEntry("Frenzy Equal To Scrap_text", "Possui <keyword=frenzy> igual a <keyword=scrap>");
            table.AddEntry("When Unit Is Killed Boost Effects_text", "Quando um aliado ou inimigo é morto, melhore os efeitos");
            table.AddEntry("When Destroyed Boost Allies_text", "Quando destruído(a), melhore os efeitos de todos aliados em <{a}>");
            table.AddEntry("When Hit Transfer MultiHit to Random Ally_text", "Quando atingido(a), <keyword=transfer> 'x{a}<keyword=frenzy>'");
            table.AddEntry("On Card Played Transfer Attack to Random Ally_text", "<keyword=transfer> '+{a}<keyword=attack>'");
            table.AddEntry("When Anyone Takes Jolted Damage Apply Equal Jolted To A Random Enemy_text", "<keyword=conduit>: Aplique <keyword=jolted> equivalente a um inimigo aleatório");
            table.AddEntry("When Anyone Takes Jolted Damage Apply Equal Jolted To Front Enemy_text", "<keyword=conduit>: Aplique<keyword=jolted> equivalente ao inimigo da frente");
            table.AddEntry("When Anyone Takes Jolted Damage Trigger_text", "<keyword=conduit>: Ative");
            table.AddEntry("When Destroyed Apply Shroom To All Enemies In Row_text", "Quando destruído(a), aplique <{a}><keyword=shroom> a todos inimigos na faixa");
            table.AddEntry("When Destroyed Apply Bom To All Enemies In Row_text", "Quando destruído(a), aplique <{a}><keyword=weakness> a todos inimigos na faixa");
            table.AddEntry("Deal Bonus Damage Equal To Cards In Hand_text", "Dê dano adicional igual a quantidade de cartas na mão");
            table.AddEntry("Hits All NonBurning Targets_text", "Atinja todos os inimigos sem <keyword=burning>");
            table.AddEntry("While Active All Hits Apply Snow_text", "Enquanto ativo(a), toods aplicam <{a}><keyword=snow>");
            table.AddEntry("Copy Effects Applied To Front Enemy_text", "Quando um <debuff> for aplicado ao inimigo da frente, também aplique a um inimigo aleatório");
            table.AddEntry("Give Cards In Hand Juice_text", "Aplique <{a}><keyword=spicune> a todas as cartas na mão");
            table.AddEntry("Give Allies Juice_text", "Aplique <{a}><keyword=spicune> a todos aliados");
            table.AddEntry("Gain Juice On Hit_text", "Quando atingido(a), ganhe <{a}><keyword=spicune>");
            table.AddEntry("Give Your Juice To All_text", "Aplique <keyword=spicune> a tudo no campo, exceto a si mesmo(a)");
            table.AddEntry("Give Your Juice To Allies_text", "Aplique <keyword=spicune> atual a todos aliados");
            table.AddEntry("Give Revive To Allies_text", "Adicione <keyword=revive> aos aliados");
            table.AddEntry("When Deployed Summon Placeholder To Hand_text", "Quando posto(a), adicione a carta <keyword=prophesized> a sua mão");
            table.AddEntry("On Card Played Summon From Reserve_text", "Invoque um aliado da reserva");
            table.AddEntry("On Turn Return Prophesized Card To Hand_text", "Retorne a carta <keyword=prophesized> para a sua mão");
            table.AddEntry("When Prophesized Card Played Give Allies Attack_text", "Quando a carta <keyword=prophesized> for jogada, adicione <+{a}><keyword=attack> a todos aliados");
            table.AddEntry("Deal Damage To All Enemies_text", "Dê <{a}> de dano a todos inimigos");
            table.AddEntry("While Active All Cards Are Recyclable_text", "Enquanto ativo(a), todas as cartas são recicláveis");
            table.AddEntry("While Active Unlimited Lumin_text", "Enquanto ativo(a), <keyword=lumin> não é removido!");
            table.AddEntry("Apply Lumin To Random Ally_text", "Aplique <keyword=lumin> a um aliado aleatório");
            table.AddEntry("While Active Allied Hits Have Burning_text", "Enquanto ativo(a), aliados aplicam <{a}><keyword=burning>");
            table.AddEntry("On Card Played Increase Targets Counter_text", "Aumente o <keyword=counter> do alvo em <{a}>");
            table.AddEntry("On Card Played Boost Effects of Rightmost Card_text", "Melhore os efeitos da carta mais à direita na mão em <{a}>");
            table.AddEntry("While Active Allies Have ImmuneToSnow_text", "Enquanto ativo(a), aliados ganham <keyword=immunetosnow>");
            table.AddEntry("On Card Played Cleanse Targets_text", "<keyword=cleanse> os alvos");
            table.AddEntry("When Hit Apply Jolted To Attacker_text", "Quando atingido(a), aplique <{a}><keyword=jolted> ao atacante");
            table.AddEntry("When Hit Apply Burning To Attacker_text", "Quando atingido(a), aplique <{a}><keyword=burning> ao atacante");
            table.AddEntry("When Hit Apply Spicune To All Allies And Enemies_text", "Quando atingido(a), aplique <{a}><keyword=spicune> a todos aliados e inimigos");
            table.AddEntry("Gain Spice On Recall_text", "Quando retornado(a) ganhe <{a}><keyword=spice>");
            table.AddEntry("Gain Barrage On Recall_text", "Quando retornado(a) ganhe <keyword=barrage>");
            table.AddEntry("Gain Hero On Recall_text", "Quando retornado(a) ganhe <keyword=hero>");
            table.AddEntry("Maybe Make Front Enemy Retreat_text", "<{a}>% de chance de mandar o inimigo da frente para a próxima onda");
            table.AddEntry("On Card Played Return Front Enemy To Hand_text", "Retorne o inimigo da frente para a mão");
            table.AddEntry("When Destoryed Give Revive To All Allies_text", "Quando destruído(a), adicione <keyword=revive> a todos aliados");
            table.AddEntry("On Turn Trigger Allies In Hand_text", "Ative aliados na mão");
            table.AddEntry("While Redraw Bell Is Charged Gain Frenzy_text", "Quando o <Sino de Recompra> estiver carregado, ganhe <x{a}><keyword=frenzy>");
            table.AddEntry("When Hit Apply Equal Burning To The Attacker_text", "Quando atingido(a), aplique <keyword=burning> equivalente ao atacante");
            table.AddEntry("Evolve Kirlia_text", "<keyword=evolve>: Ganhe <color=#FFCA57>{a}</color> efeitos únicos");
            table.AddEntry("Evolve Aron_text", "<keyword=evolve>: Time <keyword=recycle> <color=#FFCA57>{a}</color> cartas");
            table.AddEntry("Evolve Lairon_text", "<keyword=evolve>: Time <keyword=recycle> <color=#FFCA57>{a}</color> cartas <color=#FFCA57>recicláveis</color>");
            table.AddEntry("Evolve Natu_text", "<keyword=evolve>: Cumpra a <Profecia>");
            table.AddEntry("Evolve Aipom_text", "<keyword=evolve>: Tenha <color=#FFCA57>{a}</color> <Itens> no seu deck");
            table.AddEntry("Evolve Snover_text", "<keyword=evolve>: <color=#FFCA57>{a}</color> unidades com <keyword=snow> ao mesmo tempo");
            table.AddEntry("Evolve Chingling_text", "<keyword=evolve>: Colete <color=#FFCA57>{a}</color> <Sinos Solares/Itens de Missão>");
            table.AddEntry("absentabigail.wildfrost.blahaj.Abduct_text", "<keyword=absentabigail.wildfrost.blahaj.abduct>");
            table.AddEntry("absentabigail.wildfrost.blahaj.Instant Increase Current Counter_text", "Aumente o <keyword=counter> em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Curious_title", "Curioso");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Curious_desc", "Quando atingido(a), mova-se à frente um espaço");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Reflexive_title", "Reflexivo");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Reflexive_desc", "Após o primeiro ataque no turno, atinja um alvo aleatório na faixa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Rubbish_title", "Restos");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Rubbish_desc", "Esta palavra-chave não faz nada por si só :)");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.GainFrenzyOnKill_text", "Ganhe <x{a}> <keyword=frenzy> em abates");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.onPlayIncreaseMaxHealthByLimitPlus_text", "Aumente a <keyword=health> em <keyword=wildfrost.jacorb.snowfall.limit> + <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.TargetEnemiesWithoutFrost_text", "Atinja todos os inimigos sem <keyword=frost>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.IncreaseAttackOfCrownedAlliesOnPlay_text", "Aumente o <keyword=attack> de aliados com <sprite name=crown> em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.OnTurnGainDmgIfFrost_text", "Se o alvo possuir <keyword=frost>, ganhe <{a}> <keyword=attack>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WhenCardDestroyedApplySpiceToAlliesInRow_text", "Quando uma carta for destruída, aplique <{a}> <keyword=spice> aos aliados na faixa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WhenCardDestroyedCountDown_text", "Diminua o <keyword=counter> em <{a}> quando uma carta for destruída");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.TriggerWhenCardDestroyed_text", "Ativa quando uma carta é destruída");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.NewWeevilEffect_text", "Destrua as cartas de <keyword=wildfrost.jacorb.snowfall.rubbish> mais à esquerda e a direita na sua mão e ganhe seus <keyword=attack>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WhileInHandRubbishCardsApplySnow_text", "Enquanto na mão, cartas de <keyword=wildfrost.jacorb.snowfall.rubbish> aplicam <{a}> <keyword=snow>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.InstantDiscard_text", "Descarte uma carta na mão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.IncreaseAttackToRubbishCardsOnPlay_text", "Aumente o <keyword=attack> de todas as cartas de <keyword=wildfrost.jacorb.snowfall.rubbish> na mão em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ApplyZoomlinToLeftmostRubbishCardOnPlay_text", "Aplique <keyword=zoomlin> a carta de <keyword=wildfrost.jacorb.snowfall.rubbish> mais à esquerda na mão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.DrawWhenRubbishCardDestroyed_text", "<keyword=draw> <{a}> quando uma carta de <keyword=wildfrost.jacorb.snowfall.rubbish> for destruída");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ApplyRubbish_text", "Aplique <keyword=wildfrost.jacorb.snowfall.rubbish> a um item");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WhenHitAddNewGunkFruitToHand_text", "Quando atingido(a), adicione <card=Wildfrost.Jacorb.Snowfall.NewGunkFruit> a sua mão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.CountdownStrongestAllyCounterWhenKilled_text", "Quando destruído(a), diminua o <keyword=counter> dos aliados com o maior <keyword=attack> em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Hurt2AndStrengthenWeakestAlly_text", "Aumente <keyword=attack> de todos aliados com menor <keyword=attack> em <{ap2}>, mas reduza suas <keyword=health> em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ApplyOverburnToAttackerWhenAllyHit_text", "Quando um aliado for atingido, aplique <{a}> <keyword=overload> ao atacante");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.CountdownWhenAllyHit_text", "Quando um aliado for atingido, diminua o <keyword=counter> em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ApplyShroomToEveryone_text", "Aplique <{a}><keyword=shroom> a todos");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.IncreaseAttackEffectsOnTurn_text", "Aumente em {a}");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ApplyShroomToFrontmostEnemyWhenDestroyed_text", "Aplique <{a}><keyword=shroom> ao inimigo mais à frente na faixa quando destruído(a)");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.HoldAllShroom_text", "Enquanto ativo(a), <keyword=shroom> não diminui para menos que <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ApplyShellToAlliesWhenEnemyCountsDownShroom_text", "Quando um inimigo tomar dano de <keyword=shroom>, aplique <{a}> <keyword=shell> a todos aliados");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WhenShelledApplyShroomToEnemiesInRow_text", "Quando receber <keyword=shell>, aplique <{a}> <keyword=shroom> a iniigos na faixa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SwapRowsOnTurn_text", "Após atacar, troque de faixa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ApplyShellToAlliesWithLowestShell_text", "Aplique <{a}> <keyword=shell> a todos aliados com menor <keyword=shell>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.TriggerAgainstSnowedEnemies_text", "Ative contra inimigos com <keyword=snow>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.GainAttackWhenSelfOrAllyHit_text", "Quando um aliado ou si mesmo for atingido, ganhe <+{a}> <keyword=attack>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WhenAnythingSnowedGainAttackP2CountDown_text", "Quando qualquer coisa receber <keyword=snow>, ganhe <+{ap2}> <keyword=attack> e diminua <keyword=counter> em <{a}>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ApplySnowToEnemiesWhenDestroyed_text", "Quando destruído(a), aplique <{a}> <keyword=snow> a todos inimigos na faixa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ChangeTargetModeStormBear_text", "Atinja inimigos com <keyword=snow> na faixa");
        }

        private void SetCardsLocalizations()
        {
            var table = LocalizationHelper.GetCollection("Cards", ModLanguage);

            table.AddEntry("name_clunker_boss", "Krunker");
            table.AddEntry("name_split_boss", "Embuste");
            table.AddEntry("name_split_boss_split1", "Em");
            table.AddEntry("name_split_boss_split2", "Buste");
            table.AddEntry("name_pengoon_miniboss", "Grande Ping");
            table.AddEntry("name_shell_miniboss", "Bolgo");
            table.AddEntry("name_snow_miniboss", "Bumbo");
            table.AddEntry("name_demon_miniboss", "Cabeça-de-Cabra");
            table.AddEntry("name_monkey_miniboss", "Rei Moko");
            table.AddEntry("name_drek_miniboss", "Grandiglu");
            table.AddEntry("name_snowknight_miniboss", "O Cavaleiro da Neve");
            table.AddEntry("name_tooth_miniboss", "Bocão Mandíbula");
            table.AddEntry("name_shroom_miniboss", "Dama Velada");
            table.AddEntry("name_baby_snowbo", "Nevobo Bebê");
            table.AddEntry("name_bulbhead", "Cabeça-de-Bulbo");
            table.AddEntry("name_chungoon", "Fortarrão");
            table.AddEntry("name_grumps", "Rabugento");
            table.AddEntry("name_conker", "Cascudo");
            table.AddEntry("name_frostinger", "Congelador");
            table.AddEntry("name_gobling", "Gobling");
            table.AddEntry("name_gok", "Gok");
            table.AddEntry("name_grink", "Grink");
            table.AddEntry("name_grog", "Grog");
            table.AddEntry("name_grouchy", "Rabugento");
            table.AddEntry("name_jab_joat", "Boxbode");
            table.AddEntry("name_makoko", "Makoko");
            table.AddEntry("name_naked_gnome", "Gnomo Pelado");
            table.AddEntry("name_noodle", "Gromble");
            table.AddEntry("name_ooba_bear", "Urso Ooba");
            table.AddEntry("name_pecan", "Pecã");
            table.AddEntry("name_pengoon", "Pinguentão");
            table.AddEntry("name_pepper_witch", "Bruxa Pimenta");
            table.AddEntry("name_popshroom", "Fungolha");
            table.AddEntry("name_prickle", "Espinhento");
            table.AddEntry("name_puffball", "Esporo");
            table.AddEntry("name_pygmy", "Pigmeu");
            table.AddEntry("name_shell_witch", "Bruxa Cascuda");
            table.AddEntry("name_shroom_gobbler", "Comilão de Fungo");
            table.AddEntry("name_shrootles", "Cogumelos");
            table.AddEntry("name_smakk", "Pé-grande");
            table.AddEntry("name_snoolf", "Lobisgelo Selvagem");
            table.AddEntry("name_winter_worm", "Verme de Neve");
            table.AddEntry("name_snowbirb", "Passarogelo");
            table.AddEntry("name_snowbo", "Nevobo");
            table.AddEntry("name_snow_gobbler", "Comilão de Neve");
            table.AddEntry("name_sporkypine", "Porcopinho");
            table.AddEntry("name_spuncher", "Soconja ");
            table.AddEntry("name_waddlegoons", "Cambaleões");
            table.AddEntry("name_woolly_drek", "Drek Lanoso");
            table.AddEntry("name_ice_forge", "Forja de Gelo");
            table.AddEntry("name_monkey_totem", "Cabeça de Moko");
            table.AddEntry("name_spike_wall", "Muro de Espinhos");
            table.AddEntry("name_bitebox", "Mordiscaixa");
            table.AddEntry("name_bling_bank", "Banco Bling");
            table.AddEntry("name_heartforge", "Forja-coração");
            table.AddEntry("name_heartmist_station", "Incensário Coração");
            table.AddEntry("name_krono", "Krono");
            table.AddEntry("name_mega_mimik", "Mega Mimiko");
            table.AddEntry("name_mimik", "Mimiko");
            table.AddEntry("name_mobile_campfire", "Fogueira Móvel");
            table.AddEntry("name_pepper_flag", "Bandeira Pimenta");
            table.AddEntry("name_peppermaton", "Totem Moko");
            table.AddEntry("name_shroominator", "Fungiplicador");
            table.AddEntry("name_shroomine", "Fungarmadilha");
            table.AddEntry("name_shroom_launcher", "Canhão de Fungo");
            table.AddEntry("name_kobonker", "Kobonker");
            table.AddEntry("name_spice_sparklers", "Fogos Picantes");
            table.AddEntry("name_goat_totem", "Totem da Cabra");
            table.AddEntry("name_woodhead", "Cabeçudo");
            table.AddEntry("name_berry_pet", "Booshu");
            table.AddEntry("name_big_berry", "Grande Baga");
            table.AddEntry("name_blunky", "Bloqui");
            table.AddEntry("name_bombom", "Bombom");
            table.AddEntry("name_bonnie", "Bonnie");
            table.AddEntry("name_chompom", "Champom");
            table.AddEntry("name_demon_pet", "Loki");
            table.AddEntry("name_dimona", "Dimona");
            table.AddEntry("name_draw_pet", "Espirrito");
            table.AddEntry("name_firefist", "Punhoquente");
            table.AddEntry("name_foxee", "Rapozee");
            table.AddEntry("name_tooth_pet", "Espinho");
            table.AddEntry("name_lil_berry", "Baguinha");
            table.AddEntry("name_junjun", "Junjun");
            table.AddEntry("name_pootie", "Pootie");
            table.AddEntry("name_pyra", "Pyra");
            table.AddEntry("name_shelly", "Shelly");
            table.AddEntry("name_snobble", "Nevruno");
            table.AddEntry("name_snoffel", "Nevô");
            table.AddEntry("name_snow_pet", "Lobisgelo");
            table.AddEntry("name_tiny_tyko", "Pequeno Tyko");
            table.AddEntry("name_tusk", "Presa");
            table.AddEntry("name_wallop", "Wallop");
            table.AddEntry("name_wort", "Mofu");
            table.AddEntry("name_yuki", "Yuki");
            table.AddEntry("name_berry_basket", "Cesto de Bagas");
            table.AddEntry("name_berry_bell", "Sino Baga");
            table.AddEntry("name_berry_blade", "Lâmina Baga");
            table.AddEntry("name_blaze_tea", "Chá de Fogo");
            table.AddEntry("name_tar_blade", "Lâmina Sombria");
            table.AddEntry("name_demonheart", "Coração Demoníaco");
            table.AddEntry("name_blank_mask", "Máscara Vazia");
            table.AddEntry("name_dragon_pepper", "Pimenta Dragão");
            table.AddEntry("name_flamewater", "Água Flamejante");
            table.AddEntry("name_frost_bell", "Sino do Congelamento");
            table.AddEntry("name_frostbloom", "Flor Gelada");
            table.AddEntry("name_hongos_hammer", "Martelo do Fungo");
            table.AddEntry("name_grabber", "Pegador");
            table.AddEntry("name_ice_dice", "Dado Gélido");
            table.AddEntry("name_junjun_mask", "Máscara de Junjun");
            table.AddEntry("name_molten_dip", "Molho derretido");
            table.AddEntry("name_noomlin_biscuit", "Biscoito Noomlin");
            table.AddEntry("name_nutshell_cake", "Bolo Casca de Noz");
            table.AddEntry("name_peppereaper", "Ceifador Pimenta");
            table.AddEntry("name_peppering", "Anel de Pimenta");
            table.AddEntry("name_pinkberry_juice", "Suco de Baga Rosa");
            table.AddEntry("name_pombomb", "Pombomb");
            table.AddEntry("name_scrap_pile", "Pilha de Sucata");
            table.AddEntry("name_shellbo", "Bombacasca");
            table.AddEntry("name_shell_shield", "Escudo Pequeno");
            table.AddEntry("name_blizzard_bottle", "Garrafa de Nevasca");
            table.AddEntry("name_slapcrackers", "Tapa Rotatório ");
            table.AddEntry("name_snowcake", "Bolo de Neve");
            table.AddEntry("name_snow_globe", "Globo de Tempestade");
            table.AddEntry("name_snow_stick", "Graveto de Neve");
            table.AddEntry("name_spice_stones", "Pedras Picantes");
            table.AddEntry("name_spore_pack", "Bolsa de Esporos");
            table.AddEntry("name_stormbear_spirit", "Força do Urso da Tempestade");
            table.AddEntry("name_sunburst", "Flautim Solar");
            table.AddEntry("name_sunlight_drum", "Tambor da Luz do Sol");
            table.AddEntry("name_sun_rod", "Cajado Solar");
            table.AddEntry("name_sword", "Espada Cega");
            table.AddEntry("flavour_sword", "Uma arma tradicional confiável");
            table.AddEntry("flavour_woodhead", "Não faz nada, mas receberá um golpe por você :)");
            table.AddEntry("flavour_naked_gnome", "Faz absolutamente nada...");
            table.AddEntry("type_boss", "Chefão");
            table.AddEntry("type_miniboss", "Minichefe");
            table.AddEntry("type_enemy", "Inimigo");
            table.AddEntry("type_leader", "Líder");
            table.AddEntry("type_companion", "Companheiro");
            table.AddEntry("type_item", "Item");
            table.AddEntry("type_clunker", "Geringonça");
            table.AddEntry("type_summoned", "Sombra");
            table.AddEntry("name_frost_miniboss", "O Tocador de Sinos");
            table.AddEntry("name_berry_miniboss", "Rainha Globaga");
            table.AddEntry("name_earth_berry", "Baga Terrestre");
            table.AddEntry("name_berry_witch", "Bruxa Baga");
            table.AddEntry("name_ice_lantern", "Lanterna de Gelo");
            table.AddEntry("name_fungun", "Fungarma");
            table.AddEntry("name_groff", "Groff");
            table.AddEntry("name_taiga", "Taiga");
            table.AddEntry("name_fallow", "Fallow");
            table.AddEntry("name_tigris", "Tigris");
            table.AddEntry("name_beepop", "Beepop");
            table.AddEntry("name_fallow_mask", "Máscara de Fallow");
            table.AddEntry("name_tigris_mask", "Máscara de Tigris");
            table.AddEntry("name_beepop_mask", "Máscara de Beepop");
            table.AddEntry("injured", "machucado(a)");
            table.AddEntry("name_kernel", "Grão");
            table.AddEntry("name_marrow", "Medula");
            table.AddEntry("name_egg", "Ovo");
            table.AddEntry("name_dregg", "Drovo");
            table.AddEntry("name_van_jun", "Van Jun");
            table.AddEntry("name_monch", "Monch");
            table.AddEntry("name_berry_sis", "Mana Baga");
            table.AddEntry("name_splinter", "Splinter");
            table.AddEntry("name_vesta", "Vesta");
            table.AddEntry("name_shen", "Shen");
            table.AddEntry("name_devicro", "Devicro");
            table.AddEntry("name_chikichi", "Chikichi");
            table.AddEntry("name_chikani", "Chikani");
            table.AddEntry("name_chikasan", "Chikasan");
            table.AddEntry("name_chikashi", "Chikashi");
            table.AddEntry("name_chikagoru", "Chikagoru");
            table.AddEntry("name_pom", "Pom");
            table.AddEntry("name_sheepopper", "Ovebomba");
            table.AddEntry("name_leech", "Sanguessuga");
            table.AddEntry("name_pom_mask", "Máscara de Pom");
            table.AddEntry("name_sheepopper_mask", "Máscara de Ovebomba");
            table.AddEntry("name_leech_mask", "Máscara de Sanguessuga");
            table.AddEntry("name_azul_candle", "Vela Azul");
            table.AddEntry("name_azul_battle_axe", "Machado de Batalha Azul");
            table.AddEntry("name_azul_skull", "Caveira Azul");
            table.AddEntry("name_tiger_skull", "Caveira de Tigre");
            table.AddEntry("name_yeti_skull", "Caveira de Yeti");
            table.AddEntry("name_soulbound_skulls", "Caveiras Vinculadas");
            table.AddEntry("name_shade_wisp", "Fada Sombra");
            table.AddEntry("name_shade_clay", "Argila de Sombra");
            table.AddEntry("name_skullmist_tea", "Chá Névoa-Caveira ");
            table.AddEntry("name_smog", "Gatévua");
            table.AddEntry("name_pawpaw", "Gato-Espinho");
            table.AddEntry("name_portable_workbench", "Bancada Portátil");
            table.AddEntry("name_sunglass_chime", "Gizo do Vidro Solar");
            table.AddEntry("name_gachapomper", "Gachabomba");
            table.AddEntry("name_tootordion", "Flautínfona");
            table.AddEntry("name_blundertank", "Tanque de Erros");
            table.AddEntry("name_plinker", "Plinko");
            table.AddEntry("name_icgm", "M.I.C.G.");
            table.AddEntry("name_bombarder", "Bombardeiro");
            table.AddEntry("name_haze_balloon", "Balão de Névoa");
            table.AddEntry("name_hazeblazer", "Dedetizador");
            table.AddEntry("flavour_can_be_fixed", "Talvez possa ser consertado...");
            table.AddEntry("name_biji", "Biji");
            table.AddEntry("name_mini_mika", "Mini Mika");
            table.AddEntry("name_lynja", "Alloy");
            table.AddEntry("name_folby", "Folby");
            table.AddEntry("name_scaven", "Scaven");
            table.AddEntry("name_kreggo", "Kreggo");
            table.AddEntry("name_nom_stomp", "Nom & Pisão");
            table.AddEntry("name_tinkerson", "Tinkerson Jr.");
            table.AddEntry("name_bom_barrel", "Barril de Bom");
            table.AddEntry("name_springbom", "Bom à Corda");
            table.AddEntry("name_blaze_bom", "Braseiro Bom");
            table.AddEntry("name_frenzy_wrench", "Chave Frenética");
            table.AddEntry("name_suncream", "Sorvesol");
            table.AddEntry("name_gigis_gizmo", "Aparelho da Gigi");
            table.AddEntry("name_gigis_cookie_box", "Caixa de biscoitos da Gigi");
            table.AddEntry("name_magma_booster", "Aprimorador de Magma");
            table.AddEntry("name_lumin_lantern", "Lanterna Lumin");
            table.AddEntry("name_frostbite_shard", "Fragmento de Geladura");
            table.AddEntry("name_bink", "B.I.N.K");
            table.AddEntry("name_blizzard_unit", "Superneveiro");
            table.AddEntry("name_protostomper", "Proto-Esmagador");
            table.AddEntry("name_forging_stone", "Fogão de Forja");
            table.AddEntry("name_mini_muncher", "Mini Devorador");
            table.AddEntry("name_haze_keg", "Barril de Neblina");
            table.AddEntry("name_foggy_brew", "Bebida Fumacenta");
            table.AddEntry("name_junkhead", "Sucatão");
            table.AddEntry("name_sunsong_box", "Caixa da Música do Sol");
            table.AddEntry("name_snowzooka", "Nevazuka");
            table.AddEntry("name_ink_flask", "Frasco de Tinta");
            table.AddEntry("name_gearhammer", "Martelengrenagem");
            table.AddEntry("name_junk", "Lixo");
            table.AddEntry("name_shroom_boss", "Trufa");
            table.AddEntry("name_moko_boss", "Infernoko");
            table.AddEntry("name_frost_guardian", "Guardião Congelado");
            table.AddEntry("name_block_miniboss", "Cabeça Fria");
            table.AddEntry("name_wild_miniboss", "Razor");
            table.AddEntry("name_warthog", "Javali");
            table.AddEntry("name_hog", "Porco");
            table.AddEntry("name_rockhog", "Porcrocha");
            table.AddEntry("name_krab", "Karangueijo");
            table.AddEntry("name_krawler", "Krawler");
            table.AddEntry("name_burster", "Destruidor");
            table.AddEntry("name_broken_vase", "Vaso Quebrado");
            table.AddEntry("name_lumin_glue", "Cola de Lumin");
            table.AddEntry("name_lumin_vase", "O Vaso de Lumin");
            table.AddEntry("name_fizzle", "Fizzle");
            table.AddEntry("flavour_can_fix_something", "Pode ser usado para consertar algo...");
            table.AddEntry("name_frost_jailer", "Carcereiro Congelado");
            table.AddEntry("name_frost_crusher", "Esmagador Congelado");
            table.AddEntry("name_frost_archer", "Lanceiro Congelado");
            table.AddEntry("name_frost_bomber", "Bombardeiro Congelado");
            table.AddEntry("name_frost_junker", "Sujador Congelado");
            table.AddEntry("name_frost_muncher", "Devorador Congelado");
            table.AddEntry("name_willow", "Tristela");
            table.AddEntry("name_tenticle", "Tentosco");
            table.AddEntry("name_bigshot", "Jumbo");
            table.AddEntry("name_gazi", "Gazinha");
            table.AddEntry("name_bad_bombarder", "Bombardeiro");
            table.AddEntry("name_grizzle", "Grisalho");
            table.AddEntry("name_plum", "Ameixa");
            table.AddEntry("name_minimoko", "Minimoko");
            table.AddEntry("name_gogong", "Gogong");
            table.AddEntry("name_gobbler", "Comilão");
            table.AddEntry("name_gunk", "Fruta Gosmenta");
            table.AddEntry("name_beeberry_miniboss", "Baga do Pântano");
            table.AddEntry("name_ink_miniboss", "Lumako");
            table.AddEntry("name_smash_miniboss", "Caruncho");
            table.AddEntry("name_lump", "Caroço");
            table.AddEntry("name_beeberry", "Bagabelha");
            table.AddEntry("name_tako", "Octako");
            table.AddEntry("name_dungrok", "Rochestrume");
            table.AddEntry("name_blaze_beetles", "Besouros Flamejantes");
            table.AddEntry("name_gunker", "Gorduroso");
            table.AddEntry("name_gunk_gobbler", "Comilão de Gosma");
            table.AddEntry("name_ink_totem", "Octobom");
            table.AddEntry("name_zoomlin_nest", "Ninho Zoomlin");
            table.AddEntry("name_ink_pet", "Tintu");
            table.AddEntry("name_gojiber", "Gojiba");
            table.AddEntry("name_lumin_cat", "Lupa");
            table.AddEntry("name_roibos", "Roibos");
            table.AddEntry("name_blue", "Nova");
            table.AddEntry("name_pimento", "Pimento");
            table.AddEntry("name_fulbert", "Fulbert");
            table.AddEntry("name_headless", "Greevle");
            table.AddEntry("name_baker", "O Cozinheiro");
            table.AddEntry("name_spoof", "Spoof");
            table.AddEntry("name_zula", "Zula");
            table.AddEntry("name_havok", "Torradeira");
            table.AddEntry("name_mama_tinkerson", "Mamãe Tinkerson");
            table.AddEntry("name_ruckus", "Agulha");
            table.AddEntry("name_knuckles", "Sokos");
            table.AddEntry("name_snuffer", "Snuffer");
            table.AddEntry("name_snuffer_mask", "Máscara de Snuffer");
            table.AddEntry("name_bonescraper", "Raspa-ossos");
            table.AddEntry("name_skullmuffin", "Muffin Caveira");
            table.AddEntry("name_kraken", "Kraken");
            table.AddEntry("name_zoomlin_wafers", "Biscoitos Zoomlin");
            table.AddEntry("name_barrage_miniboss", "Nimbus");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BossJunk_type_title", "Chefão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BossSmallJunk_type_title", "Chefão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BossLich_type_title", "Chefão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BountyHunter_title", "Pistoleiro");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.HotHead_title", "Cabeça Quente");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.FickleHandRock_title", "Mão Joken");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.FickleHandScissors_title", "Mão Joken");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.FickleHandPaper_title", "Mão Joken");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.FickleHandGun_title", "Mão Joken");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Fickle_title", "Fickle");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Junkweed_title", "Lixão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Mazkin_title", "Mazkin");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Wismer_title", "Wismer");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BiwaLoat_title", "Lode da Biwa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Boar_title", "Javali");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Cinder_title", "Faísca");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.NewEarthBerry_title", "Baga Terrestre");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.NewBerryWitch_title", "Bruxa Baga");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Sweetcaster_title", "Adocimago");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ScaredyCat_title", "Gato Escaldado");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Shilly_title", "Shilly");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.GlaceSaber_title", "Sabre Glacial");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SnowFlute_title", "Flauta da Letargia");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.LunchBox_title", "Marmita");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.FickleCane_title", "Begala de Fickle");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.DemonFan_title", "Lequemonizador");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.FrostCake_title", "Bolo Congelado");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Sundial_title", "Regulador Solar");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BeeberryHoney_title", "Mel de Bagabelha");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BonKoreYoyo_title", "Yoyo Fogarão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.MazkinMask_title", "Máscara de Mazkin");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Lavaglass_title", "Ampulheta de Lava");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SpikeWallAlly_title", "Muro de Espinhos");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.FrostLantern_title", "Lanterna Congelada");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Lighthouse_title", "Farol");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.PorkypineAlly_title", "Porcopinho");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.GrombleAlly_title", "Gromble");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BigfootAlly_title", "Pé-grande");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WinterWormAlly_title", "Verme de Neve");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.OobaBearAlly_title", "Urso Ooba");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.JabJoatAlly_title", "Boxbode");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.PebblePig_title", "Porco Pedrinha");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.RockhogAlly_title", "Porcrocha");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.GogongAlly_title", "Gogong");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Pipper_title", "Pimette");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Charepi_title", "Charepi");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Cubbu_title", "Filhurso");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.GrizzleAlly_title", "Grisalho");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Pengickle_title", "Maguin");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Sniburr_title", "Sniburr");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.MinimokoAlly_title", "Minimoko");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.MakokoAlly_title", "Makoko");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ReMo_title", "Ré-Mi");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.HotHog_title", "Porco Quente");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.KrawlerAlly_title", "Krawler");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.DungrokAlly_title", "Rochestrume");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.LumpAlly_title", "Caroço");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Blunder_title", "Mancada");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Plunderclaw_title", "Pancada");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.FrostbiteGem_title", "Gema da Geladura");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Frostblade_title", "Lâmina Congelada");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Snowcone_title", "Sorvetão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.LavaGauntlets_title", "Manoplas Derretidas");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.FrostFangs_title", "Presas Congeladas");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SnowlingBall_title", "Bola de Avaliche");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.IcePick_title", "Picareta de Gelo");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.KingMokoAlly_title", "Rei Moko");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.PepperWitchAlly_title", "Bruxa Pimenta");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Coco_title", "Coco");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.MonkeyWorshipTotemAlly_title", "Cabeça de Moko");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.PepperBanner_title", "Banner Pimenta");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.PepperHarvest_title", "Sopa picante");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ItchingPowder_title", "Pó de Mico");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.HogAlly_title", "Porco");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.RazorAlly_title", "Razor");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WildHorn_title", "Chifre Selvagem");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SunbellCollar_title", "Colar do Sino Solar");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.RockhogCandy_title", "Doce de Porcrocha");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ShadyBrew_title", "Breja Suspeita");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.NumskullAlly_title", "Cabeça Fria");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.KrabAlly_title", "Karangueijo");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Lobba_title", "Laggos");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.IcedLemonade_title", "Limonada com Gelo");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ShinySeashell_title", "Concha Brilhante");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.CanOFog_title", "Névoa Spray");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BomBunny_title", "Coelhomba");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Thumper_title", "Thumper");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Bunner_title", "Martoelho");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Sizzle_title", "Sizzle");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Biji_title", "Biji");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Plopperfish_title", "Peixinta");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Chester_title", "Baúlio");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Sharkgor_title", "Turbaroz");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Sincor_title", "Sincor");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.InkMiniboss_title", "Flagurgeão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.NewBombom_title", "Bombom");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Sobbish_title", "Lixalamento");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.DustBun_title", "Pueilho");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Shivber_title", "Tremeezer");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Chipper_title", "Lasca");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.JunkBossPhase2_title", "Núcleo de Fogarão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.JunkBoss_title", "Fogarão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.OverburnMiniboss_title", "Alma Ansiosa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.OverburnPeon_title", "Alma Flamejante");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.DesecratedSoul_title", "Alma Profanada");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.EmberKnight_title", "Cavaleiro Brasa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SorrowingSoul_title", "A Murta que Geme");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.NewVesta_title", "Vesta");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.NewZula_title", "Zula");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.EvilChikaiju_title", "Chikaiju");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.EvilChikagoru_title", "Chikagoru");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.EvilChikashi_title", "Chikashi");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.EvilChikasan_title", "Chikasan");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.EvilChikani_title", "Chikani");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.EvilChikichi_title", "Chikichi");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ShadyBrewer_title", "Cervejeiro Obscuro");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Executioner_title", "Corta-e-Esfola");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Crower_title", "Corvu");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.EvilMonch_title", "Monch");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.DevicroMiniboss_title", "Devicro");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Kindle_title", "Arcesa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Panthra_title", "Panthra");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Hailia_title", "Graniza");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Ringlo_title", "Sininho");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BlankMaskEnemy_title", "Fada Sombra");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.LichBossPhase2_title", "Lorde Mazkrak");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.LichBoss_title", "Lorde Mazkrak");
            table.AddEntry("absentabigail.wildfrost.blahaj.Blahaj_title", "Blåhaj");
            table.AddEntry("absentabigail.wildfrost.blahaj.Blahaj_flavour", "Lhe ama e lhe aceita <3");
            table.AddEntry("absentabigail.wildfrost.blahaj.Val_title", "Val");
            table.AddEntry("absentabigail.wildfrost.blahaj.Val_flavour", "Tem um zíper na boca!");
            table.AddEntry("absentabigail.wildfrost.blahaj.Blackfisk_title", "Bläckfisk");
            table.AddEntry("absentabigail.wildfrost.blahaj.Blackfisk_flavour", "8 braços para abraçar 8 vezes melhor!");
            table.AddEntry("absentabigail.wildfrost.blahaj.Kramig_title", "Kramig");
            table.AddEntry("absentabigail.wildfrost.blahaj.Kramig_flavour", "Protege seus amigos");
            table.AddEntry("absentabigail.wildfrost.blahaj.Aftonsparv_title", "Aftonsparv");
            table.AddEntry("absentabigail.wildfrost.blahaj.Aftonsparv_flavour", "Amigo ET");
            table.AddEntry("absentabigail.wildfrost.blahaj.UFO_title", "OVNI de Resgate");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.alolansandslash_title", "Sandslash de Alola");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.meowth_title", "Meowth");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.persian_title", "Persian");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.machoke_title", "Machoke");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.machamp_title", "Machamp");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.slowpoke_title", "Slowpoke");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.slowbro_title", "Slowbro");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.magneton_title", "Magneton");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.farfetchd_title", "Farfetch'd");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.haunter_title", "Haunter");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.gengar_title", "Gengar");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.voltorb_title", "Voltorb");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.electrode_title", "Electrode");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.cubone_title", "Cubone");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.marowak_title", "Marowak");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.alolanmarowak_title", "Marowak de Alola");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.lickitung_title", "Lickitung");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.weezing_title", "Weezing");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.seadra_title", "Seadra");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.magikarp_title", "Magikarp");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.gyarados_title", "Gyarados");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.eevee_title", "Eevee");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.vaporeon_title", "Vaporeon");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.jolteon_title", "Jolteon");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.flareon_title", "Flareon");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.snorlax_title", "Snorlax");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.espeon_title", "Espeon");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.umbreon_title", "Umbreon");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.murkrow_title", "Murkrow");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.slowking_title", "Slowking");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.sneasel_title", "Sneasel");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.magcargo_title", "Magcargo");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.kingdra_title", "Kingdra");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.smeargle_title", "Smeargle");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.ludicolo_title", "Ludicolo");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.nincada_title", "Nincada");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.ninjask_title", "Ninjask");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.shedinja_title", "Shedinja");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.makuhita_title", "Makuhita");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.hariyama_title", "Hariyama");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.nosepass_title", "Nosepass");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.nosepass_flavour", "Meu campo magnético atrai toneladas de amuletos de todos os cantos");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.sableye_title", "Sableye");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.carvanha_title", "Carvanha");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.sharpedo_title", "Sharpedo");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.spinda_title", "Spinda");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.cradily_title", "Cradily");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.duskull_title", "Duskull");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.dusclops_title", "Dusclops");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.absol_title", "Absol");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.absol_flavour", "Inicialmente culpado como causador da Wildfrost");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.spheal_title", "Spheal");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.piplup_title", "Piplup");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.prinplup_title", "Prinplup");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.empoleon_title", "Empoleon");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.bastiodon_title", "Bastiodon");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.honchkrow_title", "Honchkrow");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.chingling_title", "Chingling");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.hippowdon_title", "Hippowdon");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.munchlax_title", "Munchlax");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.croagunk_title", "Croagunk");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.toxicroak_title", "Toxicroak");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.lickilicky_title", "Lickilicky");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.leafeon_title", "Leafeon");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.glaceon_title", "Glaceon");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.froslass_title", "Froslass");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.rotom_title", "Rotom");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.rotomheat_title", "Rotom Calor");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.rotomwash_title", "Rotom Lavagem");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.rotomfrost_title", "Rotom Congelante");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.rotomfan_title", "Rotom Ventilador");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.rotommow_title", "Rotom Corte");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.musharna_title", "Musharna");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.crustle_title", "Crustle");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.trubbish_title", "Trubbish");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.garbodor_title", "Garbodor");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.litwick_title", "Litwick");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.lampent_title", "Lampent");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.chandelure_title", "Chandelure");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.volcarona_title", "Volcarona");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.espurr_title", "Espurr");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.tyrantrum_title", "Tyrantrum");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.tyrantrum_flavour", "Parece ter sido congelado bem antes da tempestade");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.sylveon_title", "Sylveon");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.goomy_title", "Goomy");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.klefki_title", "Klefki");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.klefki_flavour", "Eu posso segurar todos seus amuletos por segurança ");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.salazzle_title", "Salazzle");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.polteageist_title", "Polteageist");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.kingambit_title", "Kingambit");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.shedinjamask_title", "Máscara de Shedinja");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.microwave_title", "Micro-ondas");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.microwave_flavour", "Parece ser um cofre sem uma fechadura. Qual o uso disso?");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.washingmachine_title", "Máquina de Lavar");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.washingmachine_flavour", "Um dispositivo que roda e faz barulho. Qual o uso disso?");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.fridge_title", "Congelador");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.fridge_flavour", "Este dispositivo estranho parece... Manter tudo gelado? Qual o uso disso?");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.fan_title", "Ventilador");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.fan_flavour", "Uma lâmina estranha numa gaiola ainda mais estranha. Qual o uso disso?");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.lawnmower_title", "Cortador de Grama");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.lawnmower_flavour", "Parece um tipo de veículo, mas não tem acento. Qual o uso disso?");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.dungdefender_title", "Defensor do Esterco");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.dungdefender_text", "Quando um aliado é atingido aplique 1<keyword=shroom> ao atacante.");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.hornet_title", "Hornet");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.skirmisher_title", "Hornet: Combatente");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.princess_title", "Hornet: Princesa");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.jiji_title", "Confessora Jiji");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.cloth_title", "Cloth");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.milli_title", "Millibelle");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.stag_title", "Stag");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.shadesoul_title", "Alma Sombria");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.decoy_title", "Isca");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.zote_title", "Zote o Poderoso");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.sheo_title", "Sheo");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.sheo_text", "Quando posto(a) aplique <{a}> <keyword=null> a inimigos na faixa.");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.sly_title", "Sly");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.cornifer_title", "Cornifer");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.nailsmith_title", "Nailsmith");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.grimm_title", "Grimm");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.theknight_title", "O Cavaleiro");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.voided_title", "O Cavaleiro: Vazio");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.infected_title", "O Cavaleiro: Infectado");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.tuk_title", "Tuk");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.tiso_title", "Tiso");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.maskmaker_title", "Criador de Máscaras");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.mato_title", "Mato");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.littlefool_title", "Pequeno Tolo");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.bretta_title", "Bretta");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.jinn_title", "Jinn");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.quirrel_title", "Quirrel");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.acolyte_title", "Quirrel: Acólito");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.strategist_title", "Quirrel: Estrategista");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.oro_title", "Oro");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.snailshaman_title", "Xamã Caracol");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.geochest_title", "Baú de Geo");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.baldurshell_title", "Carapaça de Baldur");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.crystalheart_title", "Coração de Cristal");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.oldnail_title", "Ferrão Velho");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.voidmask_title", "Máscara de Vazio");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.channellednail_title", "Ferrão Canalizado");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.ismastear_title", "Lágrima de Isma");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.paleore_title", "Minério Pálido");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.mothwing_title", "Manto de Asa de Mariposa");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.monomon_title", "Ensinamentos de Monomon");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.descendingdark_title", "Escuridão Descente");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.sharpenednail_title", "Ferrão Afiado");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.sharpenednail_text", "Quando comprado, ganhe <keyword=frenzy>");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.coilednail_title", "Ferrão Serpenteado");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.coilednail_text", "<keyword=draw> <{a}>");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.charmnotch_title", "Encaixe de Amuleto");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.vengefulspirit_title", "Espírito Vingativo");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.purenail_title", "Ferrão Puro");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.rancidegg_title", "Ovo Rançoso");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.trampass_title", "Passe do Bonde");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.godtuner_title", "Sintonizador de Deuses");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.godtuner_text", "Defina o <keyword=attack> de uma unidade para <{a}>");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.kingsbrand_title", "Marca do Rei");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.xero_title", "Xero");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.galien_title", "Galien");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.markoth_title", "Markoth");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.noeyes_title", "Sem Olhos");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.marmu_title", "Marmu");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.maggot_title", "Verme");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.precept_title", "Zote: Preceito #23");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.falseknight_title", "Falso Cavaleiro");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.traitor_title", "Lorde Traidor");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.watcherknight_title", "Cavaleiro Sentinela");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.soulmaster_title", "Mestre das Almas");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.mantislords_title", "Lordes Louva-a-Deus");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.dryya_title", "Dryya");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.brokenvessel_title", "Receptáculo Quebrado");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.grubfather_title", "Pailarva");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.willoh_title", "Willoh");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.brumm_title", "Brumm");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.elder_title", "Inseto Ancião");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.dreamnail_title", "Ferrão dos Sonhos");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.muk_title", "Muk");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.eevee_flavour", "Apesar das possibilidades infinitas, Eevee já é perfeita");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.furret_title", "Furret");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.natu_title", "Natu");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.xatu_title", "Xatu");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.aipom_title", "Aipom");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.hisuiansneasel_title", "Sneasel de Hisui");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.raikou_title", "Raikou");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.raikou_text", "<keyword=legendary>");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.entei_title", "Entei");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.entei_text", "<keyword=legendary>");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.suicune_title", "Suicune");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.suicune_text", "<keyword=legendary>");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.hooh_title", "Ho-Oh");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.hooh_text", "<keyword=legendary>");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.kirlia_title", "Kirlia");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.gardevoir_title", "Gardevoir");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.aron_title", "Aron");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.lairon_title", "Lairon");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.aggron_title", "Aggron");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.chimecho_title", "Chimecho");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.latias_title", "Latias");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.latias_text", "<keyword=legendary>");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.latios_title", "Latios");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.latios_text", "<keyword=legendary>");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.ambipom_title", "Ambipom");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.lumineon_title", "Lumineon");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.snover_title", "Snover");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.abomasnow_title", "Abomasnow");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.gallade_title", "Gallade");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.cresselia_title", "Cresselia");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.cresselia_text", "<keyword=legendary>");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.darkrai_title", "Darkrai");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.darkrai_text", "<keyword=legendary>");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.whimsicott_title", "Whimsicott");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.palafin_title", "Palafin");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_hypno_title", "Hypno");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_vaporeon_title", "Vaporeon");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_jolteon_title", "Jolteon");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_flareon_title", "Flareon");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_espeon_title", "Espeon");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_umbreon_title", "Umbreon");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_raikou_title", "Raikou");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.quest_raikou_title", "Raikou");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_entei_title", "Entei");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.quest_entei_title", "Entei");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_suicune_title", "Suicune");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.quest_suicune_title", "Suicune");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_hooh_title", "Ho-Oh");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_beautifly_title", "Beautifly");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_dustox_title", "Dustox");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_plusle_title", "Plusle");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_minun_title", "Minun");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_volbeat_title", "Volbeat");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_illumise_title", "Illumise");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_lunatone_title", "Lunatone");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_solrock_title", "Solrock");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_huntail_title", "Huntail");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_gorebyss_title", "Gorebyss");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_latias_title", "Latias");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_latios_title", "Latios");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_mismagius_title", "Mismagius");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_spiritomb_title", "Spiritomb");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_magmortar_title", "Magmortar");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_leafeon_title", "Leafeon");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_glaceon_title", "Glaceon");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.quest_cresselia_title", "Cresselia");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_darkrai_title", "Darkrai");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.enemy_sylveon_title", "Sylveon");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.BlessingSpicune_modifier_title", "Sino Suculento do Suicune");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.BlessingSpicune_modifier_desc", "Dê <1><keyword=spicune> a <2> cartas aleatóras no deck. Quando <keyword=spicune> for perdido, aplique <keyword=spicune> a uma carta aleatória no deck");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.BlessingEntei_modifier_title", "Sino da Combustão do Entei");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.BlessingEntei_modifier_desc", "No início de cada turno if nenhum inimigo estiver com <keyword=burning>, aplique <3><keyword=burning> a um inimigo aletório");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.BlessingRaikou_modifier_title", "Sino Zoomlin do Raikou");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.BlessingRaikou_modifier_desc", "Após tocar o <Sino de Recompra>, dê <keyword=zoomlin> a uma carta aleatória na mão");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.BlessingHooh_modifier_title", "Sino da Amizade de Ho-Oh Bell");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.BlessingHooh_modifier_desc", "Aliados são retornados para o topo do deck");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.BlessingLatios_modifier_title", "Sino da Impaciência de Latios");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.BlessingLatios_modifier_desc", "No primeiro minuto da batalha, o <Sino de Recompra> é carregado todo turno");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.BlessingLatias_modifier_title", "Sino do Impulso de Latias");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.BlessingLatias_modifier_desc", "Quando o(a) líder for atingido(a), diminua o contador do <Sino de Recompra> em 1");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.BlessingCresselia_modifier_title", "Sino dos Sonhos de Cresselia");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.BlessingCresselia_modifier_desc", "Quando o <Sino de Recompra> for tocado, adicione 2 cartas de <keyword=dream> a sua mão");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.BlessingDarkrai_modifier_title", "Sino da Destruição de Darkrai");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.BlessingDarkrai_modifier_desc", "Contador do Sino de Recompra -1. Quando o <Sino de Recompra> for tocado, destrua a carta mais à direita na sua mão antes de recomprar");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.hoohEvent_modifier_title", "Parte Misteriosa");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.hoohEvent_modifier_desc", "<Quest>: Prove sua força contra as <3> <Feras Lendárias>");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.darkraiEvent_modifier_title", "Pena Lunar");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.darkraiEvent_modifier_desc", "<Quest>: Proteja <Cresselia> e enfrente <Darkrai>");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.latiEvent_modifier_title", "Ticket Eon");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.latiEvent_modifier_desc", "<Quest>: Chegue nas <Terras Congeladas> antes que o navio zarpe");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.Darkrai_text", "Poço da Cratera Negra");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.Lati Twins_text", "Ilha do Sul");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.Ho-Oh_text", "Monte Distante");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Recurang_title", "Recurangue");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.DealersHat_title", "Chapel do Mágico");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BombersCannon_title", "Bomber's Cannon");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.JunkersSmelter_title", "Fornalha do Sujador");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.LancersPike_title", "Lança do Lanceiro");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Sunblade_title", "Lâmina Solar");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Flaxylia_title", "Flaxylia");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Snowfly_title", "Moscaneve");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Splen_title", "Splenkhakker");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Splen_flavour", "Personagem feito po Lars Korendijk (Wuppo)");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.NewGunkFruit_title", "Fruta Gosmenta");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.WeevilAlly_title", "Caruncho");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.GunkbackAlly_title", "Gorduroso");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Hussle_title", "Hussle");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SilkWand_title", "Varinha de Seda");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Muckhand_title", "Mão Gosma");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Needleblade_title", "Lâmina Ferrão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BrokenNeedleblade_title", "Lâmina Ferrão Quebrada");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.MagmaWrench_title", "Chave Magnética");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ColdDaggers_title", "Adagas Gélidas");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Demeistro_title", "Demeistro");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ShroomMiniboss_title", "Morressle");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.NewShroomine_title", "Fungarmadilha");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Funkle_title", "Funkle");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Shroomkeeper_title", "Guarda Cogumelo");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Chipi_title", "Chipi");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.NewKernel_title", "Kernel");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.PineCone_title", "Pinha");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.NewFulbert_title", "Fulbert");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.YukiMiniboss_title", "Yuki");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SnowBoom_title", "Nevexplosão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SnowAngel_title", "Anjo de Neve");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ElderSnoffel_title", "Nevô Ancião");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Kabonk_title", "Kabonk");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Blizarch_title", "Tempestarca");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.Stormbear_title", "Uso da Tempestade");
        }

        private void SetChallengesLocalizations()
        {
            var table = LocalizationHelper.GetCollection("Challenges", ModLanguage);

            table.AddEntry("Challenge Apply Snow", "Aplique {0} de Neve");
            table.AddEntry("Challenge Kill Enemies", "Mate {0} inimigos");
            table.AddEntry("Challenge Recall Companions", "Retorne {0} Companheiros");
            table.AddEntry("Challenge Kill Demonized", "Mate {0} inimigos Demonizados");
            table.AddEntry("Challenge Buy Discounts", "Compre {0} itens com desconto");
            table.AddEntry("Challenge Kill With Teeth", "Mate {0} inimigos com Presas");
            table.AddEntry("Challenge 3x Combo", "Alcance um Combo de Abates de 3x");
            table.AddEntry("Challenge 4x Combo", "Alcance um Combo de Abates de 4x");
            table.AddEntry("Challenge 6x Combo", "Alcance um Combo de Abates de 6x");
            table.AddEntry("Challenge Redraw Bell", "Toque o Sino de Recompra {0} vezes");
            table.AddEntry("Challenge Kill With Clunkers", "Mate {0} inimigos com Geringonças");
            table.AddEntry("Challenge Kill With Items", "Mate {0} inimigos com Itens");
            table.AddEntry("Challenge Block With Clunkers", "Bloqueie {0} ataques com Geringonças");
            table.AddEntry("Challenge Kill Miniboss With Clunker", "Mate um Minichefe com uma Geringonça");
            table.AddEntry("Challenge Buy Crowns", "Compre {0} Coroas");
            table.AddEntry("Challenge Blings From Single Battle", "Ganhe 50 Blings de uma única batalha");
            table.AddEntry("Challenge Equip Charms", "Equipe {0} Amuletos");
            table.AddEntry("Challenge Self Damage", "Dê {0} de dano no seu próprio time");
            table.AddEntry("Challenge Damage", "Dê {0} de dano");
            table.AddEntry("Challenge Summon", "Invoque {0} aliados");
            table.AddEntry("Challenge Apply Scrap", "Adicione {0} Sucatas a Geringonças");
            table.AddEntry("Reward Pet House", "Casa dos Pets Desbloqueada!");
            table.AddEntry("Reward Pet", "Novo Pet Desbloqueado!");
            table.AddEntry("Reward Inventors Hut", "Cabana do Inventor Desbloqueada!");
            table.AddEntry("Reward Item", "Novo Item Desbloqueado!");
            table.AddEntry("Reward Hot Spring", "Termas Desbloqueadas!");
            table.AddEntry("Reward Companion", "Novo Companheiro Desbloqueado!");
            table.AddEntry("Reward Tribe", "Nova Tribo Desbloqueada!");
            table.AddEntry("Challenge Locked", "Bloqueado");
            table.AddEntry("Challenge Spend Blings", "Gaste {0} Blings");
            table.AddEntry("Reward Icebreakers", "Cabine Quebra-gelo Desbloqueada!");
            table.AddEntry("Reward Event", "Novo Evento de Mapa Desbloqueado!");
            table.AddEntry("Challenge Blings From Goblings", "Ganhe {0} Blings de Goblings");
            table.AddEntry("Challenge Kill With Shroom", "Mate {0} inimigos com Fungo");
            table.AddEntry("Challenge Feed Muncher", "Alimente o Devorador {0} vezes");
            table.AddEntry("Challenge Gain Clunkers", "Adicione {0} Geringonças ao seu deck");
            table.AddEntry("Challenge Apply Shell", "Aplique {0} Cascas");
            table.AddEntry("Challenge Kill With Smackback", "Use Contra-golpe para matar {0} inimigos");
            table.AddEntry("Challenge Lone Survivor", "Vença uma batalha com apenas seu Líder vivo");
            table.AddEntry("Challenge Big Hit 1", "Dê 50 de dano em um único golpe");
            table.AddEntry("Challenge Big Hit 2", "Dê 100 de dano em um único golpe");
            table.AddEntry("Challenge Sacrifice", "Sacrifique 5 aliados em uma única batalha");
            table.AddEntry("Challenge Sword Final Boss", "Derrote o Guardião Congelado com uma Espada Cega");
            table.AddEntry("Challenge Big Snow", "Acumule 15 de Neve em um único alvo");
            table.AddEntry("Challenge Big Shell", "Acumule 50 Cascas em um único alvo");
            table.AddEntry("Challenge Big Shroom", "Acumule 20 Fungos em um único alvo");
            table.AddEntry("Challenge Big Block", "Acumule 5 Bloqueios em um único alvo");
            table.AddEntry("Challenge Naked Gnome", "Poupe o Gnomo Pelado");
            table.AddEntry("Challenge Feed Muncher Food", "Alimente o Devorador um item Consumível");
            table.AddEntry("Challenge Daily Run", "Ganhe uma Jornada Diária");
            table.AddEntry("Challenge Shop Charms", "Compre 3 Amuletos de uma única loja");
            table.AddEntry("Reward Charm", "Novo Amuleto Desbloqueado!");
            table.AddEntry("Challenge Lone Survivor Name", "Único Sobrevivente");
            table.AddEntry("Challenge Big Hit 1 Name", "Bom Golpeador");
            table.AddEntry("Challenge Big Hit 2 Name", "Ótimo Golpeador");
            table.AddEntry("Challenge Sacrifice Name", "Ritual");
            table.AddEntry("Challenge Sword Final Boss Name", "Um Soco");
            table.AddEntry("Challenge Big Snow Name", "Guerra de Bola-de-neve");
            table.AddEntry("Challenge Big Shell Name", "Casca Grossa");
            table.AddEntry("Challenge Big Shroom Name", "Tóxico");
            table.AddEntry("Challenge Big Block Name", "Rei Gelado");
            table.AddEntry("Challenge Naked Gnome Name", "Gnomo Amigo");
            table.AddEntry("Challenge Survive King Moko Name", "Vida Longa ao Rei");
            table.AddEntry("Challenge Survive King Moko", "Sobreviva a um ataque do Rei Moko e ganhe a batalha");
            table.AddEntry("Challenge Feed Muncher Food Name", "Alimente a Fera");
            table.AddEntry("Challenge Daily Run Name", "Balonista ");
            table.AddEntry("Challenge Shop Charms Name", "Grande Apostador");
            table.AddEntry("Challenge Win Streak Name", "Imbatível");
            table.AddEntry("Challenge Win Streak", "Alcance uma Sequência de 3 Vitórias");
            table.AddEntry("Challenge True Win", "Derrote o Coração da Tempestade");
            table.AddEntry("Challenge True Win Name", "Arauto do Sol");
            table.AddEntry("Challenge Call Enemy Waves", "Toque o Sino de Inimigos {0} vezes");
            table.AddEntry("Challenge Apply Ink To Team", "Aplique {0} de Tinta no seu próprio time");
            table.AddEntry("Challenge Gnome Win Name", "Portador dos Gnomos");
            table.AddEntry("Challenge Gnome Win", "Ganhe uma aventura com o Gnomo Pelado no seu time");
            table.AddEntry("Challenge Hoarder Name", "Acumulador");
            table.AddEntry("Challenge Hoarder", "Tenha 12 ou mais cartas na sua mão ao mesmo tempo");
            table.AddEntry("Challenge Charmless Name", "Alérgico a Amuletos");
            table.AddEntry("Challenge Charmless", "Vença uma aventura sem Amuletos equipados");
            table.AddEntry("Challenge Frenzy Name", "Alvoroço");
            table.AddEntry("Challenge Frenzy", "Acumule x10 de Frenesi em um único alvo");
            table.AddEntry("Challenge Win With Pet Name", "Melhores Amigos");
            table.AddEntry("Challenge Win With Pet", "Ganhe uma aventura com seu pet como único Companheiro");
            table.AddEntry("Challenge Minimalist Name", "Minimalista");
            table.AddEntry("Challenge Minimalist", "Ganhe uma batalha sem cartas sobrando no seu deck");
            table.AddEntry("Challenge High Health Name", "Frutástico");
            table.AddEntry("Challenge High Health", "Tenha 30 ou mais de vida em uma única unidade");
            table.AddEntry("Challenge Tribe 1 Name", "Nevabrigante");
            table.AddEntry("Challenge Tribe 1", "Ganhe uma aventura com a tribo Nevabrigante");
            table.AddEntry("Challenge Tribe 2 Name", "Dobrassombras");
            table.AddEntry("Challenge Tribe 2", "Ganhe uma aventura com a tribo dos Dobrassombras");
            table.AddEntry("Challenge Tribe 3 Name", "Mestre Geringonça");
            table.AddEntry("Challenge Tribe 3", "Ganhe uma aventura com a tribo dos Mestres Geringonça");
            table.AddEntry("Challenge Boss Without SnowName", "Domador de Feras");
            table.AddEntry("Challenge Boss Without Snow", "Mate um Chefão sem aplicar Neve nele");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BonKoreYoyoChallenge_title", "Desafio YoYo Fogueirão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BonKoreYoyoChallenge_text", "Termine O Ninho do Fogo com apenas Lixo na sua mão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BonKoreYoyoChallenge_reward", "Novo Item Desbloqueado!");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.MazkinMaskChallenge_title", "Desafio Máscara de Mazkin");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.MazkinMaskChallenge_text", "Termine o Lorde Mazkrak sem aplicar Congelamento a inimigos");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.MazkinMaskChallenge_reward", "Novo Item Desbloqueado!");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.FickleCaneChallenge2_title", "Desafio Bengala de Fickle");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.FickleCaneChallenge2_text", "Derrote cada Caçador de Recompensas");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.FickleCaneChallenge2_reward", "Novo Item Desbloqueado!");
        }

        private void SetCreditsLocalizations()
        {
            var table = LocalizationHelper.GetCollection("Credits", ModLanguage);

            table.AddEntry("Thank you for playing", "Obrigado por jogar!");
            table.AddEntry("Programming And Design", "Programação & Design");
            table.AddEntry("Art And Design", "Arte & Design");
            table.AddEntry("Music", "Música ");
            table.AddEntry("Sound Design", "Design de Sons ");
            table.AddEntry("Business Development", "Gerente de Desenvolvimento de Produto");
            table.AddEntry("Published By", "Time de Publicação");
            table.AddEntry("QA", "QA");
            table.AddEntry("Product Marketing", "Coordenadores de Marketing de Produto");
            table.AddEntry("Promo Art", "Arte Promocional");
            table.AddEntry("Video Editing", "Edição de Vídeo");
            table.AddEntry("Japanese Localization", "Tradução Japonesa");
            table.AddEntry("Korean Localization", "Tradução Coreana");
            table.AddEntry("Chinese Localization", "Tradução Chinesa");
            table.AddEntry("Playtesters", "Testadores de Jogabilidade");
            table.AddEntry("Special Thanks", "Agradecimentos Especiais");
            table.AddEntry("Marketing Localization", "Tradução de Marketing");
            table.AddEntry("Controller Support", "Suporte de Controle");
            table.AddEntry("PR", "PR");
            table.AddEntry("Friends From China", "Amigos Chineses");
            table.AddEntry("Business Development Manager", "Gerente de Desenvolvimento de Negócio");
            table.AddEntry("Lead Developers", "Desenvolvedores-chefe");
            table.AddEntry("Developers", "Desenvolvedores");
            table.AddEntry("Testers", "Testadores ");
            table.AddEntry("Lead Project Manager", "Gerente de Projeto Principal");
            table.AddEntry("Project Manager", "Gerente de Projeto");
        }

        private void SetEffectsLocalizations()
        {
            var table = LocalizationHelper.GetCollection("Effects", ModLanguage);

            table.AddEntry("add_something", "[Aa]dicione {0}");
            table.AddEntry("apply_something", "[Aa]plique {0}");
            table.AddEntry("apply_equal_something", "[Aa]plique igual a {0}");
            table.AddEntry("gain_something", "[Gg]anhe {0}");
            table.AddEntry("enemies_gain_something", "[Ii]nimigos ganham {0}");
            table.AddEntry("allies_gain_something", "[Aa]liados ganham {0}");
            table.AddEntry("allies_in_row_gain_something", "[Aa]liados na faixa ganham {0}");
            table.AddEntry("allies_and_enemies_gain_something", "[Tt]odos aliados e inimigos ganham {0}");
            table.AddEntry("lose_something", "[Pp]erca {0}");
            table.AddEntry("count_down_something", "[Dd]iminua {0}");
            table.AddEntry("reduce_something", "[Rr]eduza {0}");
            table.AddEntry("reduce_attackers_something", "[Rr]eduza o {0} do atacante");
            table.AddEntry("increase_something", "[Aa]umente {0}");
            table.AddEntry("drop_something", "[Ll]argue {0}");
            table.AddEntry("restore_something", "[Rr]estaure {0}");
            table.AddEntry("restore_their_something", "[Rr]estaure o(a) {0} deles");
            table.AddEntry("deal_damage", "[Dd]ê <{a}> de dano");
            table.AddEntry("deal_equal_damage", "[Dd]ê dano equivalente");
            table.AddEntry("deal_additional_damage", "[Dd]ê <{a}> de dano adicional");
            table.AddEntry("increase_all_applied_by", "[Aa]umente todos {0} aplicados por <{a}>");
            table.AddEntry("by", "{0} em <{a}>");
            table.AddEntry("health_by", "<keyword=health> em {0}");
            table.AddEntry("attack_by", "<keyword=attack> em {0}");
            table.AddEntry("counter_by", "<keyword=counter> em {0}");
            table.AddEntry("summon_something", "[Ii]nvoque {0}");
            table.AddEntry("reduce_by", "[Rr]eduza em {0}");
            table.AddEntry("increase_by", "[Aa]umente em {0}");
            table.AddEntry("increased_by", "{0} é aumentado em <{a}>");
            table.AddEntry("double_amount", "[Dd]obre a quantidade");
            table.AddEntry("double_amount_and", "[Dd]obre a quantidade e {0}");
            table.AddEntry("on_kill_do_something", "Em abates, {0}");
            table.AddEntry("increase_all_applied", "[Aa]umente todos {0} aplicados");
            table.AddEntry("when_deployed_do_something", "Quando posto(a), {0}");
            table.AddEntry("when_destroyed_do_something", "Quando destruído(a), {0}");
            table.AddEntry("when_ally_attacks_to_something", "Quando um aliado atacar, {0}");
            table.AddEntry("when_enemy_attacks_do_something", "Quando um inimigo atacar, {0}");
            table.AddEntry("when_healed_do_something", "Quando curado(a), {0}");
            table.AddEntry("when_hit_do_something", "Quando atingido(a), {0}");
            table.AddEntry("when_anything_shroomed", "Quando qualquer coisa receber <keyword=shroom>, {0}");
            table.AddEntry("when_anything_snowed", "Quando qualquer coisa receber <keyword=snow>, {0}");
            table.AddEntry("when_snowed", "Quando receber <keyword=snow>, {0}");
            table.AddEntry("while_active", "Enquanto ativo(a), {0}");
            table.AddEntry("to_random_ally", "{0} a um aliado aleatório");
            table.AddEntry("to_random_enemy", "{0} a um inimigo aleatório");
            table.AddEntry("to_random_ally_or_enemy", "{0} a um aliado ou inimigo aleatório");
            table.AddEntry("to_all_allies", "{0} a todos aliados");
            table.AddEntry("to_all_enemies", "{0} a todos inimigos");
            table.AddEntry("to_allies_in_row", "{0} a aliados na faixa");
            table.AddEntry("to_self_and_allies_in_row", "{0} a si mesmo(a) e aliados na faixas");
            table.AddEntry("to_enemies_in_row", "{0} a inimigos na faixa");
            table.AddEntry("to_everyone", "{0} a todos na batalha");
            table.AddEntry("to_front_ally", "{0} ao aliado da frente");
            table.AddEntry("to_front_allies", "{0} a aliados das frentes");
            table.AddEntry("to_ally_ahead", "{0} a aliado à frente");
            table.AddEntry("to_all_undamaged_enemies", "{0} a todos inimigos não feridos");
            table.AddEntry("to_damaged_targets", "{0} a alvos feridos");
            table.AddEntry("to_shelled_targets", "{0} a alvos com <keyword=shell>");
            table.AddEntry("to_snowed_targets", "{0} a alvos com <keyword=snow>");
            table.AddEntry("to_attacker", "{0} ao atacante");
            table.AddEntry("to_them", "{0} a eles");
            table.AddEntry("to_crown_allies", "{0} a aliados com <sprite name=crown>");
            table.AddEntry("equal_to_damage_dealt", "{0} igual ao dano dado");
            table.AddEntry("to_front_ally_equal_to_health_taken", "{0} ao aliado da frente igual a <keyword=health> recebido");
            table.AddEntry("on_kill", "{0} em abates");
            table.AddEntry("when_hit", "{0} quando atingido(a)");
            table.AddEntry("when_healed", "{0} quando curado(a)");
            table.AddEntry("when_played", "{0} quando jogado(a)");
            table.AddEntry("when_ally_attacks", "{0} quando um aliado atacar");
            table.AddEntry("when_ally_in_row_attacks", "{0} quando um aliado na faixa atacar");
            table.AddEntry("when_ally_hit", "{0} quando um aliado é atingido");
            table.AddEntry("when_ally_healed", "{0} quando um aliado é curado");
            table.AddEntry("when_ally_killed", "{0} quando um aliado é morto");
            table.AddEntry("when_damaged_by_something", "{0} quando receber dano de {e}");
            table.AddEntry("when_something_reaches_amount", "{0} quando {e} chegar a <{a}>");
            table.AddEntry("trigger", "[Aa]tive");
            table.AddEntry("trigger_against_target", "[Aa]tive contra o alvo");
            table.AddEntry("trigger_against_anything_hit_by", "[Aa]tive contra qualquer coisa atingida por {0}");
            table.AddEntry("eat_random_ally", "Devore um aliado aleatório, absorvendo seu <keyword=attack>, <keyword=health> e efeitos");
            table.AddEntry("eat_allies_in_row", "Devore aliados na faixa, absorvendo seus <keyword=attack> e <keyword=health>");
            table.AddEntry("escape_from_battle", "[Ff]uja da batalha");
            table.AddEntry("boost_front_ally", "[Aa]umente os efeitos do aliado da frente");
            table.AddEntry("boost_cards_in_hand", "[Aa]umente os efeitos das cartas na mão");
            table.AddEntry("allies_become_immune_to", "[Aa]liados se tornam imunes a {0}");
            table.AddEntry("while_damaged", "Enquanto ferido, {0}");
            table.AddEntry("double_something", "[Dd]dobre {0}");
            table.AddEntry("cards_in_hand", "{0} na sua mão");
            table.AddEntry("destroy_self", "[Dd]estrua-se");
            table.AddEntry("tar_blades", "<Lâminas Sombrias>");
            table.AddEntry("deal_additional_damage_equal_to", "[Dd]ê dano adicional igual a {0}");
            table.AddEntry("on_all_cards", "{0} em todas as cartas");
            table.AddEntry("when_ally_healed_do_something", "Quando um aliado é curado, {0}");
            table.AddEntry("when_ally_hit_do_something", "Quando um aliado é atingido, {0}");
            table.AddEntry("make_something", "[Ff]aça {0}");
            table.AddEntry("when_enemy_killed_do_something", "Quando um inimigo é morto, {0}");
            table.AddEntry("when_anything_damaged_by_shroom", "Quando qualquer coisa receber dano de <keyword=shroom>, {0}");
            table.AddEntry("card_text_ice_forge", "Enquanto ativo(a), adicione <+{s0}><keyword=attack> a todos aliados e <-{s1}><keyword=attack> a todos inimigos");
            table.AddEntry("equal_something", "[Ii]gual {0}");
            table.AddEntry("double_targets_something", "[Dd]obre o {0} do alvo");
            table.AddEntry("to_card_in_hand", "{0} a uma carta na sua mão");
            table.AddEntry("card_text_must_be_snowed", "Alvo deve estar com <keyword=snow>");
            table.AddEntry("copy_of_an_ally", "uma cópia de um aliado");
            table.AddEntry("restore_all_allies", "[Rr]estaure o {0} de todos aliados");
            table.AddEntry("equal_to_something", "[Ii]gual a {0}");
            table.AddEntry("deal_damage_equal_to", "[Dd]ê dano igual a {0}");
            table.AddEntry("to_frosted_targets", "{0} a inimigos com <keyword=frost>");
            table.AddEntry("to_ally_behind", "{0} ao aliado atrás");
            table.AddEntry("against_attacker", "{0} contra o atacante");
            table.AddEntry("trigger_allies", "[Aa]tive aliados");
            table.AddEntry("against_target", "{0} contra o alvo");
            table.AddEntry("against_anything_hit_by", "{0} contra qualquer coisa que é atingida por {e}");
            table.AddEntry("card_text_must_be_somethinged", "Alvo precisa estar com {e}");
            table.AddEntry("take_something", "[Tt]ome {0}");
            table.AddEntry("take_something_from", "[Tt]ome {e} de {0}");
            table.AddEntry("a_random_ally", "um aliado aleatório");
            table.AddEntry("in_order_to_attack", "{0} para poder atacar");
            table.AddEntry("on_board", "{0} no tabuleiro");
            table.AddEntry("to_all_somethinged_enemies", "{0} a todos inimigos com {e}");
            table.AddEntry("their_something", "seus {0}");
            table.AddEntry("lost_something", "perdido(a) {0}");
            table.AddEntry("current_something", "{0} atual");
            table.AddEntry("with_health", "{0} com <{a}><keyword=health>");
            table.AddEntry("when_ally_sacrificed_do_something", "Quando um aliado é <keyword=sacrificed>, {0}");
            table.AddEntry("when_sacrificed_do_something", "Quando <keyword=sacrificed>, {0}");
            table.AddEntry("to_all_summoned_allies", "{0} a todos aliados <Invocados>");
            table.AddEntry("an_ally", "um aliado");
            table.AddEntry("an_enemy", "um inimigo");
            table.AddEntry("an_item", "um <Item> na mão");
            table.AddEntry("copy_of", "uma cópia de {0}");
            table.AddEntry("copy_effects_of", "copie os efeitos de {0}");
            table.AddEntry("on_your_side", "{0} no seu lado");
            table.AddEntry("on_enemy_side", "{0} no lado do inimigo");
            table.AddEntry("a_random_enemy", "um inimigo aleatório");
            table.AddEntry("to_front_enemy", "{0} ao aliado da frente");
            table.AddEntry("all_allies", "todos aliados");
            table.AddEntry("all_enemies", "todos inimigos");
            table.AddEntry("when_health_lost_do_something", "Quando perder <keyword=health>, {0}");
            table.AddEntry("retain_something", "[Rr]etem {0}");
            table.AddEntry("all_allies_something", "todos aliados {0}");
            table.AddEntry("all_enemies_something", "todos inimigos {0}");
            table.AddEntry("allies_in_row_something", "aliados na faixa {0}");
            table.AddEntry("enemies_in_row_something", "inimigos na faixa {0}");
            table.AddEntry("when_enemy_with_shroom_dies_do_something", "Quando um inimigo com <keyword=shroom> morrer, {0}");
            table.AddEntry("also_hits_something", "[Tt]ambém atinge {0}");
            table.AddEntry("ally_ahead", "aliado à frente");
            table.AddEntry("ally_behind", "aliado atrás");
            table.AddEntry("to_everything", "{0} a TUDO");
            table.AddEntry("all_items", "<Itens> na sua mão");
            table.AddEntry("to_cards_in_hand", "{0} a cartas na mão");
            table.AddEntry("to_items_in_hand", "{0} a <Itens> na mão");
            table.AddEntry("kill_something", "[M]ate {0}");
            table.AddEntry("when_ally_sacrificed", "{0} quando um aliado for <keyword=sacrificed>");
            table.AddEntry("when_built_do_something", "Quando construído, {0}");
            table.AddEntry("to_hand", "{0} a sua mão");
            table.AddEntry("card_destroy_card_in_hand", "Destrua uma carta na sua mão");
            table.AddEntry("trigger_all_allies", "[Aa]tive todos aliados");
            table.AddEntry("give_something", "[Dd]ê {0}");
            table.AddEntry("to_self_and_allies", "{0} a si mesmo(a) e aliados");
            table.AddEntry("when_enemy_deployed_do_something", "Quando um inimigo é posto, {0}");
            table.AddEntry("when_ally_deployed_do_something", "Quando um aliado é posto, {0}");
            table.AddEntry("copy_their_effects", "copie seus efeitos");
            table.AddEntry("when_ally_killed_do_something", "Quando um aliado é morto, {0}");
        }

        private void SetJournalLocalizations()
        {
            var table = LocalizationHelper.GetCollection("Journal", ModLanguage);

            table.AddEntry("journal luminice 3", "A cidade de <b><#805D46>Nevabrigo</color></b> é construída em volta de um gigantesco icebergue de Luminância, provendo a seus habitantes uma atmosfera aconchegante, luz suave, e água corrente. Se tornando um refúgio seguro do congelamento incessante.");
            table.AddEntry("journal shades title", "Sombras");
            table.AddEntry("journal luminice 2", "Estes fragmentos de Luminância possuem uma habilidade única que amplifica os efeitos daqueles que as seguram, ou itens que são infundidos com elas.");
            table.AddEntry("journal luminice 1", "Luminância é formada durante o fenômeno raro onde água de uma terma em erupção congela instantaneamente, criando um tipo especial de gelo que é morno ao toque.");
            table.AddEntry("journal gnomes title", "Gnomos");
            table.AddEntry("journal wildfrost title", "A WILDFROST");
            table.AddEntry("journal wildfrost part 1", "Quando a neve começou a cair e a temperatura abaixou, nós sabíamos que aquilo era uma tempestade como jamais vista. Com o passar dos meses, a neve ficou e o frio piorou. Não tinha como escapar a <b>WILDFROST</b>, a medida que ela se espalhava como um incêndio florestal de neve e gelo.");
            table.AddEntry("journal wildfrost part 2", "Muitos acreditavam que a tempestade tinha uma fonte sobrenatural. Corajosos aventureiros desbravaram o desconhecido, determinados a acabar com a tempestade...");
            table.AddEntry("journal wildfrost part 3", "Eu, também, decidi aceitar o desafio. Mas como aqueles que vieram antes de mim, não fui capaz de entrar no coração da tempestade...");
            table.AddEntry("journal wildfrost part 4", "Se alguém ler isto, use o conhecimento nestas páginas para seguir em frente e trazer o sol de volta ao nosso mundo. Juntos, podemos restaurar o calor e a luz a essa terra congelada.");
            table.AddEntry("journal sun title", "O SOL");
            table.AddEntry("journal sun part 1", "Muitos anos atrás, antes do inverno eterno, existia um espírito astuto no seu conhecido como <b>SOL</b>.");
            table.AddEntry("journal sun part 2", "O Sol era a essência de toda a vida, sua luz radiante provia calor e nutrição para tudo que era vivo.");
            table.AddEntry("journal sun part 3", "A luz dourada não durou para sempre...\r\nUma tempestade terrível desceu à terra, engolindo o Sol e deixando um cubo de gelo sem vida no céu. Agora, tudo o que resta é uma fraca e vazia luz que oferece nenhum calor ou conforto.");
            table.AddEntry("journal shades part 1", "<b><#825A43>Antes da Wildfrost</color></b><line-height=0.9>\r\n</line-height>Sombras eram criaturas da escuridão conhecidas pela sua habilidade de possuir objetos. Essas criaturas raramente vistas ocasionalmente podiam ser encontradas um lugares escuros e frios, como conchas e potes.");
            table.AddEntry("journal shades part 2", "<b><#643D34>Depois da Wildfrost</color></b><line-height=0.9>\r\n</line-height>A medida que o mundo se tornou gélido e escuro, Sombras prevaleceram e se tornaram mais fortes. Elas começaram a possuir objetos perigoso e a transformá-los em oponentes monstruosos.");
            table.AddEntry("journal shades part 3", "Uma tribo conhecida como <b><#643D34>Dobrassombras</color></b> encontrou um jeito de extrair poder dessas criaturas. Usando máscaras artesanais únicas, eles conseguiram tornar as Sombras em aliadas confiáveis!");
            table.AddEntry("journal gnomes part 1", "<b><#825A43>Antes da Wildfrost</color></b>\r\nGnomos eram uma raça pacífica que passavam seus dias construindo Geringonças e máquinas magníficas.");
            table.AddEntry("journal gnomes part 2", "<b><#643D34>Depois da Wildfrost</color></b>\r\nOs Gnomos restantes se juntaram e desenvolveram novas Geringonças para ajudá-los a navegar o ambiente frio e hostil.");
            table.AddEntry("journal gnomes part 3", "Sua outrora próspera cidade de <b><#245356>Gnomolândia</color></b> foi perdida durante a tempestade, mas os Gnomos perseveraram. Eventualmente, eles encontraram Nevabrigo e se juntaram as forças na luta contra a Wildfrost...");
            table.AddEntry("journal luminice title", "Luminância");
            table.AddEntry("journal luminice note 1", "pressão do vapor");
            table.AddEntry("journal luminice note 2", "vento frio");
            table.AddEntry("journal luminice note 3", "<voffset=-1em><margin-left=1em>Núcleo de Luminância!");
            table.AddEntry("journal luminice note 4", "Bolsa de viagem infundida com Luminância. Pode conter mais do que os olhos podem ver!");
            table.AddEntry("journal frost guardian title", "A Sombra Imperadora");
            table.AddEntry("journal frost guardian 1", "Quando chegamos perto do olho da tempestade, rosnados e rugidos ecoavam nos ventos gélidos, nós encontramos uma sombra de outro mundo...");
            table.AddEntry("journal frost guardian 2", "Criaturas abomináveis se juntavam ao redor dela como se estivessem em transe...");
            table.AddEntry("journal frost guardian 3", "Essa sombra... ela possui não só o poder de possuir objetos inanimados, mas também coisas vivas! <#D87B66>Lutas é perda de tempo...");
            table.AddEntry("journal frost guardian 4", "Eu devo voltar e avisar aos outros...");
            table.AddEntry("journal frost guardian 5", "NÃO SE APROXIME DAQUILO DE FORMA ALGUMA!");
        }

        private void SetModifiersLocalizations()
        {
            var table = LocalizationHelper.GetCollection("Modifiers", ModLanguage);

            table.AddEntry("Aimless Items", "Sino da Neblina");
            table.AddEntry("Aimless Items Desc", "Seus itens iniciais começam com <keyword=aimless>");
            table.AddEntry("Block For Minibosses", "Sino Coração Congelado");
            table.AddEntry("Block For Minibosses Desc", "Minichefes têm menos <keyword=health>, mas começam com um pouco de <keyword=block>");
            table.AddEntry("Random Companion", "Ombro amigo");
            table.AddEntry("Random Companion Desc", "Começa com um companheiro aleatório ao invés de um pet");
            table.AddEntry("No Companion Limit", "Sino da Festa");
            table.AddEntry("No Companion Limit Desc", "Sem mais limites de companheiros!");
            table.AddEntry("Increase Hand Size", "Ás na Manga");
            table.AddEntry("Increase Hand Size Desc", "Quantidade de cartas na mão aumenta em <1>");
            table.AddEntry("Boost Leader Stats", "Líder Melhorado");
            table.AddEntry("Boost Leader Stats Desc", "Seu líder tem os status melhorados");
            table.AddEntry("Random Items", "Presente de Despedida");
            table.AddEntry("Random Items Desc", "Inicie com alguns itens aleatórios");
            table.AddEntry("Increase Redraw Bell", "Sino Quebrado");
            table.AddEntry("Increase Redraw Bell Desc", "Contador do <Sino de Recompra> aumenta em <2>");
            table.AddEntry("Permadeath", "Sino da Morte");
            table.AddEntry("Permadeath Desc", "Companheiros morrem para sempre quando mortos em batalha");
            table.AddEntry("Expensive Shops", "Sino Lesmabling");
            table.AddEntry("Expensive Shops Desc", "Alguns itens nas lojas são mais caros");
            table.AddEntry("Drain Leader After Battle", "Sino de Sangue");
            table.AddEntry("Drain Leader After Battle Desc", "Seu Líder perde <1><keyword=health> a cada batalha");
            table.AddEntry("Bombskull Clunkers", "Sino Bomba-Caveira");
            table.AddEntry("Bombskull Clunkers Desc", "Todos <Geringonças> aliadas e inimigas possuem <Amuletos Bomba-Caveira>");
            table.AddEntry("Double Gobling Blings", "Sino Saco de Bling");
            table.AddEntry("Double Gobling Blings Desc", "<Goblings> largam <keyword=blings> dobrados mas seus <keyword=counter> reduzem em <1>");
            table.AddEntry("Double Combo Blings", "Sino Lâmina Dourada");
            table.AddEntry("Double Combo Blings Desc", "<Combos> dão <keyword=blings> dobrados mas inimigos não largam mais <keyword=blings> quando mortos");
            table.AddEntry("Boost All Effects", "Sino Lumin");
            table.AddEntry("Boost All Effects Desc", "Todos os efeitos de todas as cartas melhoram em <1>");
            table.AddEntry("Increase All Health And Damage", "Sino Coração");
            table.AddEntry("Increase All Health And Damage Desc", "Todos companheiros e inimigos têm <+2><keyword=health>");
            table.AddEntry("Blessing of Hands", "Sino Solar das Mãos");
            table.AddEntry("Blessing of Hands Desc", "Compra de Cartas <+1>");
            table.AddEntry("Blessing of Friendship", "Sino Solar do Companheirismo");
            table.AddEntry("Blessing of Friendship Desc", "Limite de Companheiros e Amuletos <+1>");
            table.AddEntry("Blessing of the Bell", "Sino Solar do Sino");
            table.AddEntry("Blessing of the Bell Desc", "Contador do Sino de Recompra <-1>");
            table.AddEntry("Harder Enemies", "Sino do Remorso");
            table.AddEntry("Harder Enemies Desc", "Alguns inimigos serão melhorados com Amuletos e largarão mais <keyword=blings>");
            table.AddEntry("Harder Minibosses", "Sino das Hordas");
            table.AddEntry("Harder Minibosses Desc", "Contador do Sino de Inimigos diminui, mas você começa com uma Coroa");
            table.AddEntry("Sunbringer", "Sino Titã");
            table.AddEntry("Sunbringer Desc", "Batalhas de Chefões mais difíceis, mas recompensas de itens terão mais uma opção");
            table.AddEntry("Charm Bell", "Sino dos Amuletos");
            table.AddEntry("Charm Bell Desc", "Algumas cartas de recompensa iniciarão com amuletos equipados");
            table.AddEntry("Demon Bell", "Sino Cabra");
            table.AddEntry("Demon Bell Desc", "Seu líder inicia com <1><keyword=demonize>");
            table.AddEntry("Boost Enemy Bell", "Sino de Batalha");
            table.AddEntry("Boost Enemy Bell Desc", "Inimigos tem <+1><keyword=attack> e <+1><keyword=health>");
            table.AddEntry("Frenzy Bosses Bell", "Sino da Frenesi");
            table.AddEntry("Frenzy Bosses Bell Desc", "Chefões & Minichefes ganham <x1><keyword=frenzy>");
            table.AddEntry("Blessing of Health", "Sino Solar da Saúde");
            table.AddEntry("Blessing of Health Desc", "<+6><keyword=health> ao líder ");
            table.AddEntry("Blessing of Time", "Sino Solar do Tempo");
            table.AddEntry("Blessing of Time Desc", "Contador do Sino de Inimigos <+1>");
            table.AddEntry("Blessing of Crown", "Sino Solar dos Reis");
            table.AddEntry("Blessing of Crown Desc", "Ganhe uma <sprite name=crown>");
            table.AddEntry("Blessing of Recall", "Sino Solar do Retorno");
            table.AddEntry("Blessing of Recall Desc", "<Retornar> um <Companheiro> vai diminuir o contador do <Sino de Recompra> em <2>");
            table.AddEntry("Blessing of Redraw", "Sino Solar da Carga");
            table.AddEntry("Blessing of Redraw Desc", "Inicie cada batalha com o <Sino de Recompra> totalmente <Carregado>");
            table.AddEntry("Harder Enemies Desc 2", "Alguns inimigos serão melhorados com <Amuletos>");
            table.AddEntry("Harder Minibosses Desc 2", "Reduz o contador do <Sino de Inimigos>");
            table.AddEntry("Sunbringer Desc 2", "Mas inimigos em Batalhas de Chefão");
            table.AddEntry("Companion Injuries", "Sino da Morte");
            table.AddEntry("Companion Injuries Desc", "Companheiros ficam <Machucados> temporariamente quando mortos em Batalha");
            table.AddEntry("Frostlands Increase Attack", "Sino da Geada");
            table.AddEntry("Frostlands Increase Attack Desc", "Alguns inimigos nas <Terras Congeladas> serão melhorados com <Amuletos do Sol>");
            table.AddEntry("Deadweight", "Sino Gosma");
            table.AddEntry("Deadweight Desc", "Ganhe uma <Fruta Gosmenta> a cada Batalha de Chefão");
            table.AddEntry("Cards With Bad Charms", "Sino da Melancolia");
            table.AddEntry("Cards With Bad Charms Desc", "Algumas cartas de recompensa terão <Amuletos Amaldiçoados>");
            table.AddEntry("Bosses More Health", "Sino Coração-Negro");
            table.AddEntry("Bosses More Health Desc", "Chefões e Minichefes têm <keyword=health> aumentada");
            table.AddEntry("Ice Caves Increase Attack", "Sino Glacinata");
            table.AddEntry("Ice Caves Increase Attack Desc", "Alguns inimigos nas <Cavernas de Gelo> serão melhorados com <Amuletos de Batalha>");
            table.AddEntry("Bosses Have Charms", "Sino Titã");
            table.AddEntry("Bosses Have Charms Desc", "Chefões e Minichefes serão melhorados com <Amuletos>");
            table.AddEntry("Reduce Boss Wave Counter", "Sino Mão-Congelada");
            table.AddEntry("Reduce Boss Wave Counter Desc", "Alguns inimigos em lutas de Chefões serão melhorados com <Amuletos Mão-congelada>");
            table.AddEntry("Negative Charms After Bosses", "Sino Jinx");
            table.AddEntry("Negative Charms After Bosses Desc", "A cada Chefão, você deve pegar um <Amuleto Amaldiçoado>");
            table.AddEntry("Add Enemy To Boss Battles", "Sino Comilão");
            table.AddEntry("Add Enemy To Boss Battles Desc", "Adiciona um <Comilão> a toda Batalha de Chefão");
            table.AddEntry("Increase Shop Prices", "Sino Lesmabling");
            table.AddEntry("Increase Shop Prices Desc", "Todos os preços das lojas aumentam em <5> e o preço de <Coroas> aumenta em <10> a cada compra");
            table.AddEntry("Frostlands Increase Attack Desc 2", "Inimigos nas <Terras Congeladas> ganham <+1><keyword=attack>");
            table.AddEntry("Blessing of Noomlin", "Sino Solar Noomlin");
            table.AddEntry("Blessing of Noomlin Desc", "Adicione <keyword=noomlin> a <2> cartas aleatórias no seu deck");
            table.AddEntry("Cursed Crowns", "Sino Tirano");
            table.AddEntry("Cursed Crowns Desc", "Algumas <Coroas> serão <Amaldiçoadas>");
            table.AddEntry("Blessing of Duplication", "Sino Solar do Escultor");
            table.AddEntry("Blessing of Duplication Desc", "Duplique todos os <Itens> no seu deck");
            table.AddEntry("Blessing of Consume", "Sino Solar do Café-da-manhã");
            table.AddEntry("Blessing of Consume Desc", "A primeira carta com <Consumir> jogada a cada <Batalha> não é consumida");
            table.AddEntry("Blessing of Draw", "Sino Solar Infinito");
            table.AddEntry("Blessing of Draw Desc", "Compre uma carta a cada turno que o <Sino de Recompra> esteja <Carregado>");
            table.AddEntry("Blessing of Deathhand", "Sino Solar da Morte");
            table.AddEntry("Blessing of Deathhand Desc", "Compre uma carta sempre que um inimigo é morto");
            table.AddEntry("Blessing of Attack", "Sino Solar da Força");
            table.AddEntry("Blessing of Attack Desc", "Adicione <+2><keyword=attack> a todos os <Itens> elegíveis no seu deck");
            table.AddEntry("Blessing of Broken Bell", "Sino Solar Quebrado");
            table.AddEntry("Blessing of Broken Bell Desc", "Compra <+3> Cartas\r\nO <Sino de Recompra> só pode ser tocado quando <Carregado>");
            table.AddEntry("Blessing of Smackback", "Sino Solar do Contra-golpe");
            table.AddEntry("Blessing of Smackback Desc", "O primeiro aliado elegível posto a cada Batalha ganha <keyword=smackback>");
            table.AddEntry("Drain Leader After Battle Desc 2", "Seu <Líder> perde <keyword=health> antes de entrar nas <Terras Congeladas>");
            table.AddEntry("Fog Bell Desc", "Alguns inimigos terão <Amuletos Ooba>");
            table.AddEntry("Frozen Heart Bell Desc", "Algumas cartas de recompensa terão <Amuletos de Bloqueio>");
            table.AddEntry("Broken Bell Desc", "Compre <3> cartas adicionais se você tocar o <Sino de Recompra> quando ele não estiver carregado");
            table.AddEntry("Bombskull Bell Desc", "Todas <Geringonças> aliadas têm <Amuletos Bomba-Caveira>");
            table.AddEntry("Blingsack Bell Desc", "<Goblings> largam <keyword=blings> em dobro");
            table.AddEntry("Gold Blade Bell Desc", "<Combos> dão <keyword=blings> em dobro");
            table.AddEntry("Heart Bell Desc", "Todos os companheiros ganham <+2><keyword=health>");
            table.AddEntry("Goat Bell Desc", "Alguns inimigos terão <Amuletos Mau-Olhado>");
            table.AddEntry("Battle Bell Desc", "Todos companheiros ganham <+1><keyword=attack>");
            table.AddEntry("Frenzy Bell Desc", "Seus itens iniciais ganham <x1><keyword=frenzy>");
            table.AddEntry("Fury Bosses", "Sino da Fúria");
            table.AddEntry("Fury Bosses Desc", "Chefões ganham <keyword=fury 2>");
            table.AddEntry("Blessing of Zoomlin", "Sino Solar Zoomlin");
            table.AddEntry("Blessing of Zoomlin Desc", "Toda vez que você comprar uma mão nova, adicione <keyword=zoomlin> a uma carta aleatória");
            table.AddEntry("Drain Leader After Battle Desc 3", "Sua carta com maior <keyword=health> perde <2><keyword=health> após cada Batalha de Chefão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.LuminBell_title", "Sino da Luminância");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.LuminBell_text", "Um único inimigo será melhorado com um <Amuleto da Luminância> a cada batalha.");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BountyBell_title", "Sino da Recompensa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BountyBell_text", "Adiciona um <Caçador de Recompensas> a cada batalha após sair da <Tundra>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ScrapyardBell_title", "Sino Ferro-velho");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ScrapyardBell_text", "Comece com <2> <Pilhas de Sucata> no seu deck.");
        }

        private void SetSpeechLocalizations()
        {
            var table = LocalizationHelper.GetCollection("Speech", ModLanguage);

            table.AddEntry("Shopkeeper Greet 1", "Bem-Vindo!");
            table.AddEntry("Shopkeeper Greet 2", "Em que posso ajudar?");
            table.AddEntry("Shopkeeper Greet 3", "Dê uma olhada, sem pressa!");
            table.AddEntry("Shopkeeper Greet 4", "Gostou de alguma coisa?");
            table.AddEntry("Shopkeeper Thanks 1 ", "Bela escolha!");
            table.AddEntry("Shopkeeper Thanks 2", "Obrigada!");
            table.AddEntry("Shopkeeper No 1", "Você não consegue comprar isso!");
            table.AddEntry("Shopkeeper Secret 1", "Ok vai, eu aceito por <{0}>");
            table.AddEntry("Shopkeeper Secret 2", "Certo então, vou deixar <{0}> por isso!");
            table.AddEntry("Muncher Greet 1", "Olá!");
            table.AddEntry("Muncher Greet 2", "Eai!");
            table.AddEntry("Muncher Greet 3", "Oi!");
            table.AddEntry("Muncher Explain 1", "<#7569CF Monchi> gosta de comer de tudo, alimente-o com o que você não precisa!");
            table.AddEntry("Muncher Explain 2", "Dê ao <#7569CF Monchi> qualquer item que você não precisa!");
            table.AddEntry("Muncher Thanks 1", "Obrigado!");
            table.AddEntry("Muncher Full 1", "Valeu! Ele está cheio agora");
            table.AddEntry("Muncher Full 2", "Obrigado! Isso é o suficiente por agora");
            table.AddEntry("Petkeeper Greet 2", "Bem-Vindo a Casa dos Pets!");
            table.AddEntry("Petkeeper New Pet 1", "<{0}> está pronto pra ir!");
            table.AddEntry("Petkeeper New Pet 2", "Um novo Pet está pronto pra ir!");
            table.AddEntry("Inventor Greet 1", "Opa!");
            table.AddEntry("Inventor Greet 2", "Bem-vindo a Oficina!");
            table.AddEntry("Inventor New Item 1", "Contemple, minha nova invenção!");
            table.AddEntry("Inventor New Item 2", "Apresentando... o <{0}>!");
            table.AddEntry("Inventor New Item 3", "Eureka!");
            table.AddEntry("Shopkeeper Greet Vase 1", "Talvez você encontre um bom uso pra esse vaso quebrado");
            table.AddEntry("Shopkeeper Greet Vase 2", "Eu tenho esse lindo, embora bem quebradinho, vaso na promoção.");
            table.AddEntry("Shopkeeper Vase Price 1", "Deixo você levar por um bom preço!");
            table.AddEntry("Shopkeeper Vase Price 2", "Dê uma olhada mais de perto se precisar!");
            table.AddEntry("Hotspring Greet 1", "Bem-vindo, curta seu passeio!");
            table.AddEntry("Hotspring New Companion 1", "Olha, um novo visitante!|Deve ter ouvido falar das nossas termas");
            table.AddEntry("Icebreaker Greet 1", "Bem-vindo a minha cabine!");
            table.AddEntry("Icebreaker New Event 1", "Tirei esse do gelo!|Talvez você o encontre na sua próxima aventura!");
            table.AddEntry("Gnomeshop Greet 1", "Você ai! Dê uma olhada nas minhas mercadorias!|São da melhor qualidade dessa ilha");
            table.AddEntry("Gnomeshop Take 1", "Pegue mais, é totalmente de graça!");
            table.AddEntry("Charmshop Greet 1", "Olá aventureiro!|Eu tenho amuletos raríssimos em promoção. Dê uma olhada!");
            table.AddEntry("Charmshop Thanks 1", "Grata!");
            table.AddEntry("Charmshop No 1", "Você não tem blings o suficiente pra isso...");
            table.AddEntry("Shade Sculptor Greet 1", "mhmmm...");
            table.AddEntry("Shade Sculptor Copy 1", "hmmm...");
            table.AddEntry("Hotspring Greet 2", "Tome seu tempo para se recuperar nas nossas termas!");
            table.AddEntry("Hotspring Greet 3", "As termas de <Nevabrigo> é o melhor lugar para se relaxar depois de uma longa jornada");
            table.AddEntry("Hotspring New Companion 2", "Parece que as termas estão atraindo novos visitantes!");
            table.AddEntry("Hotspring New Companion 3", "Quanto mais, melhor!");
            table.AddEntry("Icebreaker Greet 2", "Prazer em conhecê-lo, meu amiguinho saudável! ");
            table.AddEntry("Icebreaker Greet 3", "Hora de quebrar o gelo, não acha?");
            table.AddEntry("Icebreaker New Event 2", "Outro trabalho bem feito!|Amassei dessa vez!");
            table.AddEntry("Icebreaker New Event 3", "AAHA!|O som de gelo quebrando faz meu coração bater mais rápido!");
            table.AddEntry("Gnomeshop Greet 2", "Oiê!|Dê uma olhada na minha mercadoria, tudo é totalmente GRATUITO!");
            table.AddEntry("Gnomeshop Take 2", "Sinta-se livre para pegar outro!");
            table.AddEntry("Gnomeshop Take 3", "Ah, <{0}>!|Que escolha excepcional!");
            table.AddEntry("Gnomeshop Take 4 ", "Você viu algo?|Eu não vi nada");
            table.AddEntry("Gnomeshop Take 5", "Prazer fazer negócios com você!");
            table.AddEntry("Charmshop Greet 2", "Saudações, Viajante!|Dê uma olhada na minha maravilhosa coleção de amuletos!");
            table.AddEntry("Charmshop Thanks 2", "Sua bondade é apreciada");
            table.AddEntry("Charmshop No 2", "Acredito que isso não seja o suficiente...");
            table.AddEntry("Shade Sculptor Copy 2", "...");
            table.AddEntry("Lil' Gazi Greet 1", ":3");
            table.AddEntry("Lil' Gazi Greet 2", ":)");
            table.AddEntry("Petkeeper First Greet 1", "Ola! <Zoe> aqui, treinadora de pet experiente!|Eu vou estar treinando esses pequenos para ajudar nas suas aventuras!");
            table.AddEntry("Inventor Greet 3", "Bem-vindo a minha oficina, aqui é a onde estou\r\nconstruindo minhas novas invenções");
            table.AddEntry("Hotspring First Greet 1", "Sou <Erena>, bem-vindo as termas!|Pessoas vêm de todos os lugares para apreciar os efeitos da nossa águas quentes");
            table.AddEntry("Petkeeper Greet 1", "Olá!");
            table.AddEntry("Inventor First Greet 1", "Opa, meu nome é <Plyus>!|Vou estar criando novos itens para sua futura aventura!");
            table.AddEntry("Icebreaker First Greet 1", "Prazer em conhecê-lo amigo!|Meu nome é <Rufeus> e meu trabalho é libertar quem ficou preso no gelo|Talvez a gente se esbarre por ai!");
            table.AddEntry("Shade Sculptor Greet 2", "...");
            table.AddEntry("reet 2", "...");
        }

        private void SetStatsLocalizations()
        {
            var table = LocalizationHelper.GetCollection("Stats", ModLanguage);

            table.AddEntry("stats_battles_won", "Batalha Vencidas: {0}");
            table.AddEntry("stats_time_taken", "Tempo Jogado: {0}");
            table.AddEntry("stats_turns_taken", "Turnos Jogados: {0}");
            table.AddEntry("stats_gold_gained", "Blings Obtidos: {0}");
            table.AddEntry("stats_gold_from_goblings", "Blings Obtidos de Goblings: {0}");
            table.AddEntry("stats_gold_from_combos", "Blings de Combos : {0}");
            table.AddEntry("stats_gold_spent", "Blings Gastos: {0}");
            table.AddEntry("stats_discounts_bought", "Descontos Comprados: {0}");
            table.AddEntry("stats_charms_bought", "Amuletos Comprados: {0}");
            table.AddEntry("stats_crowns_bought", "Coroas Obtidas : {0}");
            table.AddEntry("stats_injuries", "Machucados: {0}");
            table.AddEntry("stats_damage_taken", "Dano Recebido: {0}");
            table.AddEntry("stats_damage_blocked", "Dano Bloqueado: {0}");
            table.AddEntry("stats_damage_dealt", "Dano Realizado: {0}");
            table.AddEntry("stats_health_healed", "Total Curado : {0}");
            table.AddEntry("stats_friendly_damage", "Dano Amigo: {0}");
            table.AddEntry("stats_block_applied", "Bloqueio Aplicado: {0}");
            table.AddEntry("stats_demonize_applied", "Demonizar Aplicado: {0}");
            table.AddEntry("stats_frost_applied", "Congelamento Aplicado: {0}");
            table.AddEntry("stats_overload_applied", "Fogo-fato Aplicado: {0}");
            table.AddEntry("stats_scrap_applied", "Sucata Adicionada: {0}");
            table.AddEntry("stats_shell_applied", "Cascas Aplicadas: {0}");
            table.AddEntry("stats_shroom_applied", "Fungos Aplicados: {0}");
            table.AddEntry("stats_snow_applied", "Neve Aplicada: {0}");
            table.AddEntry("stats_spice_applied", "Pimenta Aplicada: {0}");
            table.AddEntry("stats_teeth_applied", "Dentes Aplicados: {0}");
            table.AddEntry("stats_enemies_killed", "Inimigos Mortos: {0}");
            table.AddEntry("stats_allies_killed", "Mortes Amigas: {0}");
            table.AddEntry("stats_bosses_killed", "Chefões Derrotados : {0}");
            table.AddEntry("stats_shroom_kills", "Mortes por Fungos: {0}");
            table.AddEntry("stats_overload_kills", "Mortes por Fogo-fato: {0}");
            table.AddEntry("stats_teeth_kills", "Mortes por Dentes: {0}");
            table.AddEntry("stats_smackback_kills", "Mortes por Contra-golpe: {0}");
            table.AddEntry("stats_highest_damage_hit", "Maior Dano Realizado: {0}");
            table.AddEntry("stats_highest_kill_combo", "Maior Combo de Mortes: {0}");
            table.AddEntry("stats_highest_frenzy", "Maior Frenesi Alcançada: {0}");
            table.AddEntry("stats_highest_spice", "Maior Qtd. de Pimenta: {0}");
            table.AddEntry("stats_highest_gold_from_battle", "Maior Qtd. de Blings Obtidos em Batalha: {0}");
            table.AddEntry("stats_naked_gnomes_saved", "Gnomos Pelados Poupados: {0}");
            table.AddEntry("stats_cards_munched", "Cartas Devoradas : {0}");
            table.AddEntry("stats_charms_assigned", "Amuletos Aplicados: {0}");
            table.AddEntry("stats_companions_recalled", "Companheiros Retornados: {0}");
            table.AddEntry("stats_redraw_bell_hit", "Toques no Sino de Recompra: {0}");
            table.AddEntry("stats_cards_summoned", "Total de Invocações: {0}");
            table.AddEntry("stats_gobling_hits", "Ataques a Goblings: {0}");
            table.AddEntry("stats_goblings_escaped", "Goblings fugitivos: {0}");
            table.AddEntry("stats_cards_renamed", "Cartas Renomeadas: {0}");
            table.AddEntry("stats_best_card_rename", "Melhor Renomeação: {0}");
            table.AddEntry("stats_smackbacks", "Total de Contra-golpes: {0}");
            table.AddEntry("stats_overall", "Estatísticas Gerais");
            table.AddEntry("stats_wins", "Vitórias: {0}");
            table.AddEntry("stats_losses", "Derrotas: {0}");
            table.AddEntry("stats_true_wins", "Vitórias Verdadeiras: {0}");
            table.AddEntry("stats_win_rate", "Taxa de Vitória: {0}");
            table.AddEntry("stats_best_win_time", "Melhor Tempo: {0}");
            table.AddEntry("stats_best_win_streak", "Melhor Sequência de Vitórias: {0}");
            table.AddEntry("stats_bom_applied", "Bom Aplicado : {0}");
            table.AddEntry("stats_ink_applied", "Tinta Aplicada: {0}");
            table.AddEntry("stats_haze_applied", "Neblina Aplicada: {0}");
            table.AddEntry("stats_naked_gnomes_killed", "Gnomos Pelados Mortos: {0}");
        }

        private void SetTooltipsLocalizations()
        {
            var table = LocalizationHelper.GetCollection("Tooltips", ModLanguage);

            table.AddEntry("tooltip_aimless", "Sem Mira");
            table.AddEntry("tooltip_aimless_desc", "Atinge um alvo aleatório na faixa");
            table.AddEntry("tooltip_attack", "Ataque");
            table.AddEntry("tooltip_backline", "Retaguarda");
            table.AddEntry("tooltip_backline_desc", "Posicionado na parte de trás da faixa");
            table.AddEntry("tooltip_barrage", "Rajada");
            table.AddEntry("tooltip_barrage_desc", "Atinge todos os alvos na faixa");
            table.AddEntry("tooltip_blings", "Blings");
            table.AddEntry("tooltip_blings_desc", "Moeda usada para comprar coisas");
            table.AddEntry("tooltip_block", "Bloqueio");
            table.AddEntry("tooltip_block_desc", "Bloqueia completamente o dano");
            table.AddEntry("tooltip_bombard", "Bombardeio");
            table.AddEntry("tooltip_bombard_desc", "Atinge todos os alvos em áreas com <sprite=target>");
            table.AddEntry("tooltip_consume", "Consumir");
            table.AddEntry("tooltip_consume_desc", "Pode ser utilizado apenas uma vez na batalha");
            table.AddEntry("tooltip_counter", "Contador");
            table.AddEntry("tooltip_crown", "Coroa");
            table.AddEntry("tooltip_demonize", "Demonizar");
            table.AddEntry("tooltip_demonize_desc", "Dobra o dano sofrido|Diminui após tomar dano");
            table.AddEntry("tooltip_draw", "Compre");
            table.AddEntry("tooltip_draw_desc", "Compra cartas para sua mão");
            table.AddEntry("tooltip_frenzy", "Frenesi");
            table.AddEntry("tooltip_frenzy_desc", "Ativa múltiplas vezes");
            table.AddEntry("tooltip_frontline", "Vanguarda");
            table.AddEntry("tooltip_frontline_desc", "Posicionado na frente da faixa");
            table.AddEntry("tooltip_frost", "Congelamento");
            table.AddEntry("tooltip_frost_desc", "Temporariamente reduz o ataque|Limpo após ativação");
            table.AddEntry("tooltip_fury", "Fúria");
            table.AddEntry("tooltip_fury_desc", "Dá dano adicional quando sozinho na faixa");
            table.AddEntry("tooltip_health", "Vida");
            table.AddEntry("tooltip_hellbent", "Calejado(a)");
            table.AddEntry("tooltip_hellbent_desc", "Não fica Machucado(a)");
            table.AddEntry("tooltip_immune_snow", "Resiste a neve");
            table.AddEntry("tooltip_boop", "Boop");
            table.AddEntry("tooltip_boop_desc", "Empurra o alvo pra trás");
            table.AddEntry("tooltip_longshot", "Tiro longo");
            table.AddEntry("tooltip_longshot_desc", "Atinge o último alvo da faixa");
            table.AddEntry("tooltip_lumin", "Lumin");
            table.AddEntry("tooltip_lumin_desc", "Dobra o efeito do alvo|Limpo quando Lumin é aplicado a outra carta");
            table.AddEntry("tooltip_noomlin", "Noomlin");
            table.AddEntry("tooltip_noomlin_desc", "Não acaba o seu turno quando jogado");
            table.AddEntry("tooltip_overload", "Fogo-fato");
            table.AddEntry("tooltip_overload_desc", "Explode quando alvo tem vida igual ou menor ao acúmulo, dando dano a todos na faixa|Limpo após ativação do efeito");
            table.AddEntry("tooltip_pull", "Gancho");
            table.AddEntry("tooltip_pull_desc", "Puxa o alvo para frente da faixa");
            table.AddEntry("tooltip_reaction", "Reação");
            table.AddEntry("tooltip_redraw", "Recompra");
            table.AddEntry("tooltip_redraw_desc", "Descarte dua mão e recompre outra");
            table.AddEntry("tooltip_redraw_bell", "Sino de Recompra");
            table.AddEntry("tooltip_redraw_bell_desc", "Descarte sua mão e compre <{0}> cartas novas");
            table.AddEntry("tooltip_scrap", "Sucata");
            table.AddEntry("tooltip_scrap_desc", "Um tipo diferente de vida|Reduz em 1 quando qualquer dano é recebido");
            table.AddEntry("tooltip_shell", "Casca");
            table.AddEntry("tooltip_shell_desc", "Bloqueia dano");
            table.AddEntry("tooltip_shroom", "Fungo");
            table.AddEntry("tooltip_shroom_desc", "Dá dano todo turno|Diminui todo turno");
            table.AddEntry("tooltip_smackback", "Contragolpe");
            table.AddEntry("tooltip_smackback_desc", "Contra-ataca após ser atingido(a)");
            table.AddEntry("tooltip_snow", "Neve");
            table.AddEntry("tooltip_snow_desc", "Congela Contadores<sprite name=counter> & Reações<sprite name=reaction>|Diminui todo turno");
            table.AddEntry("tooltip_spice", "Pimenta");
            table.AddEntry("tooltip_spice_desc", "Temporariamente aumenta o ataque|Limpo após ativação");
            table.AddEntry("tooltip_spikes", "Presas");
            table.AddEntry("tooltip_spikes_desc", "Dá dano aos atacantes");
            table.AddEntry("tooltip_summoned", "Invocado(a)");
            table.AddEntry("tooltip_summoned_desc", "Perde vida após ativar & não pode ser retornado");
            table.AddEntry("tooltip_unmovable", "Imóvel");
            table.AddEntry("tooltip_unmovable_desc", "Não pode ser movido");
            table.AddEntry("tooltip_wild", "Selvagem");
            table.AddEntry("tooltip_wild_desc", "Ganhe <x1><keyword=frenzy> quando outras cartas <Selvagens> são mortas");
            table.AddEntry("tooltip_ink", "Tinta");
            table.AddEntry("tooltip_ink_desc", "Também atinja a si mesmo quando atacar|Diminui após ativação");
            table.AddEntry("tooltip_vim", "Bom");
            table.AddEntry("tooltip_vim_desc", "Negue o próximo ataque & retorne o dano ao atacante|Limpo após ativação");
            table.AddEntry("tooltip_null", "Tinta");
            table.AddEntry("tooltip_null_desc", "Silencia os efeitos|Diminui a cada turno");
            table.AddEntry("tooltip_sacrificed", "Sacrificado(a)");
            table.AddEntry("tooltip_sacrificed_desc", "Morto por um aliado");
            table.AddEntry("tooltip_hogheaded", "Cabeça-dura");
            table.AddEntry("tooltip_hogheaded_desc", "Não pode ser retornado");
            table.AddEntry("tooltip_combo", "Crítico(a)");
            table.AddEntry("tooltip_combo_desc", "Dobra os efeitos se for a carta mais a direita da sua mão");
            table.AddEntry("tooltip_immune_snow_desc", "Só pode ter 1 de <sprite name=snow> no máximo");
            table.AddEntry("tooltip_soulbound", "Vinculado");
            table.AddEntry("tooltip_soulbound_desc", "Toma <100> de dano quando outra carta <Vinculada> é <keyword=sacrificed>");
            table.AddEntry("tooltip_split", "Divida");
            table.AddEntry("tooltip_split_desc", "Divide-se em 2 cartas com metade de <keyword=health> e efeitos");
            table.AddEntry("tooltip_crown_desc", "Cartas com Coroas são sempre jogadas antes do início da batalha");
            table.AddEntry("tooltip_charm_machine", "Máquina de Amuletos");
            table.AddEntry("tooltip_charm_machine_desc", "Você pode usar Amuletos para melhorar suas cartas!");
            table.AddEntry("tooltip_crush", "Amasse");
            table.AddEntry("tooltip_crush_desc", "Destrói um <card=Junk> aleatório da sua mão se possível, senão destrói um <Item> aleatório");
            table.AddEntry("tooltip_weakness", "Bom");
            table.AddEntry("tooltip_weakness_desc", "Toma dano adicional de todas as fontes|Não diminui!");
            table.AddEntry("tooltip_haze", "Névoa");
            table.AddEntry("tooltip_haze_desc", "Quando atacar, atinja um aliado aleatório no lugar|Diminui a cada ataque");
            table.AddEntry("tooltip_recycle", "Recicle");
            table.AddEntry("tooltip_recycle_desc", "Requer <card=Junk> na sua mão para ser jogado(a), destrói o <card=Junk> depois");
            table.AddEntry("tooltip_trash", "Suje");
            table.AddEntry("tooltip_trash_desc", "Adiciona <card=Junk> a sua mão");
            table.AddEntry("tooltip_explode", "Exploda");
            table.AddEntry("tooltip_explode_desc", "Quando destruído, da dano em todos inimigos na faixa");
            table.AddEntry("tooltip_greed", "Ganância");
            table.AddEntry("tooltip_greed_desc", "Dá <1> de dano adicional a cada <50><keyword=blings> que você tiver");
            table.AddEntry("tooltip_effigy", "Fé");
            table.AddEntry("tooltip_effigy_desc", "Aumenta o <keyword=attack> e <keyword=health> de invocações");
            table.AddEntry("tooltip_redraw_bell_notcharged", "<Não Carregado>\r\nEsta ação encerrará seu turno");
            table.AddEntry("tooltip_redraw_bell_charged", "<Carregado!>\r\nEsta ação é grátis, seu turno não será encerrado");
            table.AddEntry("tooltip_hit_desc", "Uma carta é \"atingida\" quando outra carta a ataca, mesmo que não dê dano algum\r\n\r\nTodas as cartas que possuem ícones de <keyword=attack> vão atacar e \"atingir\" seus alvos\r\n\r\nDano dado por efeitos de status não são contam como ser \"atingido(a)\"");
            table.AddEntry("tooltip_active_desc", "Unidade são consideradas \"ativas\" quando elas estão no campo de batalha");
            table.AddEntry("tooltip_injured_desc", "Inicia a batalha com metade de <keyword=health> e <keyword=attack>\r\n\r\nMachucados se mantém até que a carta sobreviva uma batalha");
            table.AddEntry("tooltip_healed_desc", "Efeitos \"quando curado\" também ocorrem em sobrecuras, ou aumentos de vida máxima");
            table.AddEntry("tooltip_injured", "Machucado(a)");
            table.AddEntry("tooltip_counter_trigger_desc", "Ativará em <{0}> turnos\r\n\r\nCongelável com <sprite name=snow>");
            table.AddEntry("tooltip_recycle_destroy_desc", "\"Recicle\" vai destruir a carta de Lixo mais a direita na sua mão");
            table.AddEntry("tooltip reaction and", "e");
            table.AddEntry("tooltip_counter_frozen_desc", "<Congelado(a) por Neve>\r\nNão pode diminuir o contador até que <sprite name=snow> seja limpa");
            table.AddEntry("tooltip_reaction_frozen_desc", "<Congelado(a) por Neve>\r\nNão pode ativar até que <sprite name=snow> seja limpa");
            table.AddEntry("tooltip reaction trigger desc", "{0}\r\n\r\nCongelável com <sprite name=snow>");
            table.AddEntry("tooltip_counter_trigger_next_desc", "Ativará <neste turno>\r\n\r\nCongelável com <sprite name=snow>");
            table.AddEntry("tooltip_reaction_silenced_desc", "<Silenciado(a) por Tinta>\r\nNão pode ativar até que <sprite name=ink> seja limpa");
            table.AddEntry("tooltip_spark", "Centelha");
            table.AddEntry("tooltip_spark_desc", "Ative assim que posto(a) em campo. Não pode ser retornado(a)");
            table.AddEntry("tooltip_wave_bell", "Sino de Inimigos");
            table.AddEntry("tooltip_wave_bell_desc", "<{0}> inimigo(s) estão chegando em <{1}> turno(s)");
            table.AddEntry("tooltip_wave_bell_hit", "Toque o sino para chamar os inimigos mais cedo\r\n\r\nEsta ação é grátis");
            table.AddEntry("tooltip_wave_bell_overflow", "Sem espaço suficiente! <{0}> inimigo(s) vão passar para a próxima onda\r\n\r\nInimigos não podem ser chamados mais cedo quando não há espaço suficiente");
            table.AddEntry("tooltip_wave_bell_reward", "Ganhe <+{0}><sprite name=bling>");
            table.AddEntry("tooltip_absorb", "Absorva");
            table.AddEntry("tooltip_absorb_desc", "Pegue <keyword=health>, <keyword=attack>, efeitos e efeitos de status");
            table.AddEntry("tooltip_spikes_desc2", "Dá dano aos atacantes|Diminui quando atingido(a)");
            table.AddEntry("tooltip_spark_desc2", "Ative assim que posto(a)");
            table.AddEntry("tooltip_brittle", "Delicado");
            table.AddEntry("tooltip_brittle_desc", "Destrói-se quando perde qualquer quantidade de <keyword=health>");
            table.AddEntry("tooltip_cleanse", "Limpe");
            table.AddEntry("tooltip_cleanse_desc", "Remova todos os efeitos de status negativos");
            table.AddEntry("tooltip_bootleg", "Pirata");
            table.AddEntry("tooltip_bootleg_desc", "<keyword=health><keyword=attack><keyword=counter> são aleatorizados entre <2> e <5>");
            table.AddEntry("tooltip_copy_desc", "A \"cópia\" perderá todos efeitos de status negativos e terá seu contador <keyword=counter> resetado");
            table.AddEntry("tooltip_zoomlin", "Zoomlin");
            table.AddEntry("tooltip_zoomlin_desc", "Não termina seu turno quando jogado(a)|A carta perde Zoomlin quando jogada");
            table.AddEntry("tooltip_fragile", "Frágil");
            table.AddEntry("tooltip_fragile_desc", "<keyword=health> máxima não pode ser aumentada em batalhas");
            table.AddEntry("tooltip_heartburn", "Florescer");
            table.AddEntry("tooltip_heartburn_desc", "Quando curado, <keyword=health> máxima também aumenta");
            table.AddEntry("tooltip_obliterate", "Obliterar");
            table.AddEntry("tooltip_obliterate_desc", "Enquanto ativo(a), todos <Itens> na sua mão ganham <keyword=consume>");
            table.AddEntry("absentabigail.wildfrost.blahaj.calm_title", "Calma");
            table.AddEntry("absentabigail.wildfrost.blahaj.calm_desc", "Reduza <keyword=counter> máximo a cada três <keyword=absentabigail.wildfrost.blahaj.calm>|Halves when damaged");
            table.AddEntry("absentabigail.wildfrost.blahaj.abduct_title", "Abduzido");
            table.AddEntry("absentabigail.wildfrost.blahaj.abduct_desc", "Fica inalvejável e recebe <keyword=snow> por um turno");
            table.AddEntry("Evolve_text", "Evolução");
            table.AddEntry("Evolve_desc", "Se a condição é satisfeita, no final da batalha evolua para um novo Pokémon|Inativo enquanto na reserva");
            table.AddEntry("Taunt_text", "Provocar");
            table.AddEntry("Taunt_desc", "Todos inimigos recebem <keyword=taunted>");
            table.AddEntry("Taunted_text", "Provocado(a)");
            table.AddEntry("Taunted_desc", "Alveje apenas inimigos com <keyword=taunt>|Atinge todos eles!");
            table.AddEntry("Random Effect_text", "Efeito Aleatório");
            table.AddEntry("Random Effect_desc", "Faz um efeito aleatório das opções listadas");
            table.AddEntry("Overshroom_text", "Fungo-fato");
            table.AddEntry("Overshroom_desc", "Age como <sprite name=overload> e <sprite name=shroom>|Também conta como ambos!");
            table.AddEntry("Pluck_text", "Depenar");
            table.AddEntry("Pluck_desc", "Atinge o alvo com menos vida na faixa|Prioriza o alvo da frente em caso de empate");
            table.AddEntry("WonderGuard_text", "Guarda Maravilhosa");
            table.AddEntry("WonderGuard_desc", "Imune a dano direto");
            table.AddEntry("Sketch_text", "Esboçar");
            table.AddEntry("Sketch_desc", "Quando posto(a), permanentemente copie is efeitos de um inimigo aleatório na faixa|Diminui");
            table.AddEntry("Revive_text", "Reviver");
            table.AddEntry("Revive_desc", "Corta <keyword=health> e <keyword=attack> pela metade ao invés de morrer|Uma vez por turno!");
            table.AddEntry("Immaterial_text", "Imaterial");
            table.AddEntry("Immaterial_desc", "Imune a dano indireto e previne reações");
            table.AddEntry("Dream_text", "Sonho");
            table.AddEntry("Dream_desc", "Muda uma carta aleatória a cada turno|Destruído depois de usar ou descartar");
            table.AddEntry("teeterdance_text", "Dança da Confusão");
            table.AddEntry("teeterdance_desc", "<Fim do Turno>: Ativa a si mesmo, depois inimigos, depois aliados|Clique para ativar\r\nDuas vezes por batalha");
            table.AddEntry("rest_text", "Descansar");
            table.AddEntry("rest_desc", "<Fim do Turno>: Cure a vida toda, depois defina o contador máximo para 99 e remova todos os efeitos|Clique para ativar");
            table.AddEntry("focusenergy_text", "Energia Focalizada");
            table.AddEntry("focusenergy_desc", "<Ação Grátis>: Descarte a carta mais a direita da sua mão|Clique para ativar\r\nUma vez por turno");
            table.AddEntry("curseofweakness_text", "Maldição da Fraqueza");
            table.AddEntry("curseofweakness_desc", "Enquanto na mão, reduza <keyword=attack> de todos aliados em <1>|Uma carta só pode sofrer uma maldição por vez");
            table.AddEntry("curseofpower_text", "Maldição do Poder");
            table.AddEntry("curseofpower_desc", "Enquanto na mão, aumente <keyword=attack> de todos inimigos em <1>|Uma carta só pode sofrer uma maldição por vez");
            table.AddEntry("curseofpara_text", "Maldição do Sono");
            table.AddEntry("curseofpara_desc", "Enquanto na mão, adicione <keyword=unmovable> a todos aliados|Uma carta só pode sofrer uma maldição por vez");
            table.AddEntry("curseoffrenzy_text", "Maldição da Frenesi");
            table.AddEntry("curseoffrenzy_desc", "Enquanto na mão, adicione <x1><keyword=frenzy> a todas unidades|Uma carta só pode sofrer uma maldição por vez");
            table.AddEntry("jolted_text", "Em Curto");
            table.AddEntry("jolted_desc", "Toma dano após ativar|Não diminui!");
            table.AddEntry("spicune_text", "Suco");
            table.AddEntry("spicune_desc", "Temporariamente melhora os efeitos|Limpa após ativar");
            table.AddEntry("burning_text", "Queimando");
            table.AddEntry("burning_desc", "Explode quanto atingido(a), dando dano a todos os alvos na faixa e depois é limpo|Aplicar mais aumenta a explosão!");
            table.AddEntry("falseswipe_text", "Golpe Falso");
            table.AddEntry("falseswipe_desc", "Dá dano não letal|Exceto a Geringonças");
            table.AddEntry("resist_text", "Resistir");
            table.AddEntry("resist_desc", "Reduz dano em <{0}>");
            table.AddEntry("pickup_text", "Coletor");
            table.AddEntry("pickup_desc", "Pega uma carta de uma seleção de <{0}> no final de cada batalha");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.buttonSnowed", "Congelado!");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.buttonInked", "Pintado!");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.focus_title", "Foco");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.focus_desc", "Aumenta todos os efeitos em 1 quando comprado(a)");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.soul_title", "Alma");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.soul_desc", "Quando comprado(a), temporariamente aumente os efeitos em 1 por cada aliado");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.void_title", "Vazio");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.void_desc", "Quando comprado(a), aplique <keyword=null> a um aliado aleatório por cada acúmulo de Vazio");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.bound_title", "Atrelado");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.bound_desc", "Não pode ser removido do seu deck no Cometudo");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.stagger_title", "Atordoar");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.stagger_desc", "Empurra o alvo um espaço para trás na faixa\r\n Sobrescrito por <keyword=pull>, <keyword=aimless> e <keyword=barrage>");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.pride_title", "Orgulho");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.pride_desc", "Atinge o inimigo com a maior <keyword=health> na faixa");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.wound_title", "Machucado");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.wound_desc", "Recebe dano adicional igual aos acúmulos\r\n Recebe dano equivalente a <sprite=woundicon> quando a unidade atacar | Removido após o ataque");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.hivemind_title", "Mentenxame");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.hivemind_desc", "Quando sacrificado mate todos <Cavaleiros Sentinela> na faixa");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.cannibal_title", "Canibalismo");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.cannibal_desc", "Devore e <keyword=absorb> o aliado à frente | Ignora Frágil");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.infected_title", "Infectado");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.infected_desc", "Unidades Infectadas retém <keyword=shroom>");
            table.AddEntry("wound_text", "Machucado");
            table.AddEntry("wound_desc", "Dá dano à unidade equivalente aos acúmulos quando a unidade ataca | Não diminui");
            table.AddEntry("bethanw10.wildfrost.allcharms.amplify_title", "Amplificar");
            table.AddEntry("bethanw10.wildfrost.allcharms.amplify_desc", "Adiciona <+1> a todos efeitos de status aplicados a esta carta na batalha|Inclui buffs E debuffs");
            table.AddEntry("evolve_text", "Evolução");
            table.AddEntry("evolve_desc", "Se a condição é satisfeita, no final da batalha evolua para um novo Pokémon|Inativo enquanto na reserva");
            table.AddEntry("taunt_text", "Provocar");
            table.AddEntry("taunt_desc", "Todos os inimigos são <keyword=taunted>");
            table.AddEntry("taunted_text", "Provocado(a)");
            table.AddEntry("taunted_desc", "Alveje apenas inimigos com <keyword=taunt>|Atinge todos eles!");
            table.AddEntry("randomeffect_text", "Efeito aleatório");
            table.AddEntry("randomeffect_desc", "Faz um efeitos aleatório das opções listadas");
            table.AddEntry("debuffed_text", "Debuffado");
            table.AddEntry("debuffed_desc", "Possui status negativos");
            table.AddEntry("legendary_text", "Lendário");
            table.AddEntry("legendary_desc", "Conta como um líder adicional|Você perde quando todos seus líderes morrerem");
            table.AddEntry("overshroom_text", "Fungo-fato");
            table.AddEntry("overshroom_desc", "Age como <sprite name=overload> e <sprite name=shroom>|Também conta como ambos!");
            table.AddEntry("spook_text", "Assombrar");
            table.AddEntry("spook_desc", "Ative quando qualquer coisa é invocada");
            table.AddEntry("pluck_text", "Depenar");
            table.AddEntry("pluck_desc", "Atinge o alvo com menos vida na faixa|Prioriza o alvo da frente em caso de empate");
            table.AddEntry("wonderguard_text", "Guarda Maravilhosa");
            table.AddEntry("wonderguard_desc", "Imune a dano direto");
            table.AddEntry("sketch_text", "Esboçar");
            table.AddEntry("sketch_desc", "Quando posto(a), permanentemente copie is efeitos de um inimigo aleatório na faixa|Diminui");
            table.AddEntry("transfer_text", "Transferir");
            table.AddEntry("transfer_desc", "Dê este efeito a um aliado aleatório");
            table.AddEntry("tarshot_text", "Tiro de Piche");
            table.AddEntry("tarshot_desc", "<Ação Grátis>: Coloque um <card=Dart> na sua mão e na mochila\r\n Dê <keyword=zoomlin> a ele nesta batalha |Clique para ativar\r\n Uma vez por turno\r\n Três vezes por batalha");
            table.AddEntry("conduit_text", "Conduíte");
            table.AddEntry("conduit_desc", "Faz um efito sempre que algo toma dano de <keyword=jolted>");
            table.AddEntry("synchronize_text", "Sincronizar");
            table.AddEntry("synchronize_desc", "Quando um efeito de status or mudança de atributos é aplicada ao aliado à frente, também aplique a si mesmo|Tome cuidado com debuffs!");
            table.AddEntry("synchronize2_text", "Sincronizar II");
            table.AddEntry("synchronize2_desc", "Quando um efeito de status or mudança de atributos é aplicada ao aliado à frente, também aplique a si mesmo <E ao aliado atrás>|Tome cuidado com debuffs!");
            table.AddEntry("prophesized_text", "Profetizado(a)");
            table.AddEntry("prophesized_desc", "A carta é destinada a estar no seu deck");
            table.AddEntry("lavaplume_text", "Pluma de Lava");
            table.AddEntry("lavaplume_desc", "<Ação Grátis>: Converta a <keyword=spice> do inimigo à frente em <keyword=burning>|Clique para ativar\r\nUma vez por turno");
            table.AddEntry("fidget_text", "Ajustar");
            table.AddEntry("fidget_desc", "<Ação Grátis>: Troque <Suje> com <Recilar> e vice-versa|Clique para ativar");
            table.AddEntry("autotomize_text", "Automatizar");
            table.AddEntry("autotomize_desc", "<Ação Grátis>: Retorne a última carta <Reciclada> à mão|Clique para ativar\r\nRecicle para recarregar");
            table.AddEntry("salvage_text", "Salvamento");
            table.AddEntry("salvage_desc", "Adicione uma <Parte de Lumin> a sua mão que pode se combinar em <card=LuminVase> com <keyword=zoomlin> e <keyword=consume>");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.snowimmuneToAllies", "Enquanto ativo(a), aliados ganham <keyword=immunetosnow>");
            table.AddEntry("uturn_text", "Retorno");
            table.AddEntry("uturn_desc", "Ative quando retornado(a)");
            table.AddEntry("hero_text", "Herói");
            table.AddEntry("hero_desc", "Quando um aliado é atingido(a), contra-ataque");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.buttonGeneric", "Ainda não!");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.buttonAutotomize", "Por favor, recicle!");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.failedflip", "Mais sorte na próxima vez!");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.leader", "Líder não pode ir para a mão!");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.toobig", "Alvo é muito grande!");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.reserveEmpty", "Sem nada na reserva!");
        }

        private void SetUITextLocalizations()
        {
            var table = LocalizationHelper.GetCollection("UI Text", ModLanguage);

            table.AddEntry("play", "Jogar");
            table.AddEntry("continue", "Continuar");
            table.AddEntry("town", "Cidade");
            table.AddEntry("cards", "Cartas");
            table.AddEntry("exit", "Sair");
            table.AddEntry("resume", "Continuar");
            table.AddEntry("quick_restart", "Reinício rápido");
            table.AddEntry("back_to_menu", "Voltar ao menu");
            table.AddEntry("music_volume", "Música");
            table.AddEntry("sfx_volume", "Sons");
            table.AddEntry("oh_no", "Ah Não!");
            table.AddEntry("found_error", "Você encontrou um erro!");
            table.AddEntry("error_desc", "Um erro aconteceu! Seu jogo talvez pare de funcionar corretamente.\r\nLogs de erro podem ser encontrados na sua pasta Wildfrost AppData.");
            table.AddEntry("hide_message", "Esconder Mensagem");
            table.AddEntry("exit_desktop", "Ir para Área de Trabalho");
            table.AddEntry("back_to_town", "Voltar à Cidade");
            table.AddEntry("choose_leader", "Escolha seu Líder");
            table.AddEntry("lets_go", "Vamos Lá!");
            table.AddEntry("rename", "Renomear");
            table.AddEntry("your_deck", "SEU DECK");
            table.AddEntry("reserve", "RESERVA");
            table.AddEntry("map_town", "Nevabrigo");
            table.AddEntry("map_battle", "Batalha");
            table.AddEntry("map_boss", "Chefão!");
            table.AddEntry("map_ice", "Viajantes Congelados");
            table.AddEntry("map_bling_cave", "Caverna Lesmabling");
            table.AddEntry("map_charm", "Amuleto");
            table.AddEntry("map_item", "Tesouro");
            table.AddEntry("map_shop", "A Lesma de Lã");
            table.AddEntry("map_muncher", "Cometudo");
            table.AddEntry("event_item_open", "Abrir!");
            table.AddEntry("event_item_choose", "Escolha um novo item!");
            table.AddEntry("event_item_skip", "Pule para +20<sprite name=bling>");
            table.AddEntry("event_charm_open", "Pegue o amuleto!");
            table.AddEntry("charm_got", "Amuleto Obtido!");
            table.AddEntry("crown_got", "Coroa Obtida!");
            table.AddEntry("charm_equip", "Equipar Agora");
            table.AddEntry("charm_save", "<size=0.3>Guardar Para Depois</size>");
            table.AddEntry("event_ice_break", "Quebre o gelo!");
            table.AddEntry("event_ice_choose", "Escolha um novo companheiro!");
            table.AddEntry("event_ice_skip", "Ou vá embora...");
            table.AddEntry("event_shop_enter", "Entrar na Loja");
            table.AddEntry("event_muncher_feed", "Alimentar O Cometudo?");
            table.AddEntry("event_muncher_drag", "Arraste para Alimentar");
            table.AddEntry("combo", "<line-height=0.35><size=0.7><#{1}>x{0}\r\n<size=0.35>Combo\r\n\r\n<#FFD150>+{2}<sprite name=bling>");
            table.AddEntry("battle_win", "<size=0.6>VITÓRIA</size>");
            table.AddEntry("battle_continue", "Continuar");
            table.AddEntry("continue_q", "Continuar?");
            table.AddEntry("giveup", "Desistir");
            table.AddEntry("help_pethut", "A Casa dos Pets|Aqui você vai desbloquear pets para iniciar cada aventura.\r\n\r\nVolte de vez em quando para testar pets recém-descobertos.");
            table.AddEntry("help_inventor", "A Cabana do Inventor|Com o tempo, o Inventor vai criar novos itens para você!\r\n\r\nApós criados, você encontrará esses itens nas suas aventuras.");
            table.AddEntry("help_icebreakers", "Cabine Quebra-gelo|Complete os desafios aqui para desbloquear novos eventos que vão acontecer no mapa durante aventuras.");
            table.AddEntry("help_tribehut", "O Saguão das Tribos|As bandeiras de cada Tribo desbloqueada irão aparecer aqui.");
            table.AddEntry("help_wildfrost", "Bem-vindo a Wildfrost!|Esta versão preliminar demonstra uma porção pequena do que o jogo completo será.\r\n\r\nExiste conteúdo faltando, artes, textos temporários e com certeza existirão vários bugs!|Divirta-se! :)");
            table.AddEntry("help_leaderselect", "Seleção de Líder|No início de cada aventura, você deve escolher um Líder.\r\n\r\nCada Líder pertence a uma Tribo que determina seu deck inicial e as cartas que você encontrará durante a aventura.\r\n\r\nMantenha seu Líder vivo! Se ele morrer, é fim de jogo!");
            table.AddEntry("help_game_win", "Você Conseguiu!|Esta versão do jogo acaba aqui...\r\n\r\nO jogo completo possui novas áreas, e um chefão final especial que será diferente todas as vezes que você jogar.\r\n\r\nParabéns!");
            table.AddEntry("nice", "Boa!");
            table.AddEntry("recovered_from_injuries", "Recuperado(os) dos machucados! <sprite name=health>");
            table.AddEntry("help_daily_run", "Jornada Diária|Todo dia terá um novo desafio disponível.\r\n\r\nVocê tem apenas uma chance. Boa sorte!");
            table.AddEntry("daily_run", "Jornada Diária");
            table.AddEntry("leaderboards", "Recordes");
            table.AddEntry("building_tribehall", "Saguão das Tribos");
            table.AddEntry("building_pethut", "Casa dos Pets");
            table.AddEntry("building_inventorhut", "Cabana do Inventor");
            table.AddEntry("building_icebreakers", "Cabine Quebra-gelo");
            table.AddEntry("unlock_building_start", "Construção Iniciada!");
            table.AddEntry("unlock_building_complete", "Construção Completa!");
            table.AddEntry("unlock_pet", "Novo Pet Treinado!");
            table.AddEntry("unlock_item", "Novo Item Inventado!");
            table.AddEntry("unlock_tribe", "Nova Tribo Disponível!");
            table.AddEntry("unlock_pethut_desc", "Novos pets para iniciar cada jornada podem ser desbloqueados na Casa dos Pets");
            table.AddEntry("unlock_inventor_desc", "Novos itens podem ser desbloqueados na Cabana do Inventor");
            table.AddEntry("unlock_icebreakers_desc", "Visite a Cabine Quebra-gelo para descobrir como tirar algumas pessoas do gelo");
            table.AddEntry("unlock_pet_desc", "Visite a Casa dos Pets para descobrir seu novo pet!");
            table.AddEntry("unlock_item_desc", "Visite a Cabana do Inventor para descobrir seu novo item!");
            table.AddEntry("unlock_tribe_desc", "Visite o Saguão das Tribos para descobrir sua tribo nova!");
            table.AddEntry("result_dead", "MORREU");
            table.AddEntry("result_complete", "COMPLETO");
            table.AddEntry("town_progress", "Progresso da Cidade");
            table.AddEntry("companion_join1", "Olá! Eu sou <name>. E vou me juntar ao seu time com prazer!");
            table.AddEntry("companion_join2", "Oh, olá! Eu sou <name>. Pronto para a jornada!");
            table.AddEntry("building_pethut_unlock", "Novo Pet Disponível!");
            table.AddEntry("building_inventorhut_unlock", "Nova Invenção!");
            table.AddEntry("companion_join_gnome", "Obrigado por poupar minha vida!\r\nMe deixe ir com você!");
            table.AddEntry("battle_injuries", "Machucados");
            table.AddEntry("exit_save", "Salvar & Sair");
            table.AddEntry("settings_title", "CONFIGURAÇÕES");
            table.AddEntry("settings_game", "Opção do Jogo");
            table.AddEntry("settings_audio", "Áudio");
            table.AddEntry("settings_video", "Vídeo");
            table.AddEntry("settings_keyboard_mouse", "Teclado & Mouse");
            table.AddEntry("settings_controller", "Controle");
            table.AddEntry("settings_accessibility", "Acessibilidade");
            table.AddEntry("master_volume", "Volume Master");
            table.AddEntry("language", "Língua");
            table.AddEntry("language_this", "Português");
            table.AddEntry("camera_shake", "Balanço de Câmera");
            table.AddEntry("display_mode", "Modo de Exibição");
            table.AddEntry("display_fullscreen", "Tela Cheia");
            table.AddEntry("display_windowed", "Em Janela");
            table.AddEntry("display_borderless", "Em Janela sem Moldura");
            table.AddEntry("blood", "Sangue");
            table.AddEntry("blood_normal", "Normal");
            table.AddEntry("blood_rainbow", "Arco-íris");
            table.AddEntry("blood_amount", "Quantidade de Sangue");
            table.AddEntry("building_hotspring", "Termas");
            table.AddEntry("building_hotspring_unlock", "Novo Companheiro!");
            table.AddEntry("unlock_companion", "Novo Companheiro!");
            table.AddEntry("help_hotspring", "Termas|Atraia novos viajantes para Nevabrigo completando desafios.\r\n\r\nVocê encontrará esses companheiros desbloqueados durante aventuras.");
            table.AddEntry("unlock_hotspring_desc", "As Termas atrairão novos companheiros");
            table.AddEntry("unlock_companion_desc", "Dê uma olhada nas Termas para encontrar o companheiro!");
            table.AddEntry("intro1", "Por centenas de anos, o mundo sofreu <#DE3E43>A Wildfrost</color>...|...uma tempestade implacável de neve e gelo");
            table.AddEntry("intro2", "Os campos congelados cresciam ferozmente a cada ano...|...enquanto sobreviventes se abrigavam na cidade de <#039ACE>Nevabrigo</color>");
            table.AddEntry("intro3", "Quando o <#FFFF99>Templo do Sol</color> sucumbiu para a tempestade...|...o sol no céu ficou para sempre congelado");
            table.AddEntry("intro4", "Toda a esperança parecia perdida...|...quando uma pequena faísca apareceu");
            table.AddEntry("intro5", "Um pequeno espírito que poderia nos guiar para o templo perdido...|...e nos ensinar como derrotar esse congelamento maligno");
            table.AddEntry("intro6", "Se conseguirmos alcançar o <#FFFF99>Templo do Sol</color>, nós conseguimos trazer o sol de volta...|...e finalmente terminar esse inverno eterno");
            table.AddEntry("tutorial_charm1", "Você pode equipar seu [Amuleto] arrastando-o para uma carta");
            table.AddEntry("tutorial_charm2", "Quando equipados, [Amuletos] não podem ser removidos!");
            table.AddEntry("tutorial_injury", "[{0}] ficou machucado(a) na batalha!\r\n\r\nSe ele(a) sobreviver a próxima batalha, ele(a) irá se recuperar");
            table.AddEntry("tutorial_injury_multiple", "Alguns dos seus [Companheiros] foram machucados na batalha!\r\n\r\nSe eles sobreviverem na próxima batalha, eles irão se recuperar");
            table.AddEntry("tutorial_companion1", "Você pode usar [<action=Inspect>] em qualquer carta para [Inspecionar] ela|Inspecionar cartas proverá informações sobre seus efeitos e status");
            table.AddEntry("tutorial_companion1_gamepad", "Aperte [<action=Inspect>] em qualquer carta para [Inspecionar] ela|Inspecionar cartas proverá informações sobre seus efeitos e status");
            table.AddEntry("tutorial_companion2", "Selecione um(a) [Companheiro(a)] para continuar!");
            table.AddEntry("tutorial_item", "[Cabeçudo] é uma [Carta Geringonça]\r\n\r\n[Geringonças] são itens que você pode colocar nas batalhas para ajudar seus [Companheiros]");
            table.AddEntry("tutorial_battle1_1", "Para iniciar cada batalha, arraste seu [Líder]<sprite name=crown> da sua [Mão] para o [Campo de Batalha]");
            table.AddEntry("tutorial_battle1_2", "[{0}] é uma de suas [Cartas de Companheiro(a)]\r\nColoque-a no [Campo de Batalha] também!");
            table.AddEntry("tutorial_battle1_3", "Use sua [Espada Cega] para derrotar aquele [Pinguentão]!");
            table.AddEntry("tutorial_battle1_4", "[Contadores de Carta] <sprite name=counter> diminuem por [1] a cada turno\r\n\r\nQuando chegam em zero, a carta irá atacar!");
            table.AddEntry("tutorial_battle1_5", "Você está quase sem cartas!\r\n\r\nObtenha uma mão nova tocando o [Sino de Recompra]");
            table.AddEntry("tutorial_battle1_6", "Você precisa proteger o seu [Líder]<sprite name=crown>\r\n\r\nSe ele(a) morrer, é fim de jogo!");
            table.AddEntry("tutorial_battle1_7", "O [Sino de Inimigos] mostra a quantidade de turnos até a próxima leva de inimigos");
            table.AddEntry("tutorial_battle1_8", "Você precisa derrotar [O Cavaleiro da Neve] para vencer a batalha!");
            table.AddEntry("tutorial_battle2_1", "Você também pode [Inspecionar] cartas durante batalhas\r\n\r\nUse [<action=Inspect>] no(a) [{0}] para inspecioná-lo(a)|Se você estiver confuso(a) sobre uma carta, lembre de inspecioná-la para ter mais informações");
            table.AddEntry("tutorial_battle2_1_gamepad", "Você também pode [Inspecionar] cartas durante batalhas\r\n\r\nAperte [<action=Inspect>] no(a) [{0}] para inspecioná-lo(a)|Se você estiver confuso(a) sobre uma carta, lembre de inspecioná-la para ter mais informações");
            table.AddEntry("tutorial_battle2_2", "Coloque [{0}] na outra faixa");
            table.AddEntry("tutorial_battle2_3", "Arraste [{0}] para frente do seu [Líder]<sprite name=crown> para protegê-lo(a) do ataque!");
            table.AddEntry("tutorial_battle2_4", "Mover suas cartas não custa um turno, então você ainda pode jogar uma carta");
            table.AddEntry("tutorial_battle2_5", "Você pode [Retornar] seus [Companheiros] para curá-los\r\n\r\nArraste [{0}] para seu [Bolso de Descarte]|Você não pode Retornar seu Líder!");
            table.AddEntry("tutorial_battle2_6", "Retornar cartas também é uma ação grátis!");
            table.AddEntry("key_mouse1", "Clique Esquerdo");
            table.AddEntry("key_mouse2", "Clique Direito");
            table.AddEntry("tutorial_unplayable_crown_card", "Sua [Carta Coroada] não pode ser jogada!\r\nAperte o [Sino de Recompra] para continuar...");
            table.AddEntry("tutorial_battle1_41", "Inimigos sempre atacam primeiro!");
            table.AddEntry("retry", "<size=0.33>Tentar de Novo</size>");
            table.AddEntry("skip", "Pular");
            table.AddEntry("tutorial_retry_or_skip", "Pular o Tutorial?|Parece que você não terminou o Tutorial!\r\n\r\nVocê gostaria de tentar de novo, ou pulá-lo?");
            table.AddEntry("recall_heal", "{0}<sprite name=health> Curado(a)");
            table.AddEntry("companion_limit_hit", "Limite de Companheiros Atingindo!\r\n<size=.4><#fff>Você pode reservar companheiros no seu deck reserva a qualquer momento\r\n<size=.5><#fff><#{2}>{0}</color>/{1}");
            table.AddEntry("companion_limit_swap", "<#fff>SELECIONE CARTAS</color>\r\npara trocar");
            table.AddEntry("get_outta_here", "Saia daqui!");
            table.AddEntry("wishlist_steam", "Deseje Na Steam!");
            table.AddEntry("demo_version", "Versão Demo");
            table.AddEntry("tutorial_town", "Bem-vindo a Nevabrigo!|Você pode construir novas construções completando desafios.\r\n\r\nVolte aqui depois de cada aventura para ver o que foi desbloqueado!");
            table.AddEntry("dtutorial_recall", "<size=0.3>Lembre-se, você pode curar seus [Companheiros] [Retornando] eles!");
            table.AddEntry("dtutorial_redraw", "<size=0.3>Não esqueça, você pode tocar o [Sino de Recompra] a qualquer momento!");
            table.AddEntry("dtutorial_move", "<size=0.3>Não esqueça, você pode mover suas cartas a qualquer momento!");
            table.AddEntry("demo_complete", "DEMO COMPLETA");
            table.AddEntry("demo_thanks", "Obrigado por jogar! O jogo completo possuirá:");
            table.AddEntry("demo_new_areas", "MAIS ÁREAS");
            table.AddEntry("demo_new_areas_sub", "com inimigos e chefões únicos!");
            table.AddEntry("demo_town", "CONSTRUA SUA CIDADE");
            table.AddEntry("demo_town_sub", "para desbloquear novas classes, cartas e eventos!");
            table.AddEntry("demo_tribes", "CLASSES DIFERENTES");
            table.AddEntry("demo_tribes_sub", "cada uma com cartas e estilos de jogo diferentes");
            table.AddEntry("demo_boss", "UM CHEFÃO FINAL MISTERIOSO");
            table.AddEntry("demo_boss_sub", "que vai mudar toda vez que você jogar...");
            table.AddEntry("demo_wishlist", "Deseje Wildfrost!");
            table.AddEntry("event_duplicator_choose", "Escolha uma carta para duplicar");
            table.AddEntry("event_duplicator_confirm", "Duplicar esta carta?");
            table.AddEntry("event_gnome_take", "Pegue alguns items, são de graça!");
            table.AddEntry("building_frostoscope", "Congelóscopo");
            table.AddEntry("unlock_frostoscope_desc", "Use o Congelóscopo para dar uma olhada no Guardião Congelado");
            table.AddEntry("help_frostoscope", "Use o Congelóscopo|Dê uma olhada na Batalha do Chefão Final que você irá enfrentar");
            table.AddEntry("map_charm_shop", "Mercadora de Amuletos");
            table.AddEntry("map_gnome", "Gnomo Viajante");
            table.AddEntry("map_copy_item", "Escultor de Sombras");
            table.AddEntry("map_final_boss", "Olho da Tempestade");
            table.AddEntry("unlock_event", "Novo Evento Disponível!");
            table.AddEntry("unlock_event_desc", "Visite a Cabine Quebra-gelo para descobrir mais!");
            table.AddEntry("result_victory1", "VITÓRIA?");
            table.AddEntry("result_victory2", "VITÓRIA!");
            table.AddEntry("key_tap1", "Toque <sprite=26>");
            table.AddEntry("key_tap2", "Toque com 2 dedos <sprite=27>");
            table.AddEntry("tutorial_companion1_touch", "[<action=Inspect>] qualquer carta para [Inspecionar] ela|Inspecionar cartas proverá informações sobre seus efeitos e status");
            table.AddEntry("help_daily_run_no_connection", "Sem Conexão!|A Jornada Diária requer uma conexão com a internet ativa.");
            table.AddEntry("score_title", "Seus Recordes");
            table.AddEntry("score_time", "Tempo");
            table.AddEntry("score_battles_won", "Batalhas Vencidas");
            table.AddEntry("score_blings", "Blings");
            table.AddEntry("score_total", "Total: {0}");
            table.AddEntry("score_uploading", "<#fffa>Enviando Recorde");
            table.AddEntry("score_upload_failed", "<#fffa>Falha ao Enviar Recorde :(");
            table.AddEntry("score_global_rank", "Ranque Global: <#ff0>#{0}");
            table.AddEntry("modifier_unlock_title", "Sino Modificador Desbloqueado!");
            table.AddEntry("modifier_unlock_body", "Sino Modificadores dão um desafio adicional, para aqueles corajosos o suficiente!\r\n\r\nVocê pode habilitar/desabilitar Sinos Modificadores antes de iniciar cada aventura");
            table.AddEntry("popup_no_target_to_attack", "Sem Alvos Para Atacar!");
            table.AddEntry("popup_no_allies_to_heal", "Sem Aliados Para Curar!");
            table.AddEntry("popup_no_target_for_status", "Sem Alvos Para {0}");
            table.AddEntry("popup_no_space_to_summon", "Sem espaço para invocar!");
            table.AddEntry("popup_no_cards_to_draw", "Sem Cartas Para Comprar!");
            table.AddEntry("popup_no_allies_to_boost", "Nenhum Aliado Pode Ser Melhorado!");
            table.AddEntry("popup_no_enemies_to_boost", "Nenhum Inimigo Pode Ser Melhorado!");
            table.AddEntry("popup_requires_junk", "Requer {0} Tralha(s)!");
            table.AddEntry("journal_history_title", "ESTE <#B88F60>DIÁRIO</color> PERTENCE <#D0B38F>A</color>");
            table.AddEntry("tribe1_name", "Nevabrigantes");
            table.AddEntry("tribe1_desc", "Clãs que se juntaram na cidade de Nevabrigo para liderar a batalha contra a Wildfrost.\r\nDominar os elementos é a chave para a estratégia de batalha deles, usando neve e fungos para impedir os inimigos, cascas para protegê-los, e pimentas extra-picantes para ganhar mais poder.");
            table.AddEntry("tribe2_name", "Dobrassombras");
            table.AddEntry("tribe2_desc", "Esses guerreiros habilidosos liberam os poderes das sombras invocando espíritos conhecidos como Sombras para ajudá-los no combate.\r\nSombras podem absorver ataques inimigos, serem fortalecidas para criar oponentes devastadores, ou estrategicamente serem sacrificadas para ganhar efeitos variados.");
            table.AddEntry("tribe3_name", "Mestres Geringonça");
            table.AddEntry("tribe3_desc", "A tribo perdida dos Gnomos! Estes mestres artesãos usam\r\ntralhas e sucatas como combustível para equipamentos e Geringonças poderosas.\r\nConseguir um equilíbrio entre criar e reciclar lixo para abastecer equipamentos e maquinário é fundamental para a estratégia dos Mestres Geringonça.");
            table.AddEntry("new_final_boss", "UM NOVO GUARDIÃO CONGELADO\r\n<#FD56FF>ASCENDEU");
            table.AddEntry("building_challenge_shrine", "Pedras de Desafios");
            table.AddEntry("unlock_charm", "Novo Amuleto Desbloqueado!");
            table.AddEntry("unlock_charm_desc", "Visite as Pedras de Desafio para descobrir seus novos amuletos!");
            table.AddEntry("win_streak", "Sequência de Vitórias Atual");
            table.AddEntry("cards_combined", "Cartas Combinadas!");
            table.AddEntry("throw_card", "Descarte {0}!");
            table.AddEntry("choose_reward", "Escolha uma Recompensa!");
            table.AddEntry("credits", "Créditos");
            table.AddEntry("confirm", "Confirmar");
            table.AddEntry("settings", "Configurações");
            table.AddEntry("display_max_fps", "FPS Máximo");
            table.AddEntry("display_vsync", "Vsync");
            table.AddEntry("on", "Ligado");
            table.AddEntry("off", "Desligado");
            table.AddEntry("display_fps_unlimited", "Ilimitado");
            table.AddEntry("camera_sway", "Velocidade da Câmera");
            table.AddEntry("screen_flash", "Efeitos de Flash");
            table.AddEntry("help_redraw_bell", "Sino de Recompra|Você pode usar o Sino de Recompra a qualquer momento para descartar sua mão e comprar <#fff>6</color> cartas novas.\r\n\r\nTocar o Sino de Recompra terminará o seu turno a não ser que o sino esteja <#fff>carregado</color>. Ele ficará <#fff>carregado</color> quando seu contador chegar a zero.");
            table.AddEntry("got it", "Entendi!");
            table.AddEntry("map_charm_shop_desc", "Compre amuletos e itens aprimorados da mercadora viajante e sua cabra de estimação");
            table.AddEntry("map_gnome_desc", "Um gnomo sorrateiro que dará a você alguns itens de graça! Sem compromissos!\r\n\r\nParece bom demais para ser verdade, né?");
            table.AddEntry("map_copy_item_desc", "Este personagem misterioso vai ajudá-lo(a) esculpindo uma cópia de um de seus itens do seu deck");
            table.AddEntry("map_true_final_boss", "Coração da Tempestade");
            table.AddEntry("yes", "Sim");
            table.AddEntry("no", "Não");
            table.AddEntry("map_now_entering", "Entrando agora...");
            table.AddEntry("map area 1", "TERRA DOS HOMENS DA NEVE");
            table.AddEntry("map area 2", "AS CAVERNAS DE GELO");
            table.AddEntry("map area 3", "AS TERRAS CONGELADAS");
            table.AddEntry("help_give_up", "Desistir?|Você tem certeza que quer abandonar sua aventura existente e iniciar uma nova?");
            table.AddEntry("map_journal_page", "Página do Diário");
            table.AddEntry("scores_top", "Melhores Recordes");
            table.AddEntry("scores_friends", "Amigos");
            table.AddEntry("scores_none", "Nenhum recorde ainda!");
            table.AddEntry("scores_no_connection", "Sem Conexão!");
            table.AddEntry("scores_too_many_requests", "Muitas Requisições! Por favor tente novamente mais tarde");
            table.AddEntry("popup_cant_split", "Não Pode Dividir!");
            table.AddEntry("help_daily_run_first", "Jornada Diária|A Jornada Diária é geralmente mais difícil que o jogo principal.\r\n\r\nTodo dia, uma nova aventura vai ser gerada com cartas e modificadores aleatórios.\r\n\r\nTodas as cartas, tribos, eventos & amuletos são desbloqueados em aventuras da Jornada Diária.\r\n\r\nVocê só tem uma tentativa. Boa sorte!");
            table.AddEntry("tutorial_battle2_41a", "<size=0.35>[{0}] tem [Rajada], que quer dizer que vai atingir [todos os alvos na faixa]\r\n\r\nAtualmente, ataques de [{0}] vão acertar [ambos] seus personagens!\r\n\r\nTente mover [{1}] para a outra faixa para que [{0}] só atinja eles");
            table.AddEntry("tutorial_battle2_41b", "<size=0.35>[{0}] tem [Rajada], que quer dizer que vai atingir [todos os alvos na faixa]\r\n\r\nAtualmente, ataques de [{0}] vão acertar [ambos] seus personagens!\r\n\r\nTente mover seu [Líder]<sprite name=crown> para a outra faixa para que [{0}] só atinja [{1}] ");
            table.AddEntry("popup_play_crown_first", "Jogue Cartas com <sprite name=crown> Primeiro!");
            table.AddEntry("dtutorial_aimless", "<size=0.35>Tenha cuidado com [{0}]!\r\n\r\nEle(a) é [Sem Mira], que quer dizer que o ataque dele(a) vai atingir um [alvo aleatório na faixa]");
            table.AddEntry("dtutorial_reaction", "<size=0.35>[{0}] tem um efeito de [Reação]<sprite name=reaction>!\r\n\r\nComo [Contadores]<sprite name=counter>, [Reações] podem ser congeladas com [Neve]<sprite name=snow> para impedir que o efeito ocorra");
            table.AddEntry("tutorial_battle3_1", "<size=0.35>Normalmente é uma boa ideia colocar seus [Companheiros] no [Campo de Batalha] assim que possível!\r\n\r\nSeus [Contadores]<sprite name=counter> vão começar a diminuir apenas quando eles estiverem no [Campo de Batalha]");
            table.AddEntry("popup_no_summoned_allies", "Sem Aliados Invocados!");
            table.AddEntry("event_grab_crown", "Pegue A Coroa!");
            table.AddEntry("tutorial_crown", "Ao contrário de [Amuletos], [Coroas] podem ser removidas e recolocadas em outras cartas entre Batalhas");
            table.AddEntry("dtutorial_redraw2", "<size=0.3>Normalmente é uma boa ideia tocar o [Sino de Recompra] mais cedo para colocar seus [Companheiros] no Campo de Batalha assim que possível!");
            table.AddEntry("tutorial_kill_leader_warning", "<size=0.3>Usar [{0}] aí vai matar o seu [Líder]!");
            table.AddEntry("map_battle_pengoons", "Os Pinguentões");
            table.AddEntry("map_battle_snowbos", "A Gangue do Nevobo");
            table.AddEntry("map_battle_berries", "Os Globagas");
            table.AddEntry("map_battle_frosters", "As Sombras Congeladas");
            table.AddEntry("map_battle_snowbears", "Os Ursos das Geleiras");
            table.AddEntry("map_battle_shrooms", "Os Fungos Nocivos");
            table.AddEntry("map_battle_goats", "As Cabras de Chifres Demoníacos");
            table.AddEntry("map_battle_shell", "As Nozes com Casca");
            table.AddEntry("map_battle_monkeys", "Os Mokos Picantes");
            table.AddEntry("map_battle_teeth", "As Sombras Dentuças");
            table.AddEntry("map_battle_drek", "O Drek Lanoso");
            table.AddEntry("map_battle_hogs", "Os Porcos Selvagens");
            table.AddEntry("map_battle_crabs", "Os Caranguejos de Gelo");
            table.AddEntry("popup_no_allies_to_attack", "Sem Aliados Para Atacar!");
            table.AddEntry("update_173_title", "Correções & Ajustes (v1.0.5)");
            table.AddEntry("update_173_body", "<#ff0>Olho da Ordem do Turno</color>\r\nQuando pressionado, este botão vai mostra a ordem na qual as cartas em batalha irão agir. Isso ajudará novos jogadores a ler a ordem da batalha mais facilmente e planejar os próximos passos de acordo.\r\n\r\n<#ff0>Tutoriais Melhorados</color>\r\nNós aumentamos o tutorial para incluir o seguinte: mover companheiros, ataques especiais inimigos, interações com coroas e muito mais. Nós esperamos que essas mudanças vão ajudar a familiarizar novos jogadores e ser um lembrete útil para quem iniciar um novo arquivo de save.\r\n\r\n<#ff0>2 Novos Inimigos!</color>\r\nGogong vai aparecer nas primeiras batalhas para ensinar os jogadores sobre Contra-golpe e efeitos de Reação.\r\nMinimoko substitui os Makokos na batalha contra o chefão Infernoko, para deixar a dificuldade dessa batalha mais parecida com a do Enganão.\r\n\r\n<#ff0>Ícones de Mapa específicos para cada Batalha</color>\r\nEvery battle now features a unique icon and name, allowing you to see which battle you'll be coming up against, and switch around your Companions and Crowns before the battle to prepare accordingly.\r\n\r\n<#ff0>Treasure Skip Button</color>\r\nYou can now leave a treasure event without taking an item. This has been a highly requested option from players, so it's now possible in the game (:\r\n\r\n<#ff0>Card Balance</color>\r\n- Hazeblazer: +Health, damages self instead of allies\r\n- Firefist: +Health & -Counter\r\n- Mini Mika: +Counter\r\n- Fizzle: -Health\r\n- Biji: +Health\r\n- Devicro: +Health\r\n- Van Jun: effect changed: Add +2 Attack and +2 Health to all Summoned allies\r\n- Ice Dice: effect changed: Apply 1 Block to a random ally, Apply 1 Block to a random enemy\r\n- Soulbound Skulls: Add Soulbound to an ally, add Soulbound to a random enemy. Soulbound now only activates on sacrifice\r\n- Bom Barrel: has Barrage instead of 'Hits all Enemies'\r\n- B.I.N.K: effect reduced to 2\r\n- Krono: effect changed: Only affects crowned allies in the row\r\n- Krono: Moved to general pool (can be found by all Tribes)\r\n- Woolly Drek: -Attack\r\n- Bigfoot: Barrage instead of Aimless, -Health, -Attack\r\n- Smog: +Counter\r\n- Ice Forge: effect reduced to 2\r\n- Spike Wall: -Scrap & -Attack\r\n- Grumps: -Health\r\n- Marrow: -Teeth\r\n- Durian Charm: -Attack\r\n- Recycle Charm: +Attack, can no longer be put on units\r\n\r\n<#ff0>Other Changes</color>\r\n- Shade Clay no longer copies Crown\r\n- Improve inconsistencies between Monch & Woolly Drek effect text\r\n- New Absorb keyword for Woolly Drek to better explain its effect\r\n- Improved popup text for Counter, Reaction & Snow\r\n- Improved status effect tooltip text colours\r\n- Non-target cards (e.g. Pombomb) will show which cards they will hit\r\n- Final Boss battles have less Teeth\r\n- Final Boss enemies' stats are boosted less if they have Charms\r\n- Lowered Ritual challenge requirements\r\n- Lumin Goop & Broken Vase can now be found in Gnome Traveller & Charm Merchant events\r\n\r\n<#ff0>Bug Fixes</color>\r\n- Fixed being able to use non-Crown cards during Crown phase:\r\nThis interaction allowed players to draw new cards and play them for free before the battle starts, and was not intended to be a part of the game (sorry, Mini Mika enjoyers...)\r\n- Fixed Broken Vase or Lumin Goop sometimes not showing up\r\n- Fixed issues with non-target cards (e.g. Pombomb) not returning to hand properly\r\n- Fixed Berry Blade not healing sometimes\r\n- Fixed being unable to recall Ink'd Hogheaded/Spark units\r\n- Fixed Durian Charm not removing certain effects\r\n- Fixed Durian Charm removing status effects as well as effects\r\n- Fixed Japanese translation errors\r\n- Fixed Faith not working on Shade Wisp & Blank Mask\r\n- Fixed Vesta taking double damage from Teeth\r\n- Fixed Bombom instantly taking double damage when gaining Demonize from Gok\r\n- Fixed issues with reserving duplicate companions\r\n- Fixed Heartforge effect occurring while in hand\r\n- Fixed being able to buy duplicate charms from the merchant\r\n- Fixed Frostbite Shard removing \"half health\" effect from Frost Guardian\r\n\r\nThat's it for now! We hope you enjoy the improvements :) If you want to join the conversation as it happens, come join our Discord and chat with fellow Gnome-enjoyers. ");
            table.AddEntry("choose_tribe", "Escolha a Tribo");
            table.AddEntry("map_injured_companion", "Companheiro Machucado");
            table.AddEntry("unit_targets", "Alvos Únicos");
            table.AddEntry("beta_body", "<align=center><size=0.45><#ff0>Welcome to the Wildfrost Beta Branch!</color><size=0.35>\r\n\r\n\r\nPlease be aware that the features in this version are <#ff0>unfinished</color> and <#ff0>only available in English</color> at the moment.\r\n\r\nWe'd love to hear your feedback via our <#ff0>Discord Server</color> or the <#ff0>Steam Forums</color>!");
            table.AddEntry("event_choose_rewards", "Pegue {0} Recompensas!");
            table.AddEntry("help_enemy_wave_bell", "Sino de Inimigos|O Sino de Inimigos mostra quantos turnos faltam antes da próxima leva de inimigos chegar!\r\n\r\nSe há espaço suficiente disponível, você pode <#fff>tocar o sino</color> para chamar a próxima leva de inimigos mais cedo.");
            table.AddEntry("event_sun_blessing", "Benção do Sol");
            table.AddEntry("inspect_charms_gamepad", "<action=Options> Inspecionar Amuletos");
            table.AddEntry("inspect_charms_mouse", "Use <action=Select> para Inspecionar Amuletos");
            table.AddEntry("map_lost_traveller", "Viajantes Perdidos");
            table.AddEntry("event_take_card", "Pegue Uma Carta");
            table.AddEntry("event_choose_negative_charm", "Escolha um Amuleto Negativo");
            table.AddEntry("storm_bell_unlock_title", "Sinos da Tempestade Desbloqueados!");
            table.AddEntry("storm_bell_unlock_body", "<#FF56FF>Sinos da Tempestade</color> dão um desafio adicional, para aqueles corajosos o suficiente!\r\n\r\nVocê pode escolher quais <#FF56FF>Sinos Modificadores</color> você quer habilitar antes de iniciar cada aventura.\r\n\r\nSeu <#FF56FF>Limite de Força da Tempestade</color> aumentará depois de cada aventura bem sucedida em força máxima.");
            table.AddEntry("storm_bell_points", "Pontos de Tempestade: <size=0.45>{0}/10</size>");
            table.AddEntry("storm_bell_challenge_level", "Dificuldade: <size=0.45>{0}</size>");
            table.AddEntry("difficulty_easy", "Fácil");
            table.AddEntry("difficulty_normal", "Moderado");
            table.AddEntry("difficulty_hard", "Difícil");
            table.AddEntry("difficulty_extreme", "Extremo");
            table.AddEntry("difficulty_nightmare", "Pesadelo");
            table.AddEntry("storm_bell_points_maximum", "Limite de Força\r\nda Tempestade:");
            table.AddEntry("popup_cant_move", "Não Pode Se Mover!");
            table.AddEntry("new_chiseled_frame", "Desbloqueou <#ff0>{0}</color> Nova\r\n<size=0.55><#ff0>Molduras de Carta Entalhada");
            table.AddEntry("new_chiseled_frames", "Desbloqueou <#ff0>{0}</color> Novas\r\n<size=0.55><#ff0>Molduras de Carta Entalhadas");
            table.AddEntry("new_gold_frame", "Desbloqueou <#ff0>{0}</color> Nova\r\n<size=0.55><#ff0>Moldura de Carta Dourada");
            table.AddEntry("new_gold_frames", "Desbloqueou <#ff0>{0}</color> Novas\r\n<size=0.55><#ff0>Molduras de Carta Douradas");
            table.AddEntry("storm_bell_points_overcranked", "SEM LIMITE");
            table.AddEntry("storm_point_add", "\r\n\r\n<color=#FF70FF>Força da Tempestade +{0}");
            table.AddEntry("event_health_lost", "<#EB6F75>A Tempestade</color> cobra o seu preço a <#EB6F75>{0}</color>...\r\n-{1}<size=0.44><sprite name=health>");
            table.AddEntry("storm_bell_points_increased", "+{0} Limite de Força da Tempestade");
            table.AddEntry("overcrank_unlock_title", "Sem Limites Desbloqueado!");
            table.AddEntry("overcrank_unlock_body", "Agora você pode acionar o <#FF5440>Sem Limites</color> para habilitar TODOS <#FF56FF>Sinos da Tempestade</color> e encarar o desafio final de Wildfrost!<size=0.38>\r\n\r\n<#374D5D>Este desafio é meramente um teste da sua habilidade e não lhe dará nenhuma conquista ou desbloqueio adicionais");
            table.AddEntry("storm_bell_gold_frames_remaining", "{0}/13 Dourados");
            table.AddEntry("gold_card_frames", "Molduras Especiais");
            table.AddEntry("screen_transition", "Transição de Tela");
            table.AddEntry("screen_transition_snow", "Neve");
            table.AddEntry("screen_transition_fade_to_black", "Escurecer");
            table.AddEntry("tutorial_injured_companion_event", "<size=0.35>[{0}] retornou [Machucado(a)] da sua aventura anterior!\r\n\r\nCompanheiros [Machucados] começarão cada Batalha com metade de <sprite name=health> e <sprite name=attack>\r\n\r\nEles se recuperarão se sobreviverem a próxima Batalha");
            table.AddEntry("settings_vfx", "Efeitos Visuais");
            table.AddEntry("mods", "Mods");
            table.AddEntry("settings_privacy_policy", "Política de Privacidade");
            table.AddEntry("error_card_data_missing", "Dados da Carta Não Encontrados :(");
            table.AddEntry("error_save_missing_data", "O Arquivo de Save Tem Dados Faltando :(");
            table.AddEntry("map_battle_healers", "As Bagas do Pântano");
            table.AddEntry("map_battle_bombers", "Os Caroços de Neve");
            table.AddEntry("map_battle_ink", "Os Sacos de Tinta");
            table.AddEntry("map_battle_cloners", "Os Insetos de Lixo");
            table.AddEntry("Snowfall.map_upgradeEvent", "Câmara da Ascensão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BomBattle_name", "Esquadrão Coelhos");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.InkBattle_name", "Marinheiros Sujos");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.JunkBattle_name", "O Ninho do Fogo");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.OverburnBattle_name", "As Almas Perversas");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.CrowerBattle_name", "Os Corvos Cortantes");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.LichBattle_name", "Lorde Mazkrak");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BonKoreYoyoUnlock_unlockTitle", "Novo Item Inventado!");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BonKoreYoyoUnlock_unlockDesc", "Visite a Cabana do Inventor para descobrir seu novo item!");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.MazkinMaskUnlock_unlockTitle", "Novo Item Inventado!");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.MazkinMaskUnlock_unlockDesc", "Visite a Cabana do Inventor para descobrir seu novo item!");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.FickleCaneUnlock_unlockTitle", "Novo Item Inventado!");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.FickleCaneUnlock_unlockDesc", "Visite a Cabana do Inventor para descobrir seu novo item!");
            table.AddEntry("map_MapNodeCharm", "Troca");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.trade_text1", "Escolha uma Troca!");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.trade_text2", "{0} por {1}?");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.trade_confirm", "Confirmar");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.trade_cancel", "Cancelar");
            table.AddEntry("herebin.wildfrost.localization_dumperdump_message", "Textos de localização exportados para sua pasta do jogo.|Localization Dumper foi desabilitado automaticamente!");
            table.AddEntry("herebin.wildfrost.localization_dumperopen_folder", "<size=0.4>Abrir Pasta!</size>");
            table.AddEntry("herebin.wildfrost.localization_dumperok", "Ok!");
            table.AddEntry("mhcdc9.wildfrost.backflip.stat_desc", "Backflips Feitos: {0}");
            table.AddEntry("mod_configs", "Configs. de Mods");
            table.AddEntry("hope.Cancel", "Cancelar");
            table.AddEntry("hope.Confirm", "Comfirmar");
            table.AddEntry("hope.profiles.Profile", "Perfis: {0}");
            table.AddEntry("hope.profiles.Mods", "Últimos mods: {0}");
            table.AddEntry("hope.profiles.Panel_Format", "Tem certeza que você quer\r\ndeletar o perfil\r\n[{0}]?");
            table.AddEntry("hope.profiles.cancel", "Cancelar");
            table.AddEntry("hope.moduploader.Panel_Format", "Publicar o mod [{0}]?|{1}|{2}\r\nDefina visibilidade não-pública com FriendsOnly, Private, ou Unlisted\r\n\"Editar tags\" vai criar/abrir um tags.txt na pasta do mod");
            table.AddEntry("hope.moduploader.Body_tags", "... com a(s) tag(s) [{0}]?");
            table.AddEntry("hope.moduploader.Body_visibility", "com visibilidade [{0}]");
            table.AddEntry("hope.moduploader.Body_addsTags", "Isto vai adicionar a(s) tag(s) [{0}]");
            table.AddEntry("hope.moduploader.Body_removesTags", "Isto vai remover a(s) tag(s) [{0}]");
            table.AddEntry("hope.moduploader.Note_hasCustomTags", "Tags Customizadas utilizadas: [{0}]");
            table.AddEntry("hope.moduploader.Note_noCustomTags", "Nota: Você também pode usar qualquer tag customizada!");
            table.AddEntry("hope.moduploader.Published_success", "Vai demorar um pouco para atualizar a página do mod");
            table.AddEntry("hope.moduploader.Published_fail", "Uh oh...\r\nResultado da atualização: {0}\r\n{1}");
            table.AddEntry("hope.moduploader.Result_NoConnection", "Conexão com a internet não existente ou falha");
            table.AddEntry("hope.moduploader.Result_FileNotFound", "Um arquivo não foi encontrado");
            table.AddEntry("hope.moduploader.Result_LimitExceeded", "Tamanho do ícone não pode passar de 1MB");
            table.AddEntry("hope.moduploader.Result_Fail", "Um código de erro mais específico não pode ser determinado");
            table.AddEntry("hope.moduploader.Buttons_editTags", "<size=0.45>Editar tags</size>");
            table.AddEntry("hope.moduploader.cancel", "Cancelar");
            table.AddEntry("Hallownest Description", "Deixando para trás um reino em ruína, viajantes assim como lutadores chegaram até Nevabrigo. Pouco sabiam eles que mais perigos os esperavam aqui.\r\n\r\nEsta tribo foca em escalar unidades e itens usando o Sino de Recompra e outras ferramentas.");
            table.AddEntry("Hallownest", "Os Vazios");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.generalquestfailed", "Condições não atingidas...");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.cresseliaHurt", "Cresselia está muito machucada...");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.tooslow", "O navio zarpou...");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.gatekeeperFlee", "Ninguém está aqui...");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.unloadwarningkey", "Unloading Anomolies Detected|Bugs may be appear during gameplay. For the best experience, please restart Wildfrost.|-[Pokefrost]");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.unloadwarningyeskey", "Claro!");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.unloadwarningnokey", "Nunca!");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.evo_title1a", "Huh? <#ff0>{0}</color> está evoluindo?");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.evo_title1b", "Huh? <#ff0>{0}</color> Pokémons estão evoluindo?");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.evo_title2a", "<#ff0>{0}</color> evoluiu para <#ff0>{1}</color>!");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.evo_title2b", "<#ff0>{0}</color> Pokémon evoluíram!");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.evo_observe", "Observe");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.ShroomShellBattle_name", "Acampamento Madeira Fúngica");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SnowBattle_name", "Avalance Angelical");
        }

        private void SetUpgradesLocalizations()
        {
            var table = LocalizationHelper.GetCollection("Upgrades", ModLanguage);

            table.AddEntry("charm_acorn", "Amuleto Bolota");
            table.AddEntry("charm_acorn_text", "Ganhe <8><keyword=shell>");
            table.AddEntry("charm_balanced", "Amuleto do Equilíbrio");
            table.AddEntry("charm_balanced_text", "Defina <keyword=health>, <keyword=attack> e <keyword=counter> para <3>");
            table.AddEntry("charm_barrage", "Amuleto Romã");
            table.AddEntry("charm_barrage_text", "Ganhe <keyword=barrage> e reduza <keyword=attack> em <2>");
            table.AddEntry("charm_battle", "Amuleto de Batalha");
            table.AddEntry("charm_battle_text", "<+2><keyword=attack>");
            table.AddEntry("charm_blings", "Amuleto Bling");
            table.AddEntry("charm_blings_text", "Ganhe <5><keyword=blings> por cada abate");
            table.AddEntry("charm_bombskull", "Amuleto Bomba-Caveira");
            table.AddEntry("charm_bombskull_text", "Quando destruído(a), dê <8> de dano a inimigos na faixa");
            table.AddEntry("charm_boost", "Anel de Lumin");
            table.AddEntry("charm_boost_text", "Melhore os efeitos em <1>");
            table.AddEntry("charm_cake", "Amuleto de Bolo");
            table.AddEntry("charm_cake_text", "Melhore os efeitos em <4> e ganhe <keyword=consume>");
            table.AddEntry("charm_cloudberry", "Amuleto Baga-nuvem");
            table.AddEntry("charm_cloudberry_text", "Restaure <3> de <keyword=health> em abates");
            table.AddEntry("charm_draw", "Amuleto de Compra");
            table.AddEntry("charm_draw_text", "Ganhe <keyword=draw 2> em abates");
            table.AddEntry("charm_frenzy_consume", "Amuleto da Frenesi");
            table.AddEntry("charm_frenzy_consume_text", "Adicione <x2><keyword=frenzy> e ganhe <keyword=consume>");
            table.AddEntry("charm_frosthand", "Amuleto Mão-congelada");
            table.AddEntry("charm_frosthand_text", "Aplique <1><keyword=frost>");
            table.AddEntry("charm_fury", "Amuleto Sapo");
            table.AddEntry("charm_fury_text", "Ganhe <keyword=fury 4>");
            table.AddEntry("charm_heart", "Amuleto Coração");
            table.AddEntry("charm_heart_text", "<+5><keyword=health>");
            table.AddEntry("charm_hook", "Amuleto Gancho");
            table.AddEntry("charm_hook_text", "Ganhe <keyword=pull 2>");
            table.AddEntry("charm_noomlin", "Amuleto Noomlin");
            table.AddEntry("charm_noomlin_text", "Ganhe <keyword=noomlin>");
            table.AddEntry("charm_pig", "Amuleto Javali");
            table.AddEntry("charm_pig_text", "Ganhe <keyword=pigheaded>\r\n<+7><keyword=health>");
            table.AddEntry("charm_punchfist", "Amuleto Soco");
            table.AddEntry("charm_punchfist_text", "Ganhe <keyword=smackback>");
            table.AddEntry("charm_scrap", "Amuleto Sucata");
            table.AddEntry("charm_scrap_text", "Adicione <1><keyword=scrap>");
            table.AddEntry("charm_shell_on_kill", "Amuleto Escudo");
            table.AddEntry("charm_shell_on_kill_text", "Ganhe <3><keyword=shell> em abates");
            table.AddEntry("charm_shroom", "Amuleto Fungo");
            table.AddEntry("charm_shroom_text", "Aplique <1><keyword=shroom>");
            table.AddEntry("charm_snowball", "Amuleto Bola-de-neve");
            table.AddEntry("charm_snowball_text", "Aplique <1><keyword=snow>");
            table.AddEntry("charm_snow_immune", "Amuleto Pengu");
            table.AddEntry("charm_snow_immune_text", "Quando receber <keyword=snow>, ganhe <keyword=attack> igual");
            table.AddEntry("charm_spice", "Amuleto Pimenta");
            table.AddEntry("charm_spice_text", "Ganhe <2><keyword=spice> quando atingido(a)");
            table.AddEntry("charm_teeth", "Amuleto Mordida");
            table.AddEntry("charm_teeth_text", "Comece com <3><keyword=teeth>");
            table.AddEntry("charm_sun", "Amuleto do Sol");
            table.AddEntry("charm_sun_text", "Reduza <keyword=counter> em 1");
            table.AddEntry("charm_teeth_when_hit", "Amuleto Tigre");
            table.AddEntry("charm_teeth_when_hit_text", "Ganhe <1><keyword=teeth> quando atingido(a)");
            table.AddEntry("charm_weakness", "Amuleto da Franqueza");
            table.AddEntry("charm_weakness_text", "Reduza <keyword=attack> em <2>");
            table.AddEntry("charm_gnome", "Amuleto Gnomo");
            table.AddEntry("charm_gnome_text", "Adicione <x1><keyword=frenzy> e ganhe <keyword=aimless>");
            table.AddEntry("crown", "Coroa");
            table.AddEntry("crown_text", "Cartas com Coroa são sempre jogadas no início da batalha");
            table.AddEntry("charm_goat", "Amuleto Cabra");
            table.AddEntry("charm_goat_text", "Aplique <1><keyword=demonize>");
            table.AddEntry("charm_flameblade", "Amuleto Lâmina-Flamejante");
            table.AddEntry("charm_flameblade_text", "Troque <keyword=attack> atual com aplique <keyword=overload>");
            table.AddEntry("charm_consume_overburn", "Amuleto Cupcake-Explosivo");
            table.AddEntry("charm_consume_overburn_text", "Quando consumido(a), aplique <2><keyword=overload> a todos inimigos");
            table.AddEntry("charm_critical", "Amuleto Crítico");
            table.AddEntry("charm_critical_text", "Ganhe <keyword=combo>");
            table.AddEntry("charm_ink", "Amuleto Lula");
            table.AddEntry("charm_ink_text", "Aplique <2><keyword=null>");
            table.AddEntry("charm_bom", "Amuleto Bom");
            table.AddEntry("charm_bom_text", "Aplique <1><keyword=weakness>");
            table.AddEntry("charm_crush", "Amuleto Reciclagem");
            table.AddEntry("charm_crush_text", "Ganhe <keyword=recycle 1>\r\n<+4><keyword=attack>");
            table.AddEntry("charm_trash", "Amuleto Lixo");
            table.AddEntry("charm_trash_text", "Ganhe <keyword=trash 1>");
            table.AddEntry("charm_wrecker", "Amuleto Alce");
            table.AddEntry("charm_wrecker_text", "Aumenta <keyword=counter> em <1>\r\n<+3><keyword=attack>");
            table.AddEntry("charm_jumbo", "Amuleto Durião");
            table.AddEntry("charm_jumbo_text", "<+4><keyword=attack>\r\nRemove todos os efeitos");
            table.AddEntry("charm_effigy", "Amuleto Cordeiro");
            table.AddEntry("charm_effigy_text", "Ganhe <keyword=effigy 2>");
            table.AddEntry("charm_one_punch", "Amuleto Ovo Derretido");
            table.AddEntry("charm_one_punch_text", "Ganhe <keyword=consume>\r\n<+5><keyword=attack>");
            table.AddEntry("charm_snowbun", "Snowbun Charm");
            table.AddEntry("charm_snowbun_text", "When <keyword=snow>'d, gain equal <keyword=attack>");
            table.AddEntry("charm_peppernut", "Amuleto Pimenta Cascuda");
            table.AddEntry("charm_peppernut_text", "Quando receber <keyword=shell>, ganhe <keyword=spice> no lugar");
            table.AddEntry("charm_truffle", "Amuleto Trufa");
            table.AddEntry("charm_truffle_text", "Aplique <3><keyword=shroom>\r\n<-2><keyword=health>");
            table.AddEntry("charm_block", "Amuleto de Bloqueio");
            table.AddEntry("charm_block_text", "Comece com <1><keyword=block>");
            table.AddEntry("charm_keychain", "Amuleto Risada");
            table.AddEntry("charm_keychain_text", "Remova o limite de amuletos");
            table.AddEntry("charm_bolster", "Amuleto Framboesa");
            table.AddEntry("charm_bolster_text", "<+1><keyword=attack>\r\n<+3><keyword=health>");
            table.AddEntry("charm_cherry", "Amuleto Morango");
            table.AddEntry("charm_cherry_text", "Quando consumido, adicione <+2><keyword=health> a todos aliados");
            table.AddEntry("charm_bright", "Amuleto Moko");
            table.AddEntry("charm_bright_text", "Adicione <x1><keyword=frenzy>\r\n<-1><keyword=attack>\r\n<-1><keyword=health>");
            table.AddEntry("charm_greed", "Amuleto da Ganância");
            table.AddEntry("charm_greed_text", "Ganhe <keyword=greed>");
            table.AddEntry("charm_consume", "Amuleto Pão");
            table.AddEntry("charm_consume_text", "Ganhe <keyword=consume>");
            table.AddEntry("charm_spark", "Amuleto Centelha");
            table.AddEntry("charm_spark_text", "Ganhe <keyword=spark>");
            table.AddEntry("charm_reduce_attack", "Amuleto da Fraqueza");
            table.AddEntry("charm_reduce_attack_text", "<-1><keyword=attack>");
            table.AddEntry("charm_reduce_frenzy", "Amuleto da Preguiça");
            table.AddEntry("charm_reduce_frenzy_text", "Reduza <keyword=frenzy> em <x1>");
            table.AddEntry("charm_aimless", "Amuleto Peixe");
            table.AddEntry("charm_aimless_text", "Ganhe <keyword=aimless>");
            table.AddEntry("charm_reduce_effects", "Amuleto Geladura");
            table.AddEntry("charm_reduce_effects_text", "Reduza os efeitos em <1>");
            table.AddEntry("charm_reduce_health", "Amuleto Coração Frio");
            table.AddEntry("charm_reduce_health_text", "<-3><keyword=health>");
            table.AddEntry("charm_increase_counter", "Amuleto Sol Congelado");
            table.AddEntry("charm_increase_counter_text", "Aumente <keyword=counter> em <1>");
            table.AddEntry("charm_gain_demonize", "Amuleto Mau-Olhado");
            table.AddEntry("charm_gain_demonize_text", "Comece com <1><keyword=demonize>");
            table.AddEntry("charm_gain_snow", "Amuleto Ooba");
            table.AddEntry("charm_gain_snow_text", "Comece com <3><keyword=snow>");
            table.AddEntry("charm_gain_frost", "Amuleto Lobo Congelado");
            table.AddEntry("charm_gain_frost_text", "Comece com <4><keyword=frost>");
            table.AddEntry("charm_reduce_scrap", "Amuleto Quebrado");
            table.AddEntry("charm_reduce_scrap_text", "<-1><keyword=scrap>");
            table.AddEntry("charm_remove_effects", "Amuleto Caveira de Lula");
            table.AddEntry("charm_remove_effects_text", "Comece com <4><keyword=null>");
            table.AddEntry("crown_hogheaded", "Coroa Javali");
            table.AddEntry("crown_hogheaded_text", "Cartas com Coroa são sempre jogadas no início da batalha\r\n\r\nGanhe <keyword=pigheaded>\r\n\r\n<Não pode ser removida>");
            table.AddEntry("crown_increase_counter", "Coroa Congelada");
            table.AddEntry("crown_increase_counter_text", "Cartas com Coroa são sempre jogadas no início da batalha\r\n\r\nAumenta <keyword=counter> by <1>\r\n\r\n<Não pode ser removida>");
            table.AddEntry("crown_demonize", "Coroa Demoníaca");
            table.AddEntry("crown_demonize_text", "Cartas com Coroa são sempre jogadas no início da batalha\r\n\r\nComece com <1><keyword=demonize>\r\n\r\n<Não pode ser removida>");
            table.AddEntry("crown_take_blings", "Coroa Gobling");
            table.AddEntry("crown_take_blings_text", "Cartas com Coroa são sempre jogadas no início da batalha\r\n\r\nGaste <1><keyword=blings> quando ativar\r\n\r\n<Não pode ser removida>");
            table.AddEntry("crown_brittle", "Coroa de Vidro");
            table.AddEntry("crown_brittle_text", "Cartas com Coroa são sempre jogadas no início da batalha\r\n\r\n<-2><keyword=health>\r\n\r\n<Não pode ser removida>");
            table.AddEntry("crown_reduce_attack", "Coroa Fraca");
            table.AddEntry("crown_reduce_attack_text", "Cartas com Coroa são sempre jogadas no início da batalha\r\n\r\n<-1><keyword=attack>\r\n\r\n<Não pode ser removida>");
            table.AddEntry("crown_ink", "Coroa Caveira de Lula");
            table.AddEntry("crown_ink_text", "Cartas com Coroa são sempre jogadas no início da batalha\r\n\r\nStart with <3><keyword=null>\r\n\r\n<Não pode ser removida>");
            table.AddEntry("crown_cursed", "Coroa Amaldiçoada");
            table.AddEntry("crown_cursed_text", "Cartas com Coroa são sempre jogadas no início da batalha\r\n\r\nReduza\r\n<keyword=attack> e <keyword=health> em <1> se possível\r\n\r\n<Não pode ser removida>");
            table.AddEntry("charm_trash_text2", "Ganhe <keyword=trash 1> e <keyword=draw 1>");
            table.AddEntry("charm_peppernut_text2", "Troque efeitos de <keyword=shell> por <keyword=spice> e vice-versa");
            table.AddEntry("charm_trash2", "Amuleto Engrenagem");
            table.AddEntry("charm_zoomlin", "Amuleto Zoomlin");
            table.AddEntry("charm_zoomlin_text", "Quando jogado(a), adicione<keyword=zoomlin> a uma carta aleatória na mão");
            table.AddEntry("charm_bootleg", "Amuleto Jimbo");
            table.AddEntry("charm_bootleg_text", "<keyword=health><keyword=attack><keyword=counter> são aleatorizados entre <2> e <5>");
            table.AddEntry("charm_hunger", "Amuleto Zoomlin");
            table.AddEntry("charm_hunger_text", "Ganhe <keyword=zoomlin> e <keyword=consume>");
            table.AddEntry("charm_shadeclay", "Lesma Sombra");
            table.AddEntry("charm_shadeclay_text", "Aplique o mesmo efeito que o último <Amuleto> aplicou a carta");
            table.AddEntry("charm_flameberry", "Amuleto Baga Queimada");
            table.AddEntry("charm_flameberry_text", "Reduza <keyword=health> pela metade\r\nAumente <keyword=attack> igual <keyword=health>");
            table.AddEntry("charm_glass", "Amuleto Vidro do Sol");
            table.AddEntry("charm_glass_text", "Reduza <keyword=counter> pela metade\r\nDefina <keyword=health> para <1>\r\nGanhe <keyword=fragile>");
            table.AddEntry("charm_plink", "Amuleto Besouro");
            table.AddEntry("charm_plink_text", "<+1><keyword=attack>\r\nNão ocupa um espaço de amuleto");
            table.AddEntry("charm_blue", "Amuleto Coração Congelado");
            table.AddEntry("charm_blue_text", "Comece com <2><keyword=block>\r\nReduza <keyword=health> to <1>");
            table.AddEntry("charm_muncher", "Amuleto Devorador");
            table.AddEntry("charm_muncher_text", "Destrua permanentemente a carta quando equipado");
            table.AddEntry("charm_heartmist", "Amuleto da Nutrição");
            table.AddEntry("charm_heartmist_text", "Quando atingido(a), restaure <keyword=health> em <1>");
            table.AddEntry("charm_heartburn", "Amuleto Baga Preciosa");
            table.AddEntry("charm_heartburn_text", "Ganhe <keyword=heartburn>");
            table.AddEntry("charm_mime", "Amuleto Mímico");
            table.AddEntry("charm_mime_text", "Substitua os efeitos atuais com os de um <Companheiro> aleatório do seu deck ou da reserva");
            table.AddEntry("charm_shredder", "Amuleto do Ajuste");
            table.AddEntry("charm_shredder_text", "Substitua efeitos de <keyword=recycle> com <keyword=trash> e vice-versa");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.UpgradeCard_title", "Amuleto da Ascensão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.UpgradeCard_text", "Ascende um aliado com <keyword=wildfrost.jacorb.snowfall.upgradeable>, mas faz ele incapaz de ter amuletos");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.LuminCharm_title", "Amuleto da Luminância");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.LuminCharm_text", "Comece com <1> <keyword=lumin>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.TarredHeartCharm_title", "Amuleto Coração Sombrio");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.TarredHeartCharm_text", "Ganhe <keyword=summoned>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.MoldyBreadCharm_title", "Amuleto Pão Mofado");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.MoldyBreadCharm_text", "<-1> <keyword=attack>\r\nGanhe <2> <keyword=wildfrost.jacorb.snowfall.limit>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.HandyCharm_title", "Amuleto Mão-Amiga");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.HandyCharm_text", "Adiciona uma Mão Joken a sua mão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.MirrorCharm_title", "Amuleto Espelho");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.MirrorCharm_text", "Quando um aliado é atingido, tome <1> de dano");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.GamblerCharm_title", "Amuleto do Apostador");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.GamblerCharm_text", "Perca <5> <keyword=blings>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BarrelCharm_title", "Amuleto Barril");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BarrelCharm_text", "Aplique <2> <keyword=explode>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.HailCharm_title", "Amuleto Granizo");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.HailCharm_text", "Quando atingido(a), ganhe <1> <keyword=snow>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.PillowCharm_title", "Amuleto Travesseiro");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.PillowCharm_text", "Começe com <1> <keyword=haze>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.HeroicCharm_title", "Amuleto Heroico");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.HeroicCharm_text", "Ganhe <keyword=frontline>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.RomeoCharm_title", "Amuleto Romeo");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.RomeoCharm_text", "Quando um aliado na faixa é morto, se sacrifique");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.HeavyCharm_title", "Amuleto Pesado");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.HeavyCharm_text", "Ocupa <2> espaços de amuletos");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.MockingCharm_title", "Amuleto Zombetão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.MockingCharm_text", "Diminua o  <keyword=counter> em <1>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BullCharm_title", "Amuleto Touro");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.BullCharm_text", "Dê <keyword=attack> adicional igual a <keyword=frenzy>\r\n<+1><keyword=counter>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SuperstarCharm_title", "Amuleto Superstar");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SuperstarCharm_text", "Equanto não estiver ferido(a), <keyword=frenzy> é aumentada em <1>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.MoltenPepperCharm_title", "Amuleto Pimenta Derretida");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.MoltenPepperCharm_text", "Quando ganhar <keyword=spice>, ganhe <1> a menos mas diminua o <keyword=counter> em <1>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.PhoenixCharm_title", "Amuleto Fênix");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.PhoenixCharm_text", "Quando um aliado é atingido, ganhe <1> <keyword=spice>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SmoreCharm_title", "Amuleto Smore");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.SmoreCharm_text", "Em abates, aplique <keyword=zoomlin> a uma carta aleatória na mão");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.DeepclawCharm_title", "Amuleto Garra Brilhante");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.DeepclawCharm_text", "Quando posto(a), ganhe <7> <keyword=spice>");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.CheeseCharm_title", "Amuleto Queijo");
            table.AddEntry("Wildfrost.Jacorb.Snowfall.CheeseCharm_text", "<-1> <keyword=attack>\r\nGanhe <keyword=wildfrost.jacorb.snowfall.sneak>");
            table.AddEntry("absentabigail.wildfrost.blahaj.CardUpgradeShark_title", "Amuleto Tubarão");
            table.AddEntry("absentabigail.wildfrost.blahaj.CardUpgradeShark_text", "Ganhe 1 <keyword=absentabigail.wildfrost.blahaj.calm> em abates");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeMagnemite_title", "Amuleto Magnemite");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeMagnemite_text", "Aplique <1> <keyword=shroom>/<keyword=overload>/<keyword=weakness>");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradePluck_title", "Amuleto Murkrow");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradePluck_text", "Ganhe <keyword=pluck>\r\n<+2><keyword=attack>\r\nCA-CAW");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeSketch_title", "Amuleto Smeargle");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeSketch_text", "Ganhe <keyword=sketch> <1>, <keyword=pigheaded> e reduza <keyword=attack> em <2>");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeTaunt_title", "Amuleto Shieldon");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeTaunt_text", "Ganhe <keyword=taunt>\r\n<+3><keyword=health>");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeTyrunt_title", "Amuleto Tyrunt");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeTyrunt_text", "Ganhe <keyword=wild>\r\nAplique <keyword=wild>\r\nSEJA <SELVAGEM>");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeRevive_title", "Amuleto Reviver");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeRevive_text", "Ganhe <keyword=revive>");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeThickClub_title", "Taco Grosso");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeThickClub_text", "Ganhe 'aumente a <keyword=health> or <keyword=attack> do <Marowak> em <1>'\r\n\r\nAleatoriamente a cada ativação");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CrownSlowking_title", "Coroa de Shellder");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CrownSlowking_text", "Cartas com Coroa são sempre jogadas no início da batalha\r\n\r\nAumente <keyword=counter> em <2>");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.defendercharm_title", "Amuleto do Defensor");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.defendercharm_text", "Ganhe <keyword=frontline>, quando atingido(a) ganhe <1><keyword=shell>");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.voidcharm_title", "Amuleto do Vazio");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.voidcharm_text", "Ganhe <keyword=vibeneutral.wildfrost.hollowfrost.void> 3, aumente o efeito de um item em <1>");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.lifebloodcharm_title", "Amuleto da Bênção");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.lifebloodcharm_text", "Ganhe 6<keyword=health> e <keyword=fragile>");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.grimmcharm_title", "Amuleto do Pesadelo");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.grimmcharm_text", "Ganhe <keyword=frenzy> em abates");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.soulcharm_title", "Amuleto da Alma");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.soulcharm_text", "Dê <keyword=vibeneutral.wildfrost.hollowfrost.soul> a um item");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.focuscharm_title", "Amuleto do Foco");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.focuscharm_text", "Ganhe <keyword=vibeneutral.wildfrost.hollowfrost.focus>");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.pridecharm_title", "Amuleto do Orgulho");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.pridecharm_text", "Ganhe <keyword=vibeneutral.wildfrost.hollowfrost.pride>\r\nDefina <keyword=attack> para 3 \r\nGanhe <keyword=frenzy>");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.compasscharm_title", "Amuleto Bússola");
            table.AddEntry("vibeneutral.wildfrost.hollowfrost.compasscharm_text", "Quando o deck é reembaralhado, fique no topo");
            table.AddEntry("bethanw10.wildfrost.allcharms.CardUpgradeArrowCharm_title", "Amuleto Flecha");
            table.AddEntry("bethanw10.wildfrost.allcharms.CardUpgradeArrowCharm_text", "Ganhe <keyword=longshot>\r\n<+1><keyword=attack>");
            table.AddEntry("bethanw10.wildfrost.allcharms.CardUpgradeCherry_title", "Amuleto Cereja");
            table.AddEntry("bethanw10.wildfrost.allcharms.CardUpgradeCherry_text", "Ganhe <keyword=bethanw10.wildfrost.allcharms.amplify>");
            table.AddEntry("bethanw10.wildfrost.allcharms.CardUpgradeGrog_title", "Amuleto Grog");
            table.AddEntry("bethanw10.wildfrost.allcharms.CardUpgradeGrog_text", "Aumenta o <keyword=counter> em <1>\r\nQuando atingido(a), diminua o <keyword=counter> em 1");
            table.AddEntry("bethanw10.wildfrost.allcharms.CardUpgradeInkcap_title", "Amuleto Chapéu-tinta");
            table.AddEntry("bethanw10.wildfrost.allcharms.CardUpgradeInkcap_text", "Troque os efeitos de <keyword=null> por <keyword=shroom> e vice-versa");
            table.AddEntry("bethanw10.wildfrost.allcharms.CardUpgradeMakoko_title", "Amuleto Makoko");
            table.AddEntry("bethanw10.wildfrost.allcharms.CardUpgradeMakoko_text", "Ganhe +<1><keyword=attack> quando atacar\r\nDefina <keyword=attack> para <0>");
            table.AddEntry("bethanw10.wildfrost.allcharms.CardUpgradeScales_title", "Amuleto Balança");
            table.AddEntry("bethanw10.wildfrost.allcharms.CardUpgradeScales_text", "Defina <keyword=attack>, <keyword=counter> e <keyword=health>/<keyword=scrap> para a média dos valores");
            table.AddEntry("bethanw10.wildfrost.allcharms.CardUpgradeShadeHeart_title", "Amuleto Coração Sombra");
            table.AddEntry("bethanw10.wildfrost.allcharms.CardUpgradeShadeHeart_text", "Ganhe <keyword=summoned>\r\n<-1><keyword=health>\r\n<+1><keyword=attack>\r\n<-1><keyword=counter>");
            table.AddEntry("bethanw10.wildfrost.allcharms.CardUpgradeScissors_title", "Amuleto Tesoura");
            table.AddEntry("bethanw10.wildfrost.allcharms.CardUpgradeScissors_text", "Remove todos os amuletos, exceto outros Ameletos Tesoura\r\nNão ocupa um espaço de amuleto");
            table.AddEntry("bethanw10.wildfrost.allcharms.CardUpgradeBell_title", "Amuleto Sino");
            table.AddEntry("bethanw10.wildfrost.allcharms.CardUpgradeBell_text", "Adiciona o contador do Sino de Recompra ao <keyword=attack>");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeConduit_title", "Amuleto Raikou");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeConduit_text", "Aplique <1><keyword=jolted> e ganhe <keyword=conduit><color=#F99C61>: Ative</color>");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeBackBurn_title", "Amuleto Entei");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeBackBurn_text", "Quando atingido(a), aplique <keyword=burning> equivalente ao atacante");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeJuice_title", "Amuleto Suicune");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeJuice_text", "Começe com <4><keyword=spicune>");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeSacredAsh_title", "Amuleto Ho-Oh");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeSacredAsh_text", "Quando uma unidade com amuleto é destruída, adicione <keyword=revive> a todos aliados");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeUturn_title", "Amuleto Masquerain");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeUturn_text", "Ganhe <keyword=uturn>");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeResist_title", "Amuleto Latias");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeResist_text", "Ganhe <keyword=resist> <1>");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeCharged_title", "Amuleto Latios");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeCharged_text", "Ganhe <x1><keyword=frenzy> enquanto o <Sino de Recompra> estiver carregado");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeDuplicate_title", "Amuleto Cresselia");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeDuplicate_text", "Duplique uma carte de item");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeCurse_title", "Amuleto Darkrai");
            table.AddEntry("websiteofsites.wildfrost.pokefrost.CardUpgradeCurse_text", "Ganhe <keyword=curseoffrenzy>");
        }
    }
}